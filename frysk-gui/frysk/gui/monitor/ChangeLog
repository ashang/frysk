2006-04-25  Sami Wagiaalla  <swagiaal@redhat.com>

	* CheckedListView.java (getCellRendererToggle): New function to
	expose the local CellRendererToggle.
	Removed getToggleDC.

2006-04-25  Phil Muldoon  <pmuldoon@redhat.com>

	* CheckedListView.java (addToggleListener):  Added. Temporarily
	allow listener injection.

2006-04-24  Sami Wagiaalla  <swagiaal@redhat.com>

	* CheckedListView.java : New file. A ListView with checkboxes.
	(isChecked): new function.
	* ListView.java : Changed constructor to allow children to
	extend functionality of this widget.
	
2006-04-21  Sami Wagiaalla  <swagiaal@redhat.com>

	* ListView.java (getSelectedObjects): Fixed a small bug, and 
	made the function return an iterator instead of array.
	* observers/ObserverManager.java: Refactored code for insuring
	unique elements to UniqueHashMap.
	* filters/FilterPoint.java: Removing saving/loading, it is 
	handled by parent.
	* actions/ActionPoint.java: Ditto
	* UniqueHashMap.java: New file. Special kind of hashtable for
	ensuring that each key is only used once.
	* ObservableLinkedList.java: Added saveing/loading handling.
	* LiaisonPoint.java: Moved saving/loading code to 
	ObservableLinkedList.
	* GuiObject.java: Set the save boolean to true by default.
	

2006-04-18  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverManager.java : Added a hash table that
	enables ObserverManager to ensure that observers added
	have unique names. 
	(loadObservers): ignores hidden files starting with .* .

2006-04-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Fixed copy constructor, it
	used to add a logging action event thought it is copied
	resulting in tow logging actions in a loaded observer.
	* actions/PrintTask.java: Fixed action name.
	* actions/PrintProc.java: ditto.
	* ObserversDialog.java: Changed the way undo is implemented.
	Fixed some problems with saving user changes.
	* MenuBar.java: Removed handling for old Custom Observers
	MenuItem.
	* EditObserverDialog.java: Removed some debug output.
	* ObserverItemsTable.java: Ditto.

2006-04-12  Adam Jocksch  <ajocksch@redhat.com>

	* WindowManager.java (initRegisterWindow): Added.
	(save): Now saves register window as well.
	(load): Now loads register window as well.

2006-04-11  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/TaskProcNameFilter.java: Implemented
	getArgumentCompletion. It returns null ATM since there is no 
	list of possible arguments.
	* filters/ProcNameFilter.java: Ditto.
	* filters/IntFilter.java: Ditto.
	* actions/Stop.java: Ditto.
	* actions/ShowSourceWin.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/LogAction.java: Ditto.
	* actions/GenericAction.java: Ditto.
	* filters/FilterPoint.java: Removed filterList; used itemList
	from Parent.
	* filters/TaskFilterPoint.java: Ditto.
	* filters/IntFilterPoint.java: Ditto.
	* filters/ProcFilterPoint.java: Ditto.
	* actions/AddTaskObserverAction.java: Added implementation for
	return a completionsList of a list of Observers from the 
	ObserverManager.
	* ObserversDialog.java: Added support to move selection to the 
	second last element when the last element is deleted.
	* ObserverItemsTable.java (removeRow): renamed row into itemRow.
	* ObserverItemRow.java: Added support for retriving and setting
	completion list for the argumentEntry.
	* LiaisonItem.java: Added abstract getArgumentCompletionsList().
	* EditObserverDialog.java (comboBoxEvent): Added calls to set
	observer for filtersTable, and ActionsTable.
	* ProgramObserver.java: Implemented getArgumentCompletionList().
	* CompletingEntry.java: New file. A child of gnu.gtk.Entry wich
	supports autocompletion from an ObservableLinkedList.
	* Combo.java: Renamed filterPoint, and filter to liaisonPoint,
	and item repectively.

2006-04-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Added getCurrentActionCombos
	* observers/ObserverManager.java: Added getObserverByName, to
	retrieve observer prototypes by name.
	* filters/Filter.java: Added filterBooleans, setter and getter
	fucntions.
	* filters/ComboFactory.java: Added support for calculation
	actionCombos.
	* actions/PrintTask.java: Implemented (set/get)Argument.
	* actions/ShowSourceWin.java: Ditto.
	* actions/Stop.java: Ditto
	* actions/Resume.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/LogAction.java: Added implementation of set, and get 
	Argument; a user can now add a comment to be logged with the
	observer information.
	* actions/GenericAction.java: Added implementation of getCopy, 
	setArgument, and setArgumentto reliefe children of implementing 
	this if they do not need to.
	* actions/AddTaskObserverAction.java: Renamed StickyTaskObserver
	to this.. much better name ay?!.
	* actions/ActionManager.java: Added a LogAction prototype to
	GenericActions, and an AddTaskObserver prototype to TaskActions
	* StatusWidget.java: removed getCopy implenentation from TimeLineAction
	* ProgramObserver.java: Implemented (get/set)Argument.
	* LiaisonItem.java: Added abstract functioins for getting and
	setting item arguments, so that it is now common to both filters
	and actions.
	* EditObserverDialog.java: Added instanciation for ActionsTable,
	and setting of current observer for ActioinsTable.
	* Combo.java: Renamed FilterCombo to this. This can now be used
	for both FilterCombos, and ActionCombos.
	* ObserverItemRow.java: New file. Common root of FilterRow, and
	ActionRow.
	* ActionRow.java: New file. Handles ActionRows, inherits from
	ObserverItemRow.
	* FilterRow.java: Moved common code to ObserverItemRow.
	* ObserverItemsTable.java: New file. This is a result of a refactor
	to group the common code between FiltersTable, and ActionsTable into
	a common root.
	* FiltersTable.java: Moved common code up to ObserverItemsTable.
	Added getCombos which retrieves filter combos from current
	Observer.
	* ActionsTable.java: New file. Inherits common code from new 
	ObserverItemsTable, handles ActionRows. 

2006-04-06  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcWiseDataModel.java (ProcCreatedObserver): Add data TreeIter checks
	to ensure data validity on process addition. 
	(ProcDestroyedObserver): Add data TreeIter checks
	to ensure data validity on Process removal. 

2006-04-02  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcWiseDataModel.java (dumpSelectedProcesses): Removed
	debug comments.

2006-04-01  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcWiseDataModel.java (setSelected): Added conditional
	to set store's children.
	(dumpSelectedProcesses): Added.

2006-03-30  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcWiseTreeView.java (mountDataModel): Added a filter
	to hide any selected items (so they cannot be selected again).

2006-03-30  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/FilterManager.java: Added getIntFilters(), and a
	list of intFilters.
	* actions/GenericAction.java: removed abstract getCopy().
	* filters/FilterPoint.java: Changed to inheret from
	LiaisonPoint, and removed redundent code.
	* actions/ActionPoint.java: Ditto.
	* actions/Action.java: Refactored to inheret form
	LiaisonItem, and removed redundent code.
	* filters/Filter.java: Ditto.
	* ObjectFactory.java: Removed debugoutput.
	* actions/GenericActionPoint.java: implemented getApplicableItems 
	* actions/TaskActionPoint.java: Ditto.
	* ActionsWidget.java: Changed to work with refactored
	actions.
	* actions/PrintTask.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/LogAction.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/Stop.java: Ditto.
	* filters/FilterCombo.java: Ditto.
	* filters/IntFilter.java: Ditto.
	* filters/ProcNameFilter.java: Ditto.
	* filters/TaskProcNameFilter.java: Ditto.
	* observers/ObserverRoot.java: Ditto.
	* FilterWidget.java: Ditto.
	* FilterLineWidget.java: Ditto.
	* DetailedObserverTreeView.java: Ditto.
	* StatusWidget.java: Ditto.
	* ProgramObserver.java: Ditto.

2006-03-29  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcWiseTreeView.java (ProcWiseTreeView): Change to
	accept autonomous external model, and mount that.
	* ProcWiseDataModel.java (setSelected): Added.

	* ProcWiseDataModel.java: Added selectedDC to enable
	Druid inspection of what processes are selected.
	* ProcWiseTreeView.java: Added psDataModel declaration.
	

2006-03-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/ProcNameFilter.java: Changed names so they match
	well when combined with FilterPoint names see FilterCombo
	for more info.
	* filters/FilterCombo.java: Added getters for Filter and 
	FilterPoint.
	* filters/Filter.java: Added the (set/get)Argument abstract
	functions.
	* FiltersTable.java (FilterRow): added support for showing
	and retrieving filter arguments.
	Added support for applying filters. 
	(part of fix for bz 2455).
	* observers/TaskForkedObserver.java: Ditto.

2006-03-28  Phil Muldoon  <pmuldoon@redhat.com>

	* WindowManager.java: Find new CreateSession druid.

	(initSessionDruidWindow): New.
	(initLegacyProcpopWindows): Rename from initWindow. Temporary
	until we can refactor WindowManager to properly handle
	multiple glade file sources.

2006-03-28  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Added a function to return
	applied filter combos.
	* observers/ObserverManager.java: Removed saving of observers
	when the are added to the manager. Saving is now delay until
	save is called.
	* actions/LogAction.java: Fixed copy constructor.
	* ObserversDialog.java: Now checks that ok was click in
	EditObserverDialog before it replaces old Obsever with
	the edited Observer.
	* ObjectFactory.java: Replacement of spaces
	with '_' was missing from a few functions.
	* FiltersTable.java: Added support for:
	- Adding filters to observer.
	- Showing added fitlers of observers.
	- Removing filters from observers.
	* EditObserverDialog.java: Added support for:
	- Setting observer name.
	- Showing event type (aka base observer) 
	  for existing observers.
	- Setting event type for new observers.
	
2006-03-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* FiltersTable.java: New file.

2006-03-12  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Removed debug output.
	Replaced treeStore.insertRow(parent, 0) with
	treeStore.appendRow(parent) (Fix for frysk bz 2440)... hopefully
	* EditObserverDialog.java: Added Handle for filtersTable.

2006-03-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java : added setting of threadParentDC to -1
	when not applicable, this may have been causing a NPE.
	Removed all filter related code. 
	* ProgramAddWindow.java: Removed all filter related code. 
	* ProcViewPage.java: Ditto.

2006-03-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcWiseDataModel.java : Corrected proc removal senarios
	possible fix for frysk bz 2440. 
	* ProcDataModel.java: Cleaned up reparenting code.
	Moved reparenting call to removal of main task
	part of fix for frysk bz 2440.
	Returned reparenting code to old location (when a proc is
	destroied).

2006-03-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* CustomObserverDialog.java: Added handling for okay,apply,
	and cancel.
	* observers/ObserverManager.java (getObserverCopy): Changed
	from getTaskObserverCopy to this.
	* MenuBar.java: Added handle for new observersDialog.
	* WindowManager.java: Ditto
	* EditObserverDialog.java: New file. 
	* ObserversDialog.java: New file.
	* ListView.java: Added setSelectedObject function.

2006-03-01  Sami Wagiaalla  <swagiaal@redhat.com>

	* CustomeObserverWindow.java: Changed it to work with the new
	structure for customObserverWindow in glade (Fix for text !=NULL)
	bug.
	* StatusWidget.java: Reverted accedental disabling of stripchart
	...oops :).

2006-02-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* WindowManager.java: Added handle for StartDebugSessionDialog.
	* ProcWiseTreeView.java: New class.
	* ProcWiseDataModel.java: New class.

2006-02-18  Phil Muldoon  <pmuldoon@redhat.com?

	* MainWindow.java (load): Check size and height, and 
	move x and y are valid before doing operations.
	
	* CustomeObserverWindow.java: Implement Saveable.
	Implement LifeCycleListener.
	* WindowManager.java (save): Add customObserverWindow
	to save list.
	(load): Add customObserverWindow to load list.

2006-02-18  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Replaced proc task observers with host
	task observers.

2006-02-18  Phil Muldoon  <pmuldoon@redhat.com?

	* MenuBar.java (MenuBar): Removed preferences item logic
	* observers/ObserverManager.java (initTaskObservers): Removed
	ProgramObserver for U3 release.

	* WindowManager.java (initWindows): Do not load
	ProgramAddWindow.
	* MenuBar.java (menuItemEvent): Do not close 
	ProgramAddWindow on File -> Close

	* ProcViewPage.java: Sort and Filter on new
	Boolean DataColumn.
	* ProcDataModel.java: Check thread parentage in a tree
	using a Boolean DataColumn instead of a -1 ...  +1
	model using DataColumnInt.

2006-02-16  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java : Was removing an iterator before reparenting
	its children... fixed.

2006-02-15  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Added reparent code. few minor spelling
	fixes.

2006-02-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* ObservableLinkedList.java (swap): New function swaps and old
	object for an new one and palces it at the same position.
	* DetailedObserverTreeView.java: Newly added objects are now
	automatically selected.
	Observers are added to their proper position in the list instead
	of at the end of the tree.
	* CustomeObserverWindow.java (swap): New function swaps
	a selected observer for a new one. 
	Added Handling for null selection.
	
2006-02-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskCloneObserver.java: Changed return type of
	getCopy() from TaskObserverRoot to ObserverRoot.
	* observers/TaskSyscallObserver.java: Ditto. 
	* observers/TaskTerminatingObserver.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	* observers/TaskExecObserver.java: Ditto.
	* observers/TaskObserverRoot.java: Removed getCopy().
	* observers/ObserverRoot.java: Moved getCopy up from 
	TaskObserverRoot.
	* observers/ObserverManager.java: Added baseObserver list
	for use by clients requiring base observers for reference.
	* CustomeObserverWindow.java: Made BaseObserver view watch
	baseObserver list instead of the original observer list (
	closed bz 2316).

2006-02-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverManager.java: Added deletion from disk
	after observer removal.
	* ObjectFactory.java (deleteNode): Added deletion of a node
	saved to disk.

2006-02-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* WindowManager.java: Added handle for splash screen.
	* ProcData.java: Added hack to fix multiple addition of
	and observer to a proc (last comment on 2303)..
	* GuiObject.java (GuiObject): Fixed copy constructor (was
	forgetting to copy value of saveObject).
	* CustomeObserverWindow.java: Added support for saving and 
	rolling back changes.
	* SplashScreenWindow.java: New file.
	
2006-02-09  Adam Jocksch  <ajocksch@redhat.com>

	* actions/ShowSourceWin.java (ShowSourceWin): Changed the menu 
	item for the source window launcher to indicate that this is only
	sample code and isn't meant to represent the state of execution of
	the program.

2006-02-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java: Removed limitation from StripChard widget
	closed (bz 2303).
	* ObservableLinkedList.java: Overwrote the clear() function.
	* MenuBar.java (menuItemEvent): Removed creation of a new observer
	upon showing the CustomObserverWindow.
	* DetailedObserverTreeView.java: Changed constructor to take
	in a list of observers so that it can handle a scratch list.
	* CustomeObserverWindow.java: Added handling for roling back
	editing.

2006-02-09  Phil Muldoon  <pmuldoon@redhat.com>

	* MenuBar.java (menuItemEvent): Added about window
	menubar event.
	* AboutWindow.java (AboutWindow): Added.
	* WindowManager.java (initWindows): Added About
	window to window manager.

2006-02-08  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcMenu.java (popup): Remove PID echo.

	* DetailedObserverTreeView.java: Comment out
	System.out.println statements used for debugging.
	* DynamicWidget.java: Ditto.
	* ObjectFactory.java: Ditto.
	* ProcViewPage.java: Ditto
	* TaskData.java: Ditto.
	* TearOffNotebook.java: Ditto.
	* ThreadMenu.java: Ditto.
	* actions/LogAction.java: Ditto.
	* filters/Filter.java: Ditto.
	* observers/ObserverManager.java: Ditto.
	* observers/TaskCloneObserver.java (updateCloned):Ditto.
	* observers/TaskExecObserver.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	
	* MainWindow.java (MainWindow): Removed programs tab
	from GUI.
	
	* PreferencesWindow.java: Revert i8n.
	* ProgramAddWindow.java: Ditto.
	* ProgramData.java: Ditto.
	* ProcDataModel.java: Ditto.
	* ProcViewPage.java: Ditto.
	* ProgramDataModel.java: Ditto.
	* ProgramViewPage.java: Ditto.
	* CustomeObserverWindow.java: Ditto.
	* TrayIcon.java: Ditto.
	* SimpleComboBox.java: Ditto.
	* ProcMenu.java: Ditto.
	* EventLogger.java: Ditto.
	* GuiData.java: Ditto.
	* MainWindow.java: Ditto.
	* TaskStatusWidget.java: Ditto.
	* ListView.java: Ditto.
	* InfoWidget.java: Ditto.
	* ThreadMenu.java: Ditto.
	* DetailedObserverTreeView.java: Ditto.
	* StatusWidget.java: Ditto.
	* FilterWidget.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/ShowSourceWin.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/ActionManager.java: Ditto.
	* actions/ActionPoint.java: Ditto.
	* actions/LogAction.java: Ditto.
	* actions/StickyObserverAction.java: Ditto.
	* actions/Stop.java: Ditto.


2006-02-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverManager.java: Renamed saveObservers to save.
	Removed finalize function.
	* actions/ActionManager.java: Some prototypes were being added
	to the wrong list...fixed.
	* ActionsWidget.java (selectionChangedEvent): Added a null check.

2006-02-06  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Added no argument constructor for
	loading.
	* observers/ObserverManager.java: Added saveObserver function.
	* actions/ActionManager.java (getGenericActions): was returning
	the wrong list...fixed.

2006-02-06  Phil Muldoon  <pmuldoon@redhat.com>

	* StatusWidget.java (StatusWidget): Added border width 5
	to several frames and hboxes
	
	* MenuBar.java (menuItemEvent): Added File -> Close handler

2006-02-06  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcViewPage.java (buttonEvent): Removed 'Hold' button.
	Added refresh time saving.

2006-02-05  Andrew Cagney  <cagney@redhat.com>

	* MainWindow.java: Replace FryskGui, with Gui.
	* ProcDataModel.java: Ditto.
	* ProcViewPage.java: Ditto.
	* ProgramData.java: Ditto.
	* ProgramAddWindow.java: Ditto.

	* observers/ObserverManager.java: Replace FryskGui.FRYSK_CONFIG
	with Config.FRYSK_DIR.
	* ProgramData.java: Ditto.
	* ProgramViewPage.java: Ditto.

2006-02-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* ListView.java: Added proper observer removal upon list
	clearing (fixed double action addition bug).
	* DetailedObserverTreeView.java : Removed debug output. 
	* FilterLineWidget.java : Ditto.
	* ActionsWidget.java: Now clears lists upon selection change.
	Removed debug output.

2006-02-03  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Added toString method.
	* filters/FilterPoint.java: Added toString method.
	* actions/TaskActionPoint.java (TaskActionPoint): eplaced
	ActionPoint argument in copy constructor with correct
	TaskActionPoint.
	* actions/GenericActionPoint.java (GenericActionPoint): replaced
	ActionPoint argument in copy constructor with correct
	GenericActionPoint.
	* actions/ActionPoint.java: Added toString method.
	* ObservableLinkedList.java: Fixed copy constructor to dynamically
	call copy constructor of each element.
	* FilterLineWidget.java: Removed debug output.
	* DetailedObserverTreeView.java: Removed debug output. Added
	code for properly removing observers from removed lists.

2006-02-02  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskCloneObserver.java: Fixed some bugs in copy
	constructor.
	* observers/TaskObserverRoot.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	* observers/TaskExecObserver.java: Ditto.
	* ObserversMenu.java: Changed TaskObserverRoot to ObserverRoot
	was casing an npe if you right click after creating a new
	observer.
	* DetailedObserverTreeView.java: Fixed npe during removal
	of and observer from Manager.

2006-02-01  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Update, use .requestRefreshXXX instead of
	.requestRefresh.

2006-02-01  Phil Muldoon  <pmuldoon@redhat.com>

	* actions/Stop.java: Externalize all translation strings.
	* actions/StickyObserverAction.java: Ditto.
	* actions/ShowSourceWin.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/LogAction.java: Ditto.
	* actions/ActionPoint.java: Ditto.
	* actions/ActionManager.java: Ditto.
	
	* TrayIcon.java: Externalize all translation strings.
	* ThreadMenu.java: Ditto.
	* TaskStatusWidget.java: Ditto.
	* StatusWidget.java: Ditto.
	* SimpleComboBox.java: Ditto.
	* ProgramViewPage.java: Ditto.
	* ProgramDataModel.java: Ditto.
	* ProgramData.java: Ditto.
	* ProgramAddWindow.java: Ditto.
	* ProcViewPage.java: Ditto.
	* ProcMenu.java: Ditto.
	* ProcDataModel.java: Ditto.
	* PreferencesWindow.java: Ditto.
	* MainWindow.java: Ditto.
	* ListView.java: Ditto.
	* InfoWidget.java: Ditto.
	* GuiData.java: Ditto.
	* FilterWidget.java: Ditto.
	* EventLogger.java: Ditto.
	* DetailedObserverTreeView.java: Ditto.
	* CustomeObserverWindow.java: Ditto.

2006-01-31  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Update, use renamed observableProcAddedXXX,
	and observableProcRemovedXXX.

2006-01-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* DetailedObserverTreeView.java (getSelectedObserver): Fixed npe
	and all other selection bugs.

2006-01-26  Adam Jocksch  <ajocksch@redhat.com>

	* TrayIcon.java (TrayIcon): First parameter is now the tooltip to have
	over the tray icon.
	(setContents): Now adds a tooltip to the icon.

2006-01-26  Sami Wagiaalla  <swagiaal@redhat.com>

	* SaveableXXX.java : removed setSaveObject. added 
	{do/dont}SaveObject.
	* ObjectFactory.java (saveObject): Removed some debug output.
	Added check for invalid saved Observer files.
	updated to match SaveableXXX refactor.
	* GuiObject.java: updated to match SaveableXXX refactor.
	* observers/ObserverRoot.java: Ditto.
	* observers/ObserverManager.java: Ditto.
	* actions/ActionPoint.java: Ditto.
	* filters/FilterPoint.java: Ditto.
	
2006-01-24  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverManager.java (loadObservers): Now saves
	observers when they are added to the manager and loads them
	when instantiated.
	* ObjectFactory.java (importNode): Added importing and 
	exporting to objects save to a node to disk.

2006-01-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/Filter.java: Added no argument constructor for
	instantiation during load time. Implemented SaveableXXX.
	* filters/ProcNameFilter.java: Ditto.
	* filters/IntFilter.java: Ditto.
	* actions/GenericAction.java: Added no argument constructor for
	instantiation during load time.
	* actions/TaskActionPoint.java: Ditto.
	* actions/TaskAction.java: Ditto.
	* actions/ProcAction.java: Ditto.
	* actions/GenericActionPoint.java: Ditto.
	* filters/IntFilterPoint.java: Ditto.
	* filters/ProcFilter.java: Ditto.
	* filters/ProcFilterPoint.java: Ditto.
	* filters/TaskProcNameFilter.java: Ditto.
	* filters/TaskFilterPoint.java: Ditto.
	* filters/TaskFilter.java: Ditto.
	* filters/FilterPoint.java: Removed setNumberInName. Added save/load
	of contained elements.
	* actions/ActionPoint.java: Ditto.
	* SaveableXXX.java: Added boolean saveObject() which returns
	weather the object should be saved or not.
	* ObjectFactory.java: New file.
	* GuiObject.java: Implemented SaveableXXX. Added setSaveObject
	to specify weather the object is to be saved or not.

2006-01-19  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ActionPoint.java: Added save/load functions.
	* filters/FilterPoint.java: Ditto.
	* observers/ObserverRoot.java: Ditto. 
	* SaveableXXX.java: New file.

2006-01-18  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/FilterPoint.java (removeFilter): Added number of added
	actions to the name.
	* actions/ActionPoint.java (ActionPoint): Ditto.
	* DetailedObserverTreeView.java (getSelectedObserver): Added code
	to populate the tree with an observers action and filters.

2006-01-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* DetailedObserverTreeView.java (addObserverRoot): Embelishing view:
	now showes filterPoints, and actionPoints of an observer.

2006-01-11  Andrew Cagney  <cagney@redhat.com>

	* actions/Resume.java: Replace call to Proc
	.requestAttachedContinue with throw.

2006-01-05  Andrew Cagney  <cagney@redhat.com>

	* TrayIcon.java: Import org.gnu.gtk.frysk.EggTrayIcon.
	* EggTrayIcon.java: Delete.  Moved to frysk-gtk/.

2005-12-19  Adam Jocksch  <ajocksch@redhat.com>

	* TrayIcon.java (TrayIcon): Only constructor now takes a name and a
	boolean, which reflects whether the icons should be flashing.
	(setContents): Refactored to only take an Icon an no longer assumes
	that the tray icon was empty to begin with.
	(isActive): Added.
	(setActive): Added.

2005-12-14  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java (TimelineAction): Removed all references to
	logTextView.

2005-12-13  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Update, Proc .observableTaskAdded renamed
	to .observableTaskAddedXXX.

2005-12-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java: Integrated stripchart widget.

2005-12-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskSyscallObserver.java: Added setInfo call.
	* observers/TaskForkedObserver.java: ditto.
	* observers/TaskExecObserver.java: ditto.
	* observers/TaskCloneObserver.java: ditto.
	* observers/TaskTerminatingObserver.java (TaskTerminatingObserver): 
	* observers/ObserverRoot.java: Added LogAction by default. Added
	setInfo function.
	* actions/Action.java: Removed abstract execute() function.
	* actions/ProcAction.java: Removed declaration for execute()
	function.
	* actions/TaskAction.java: Ditto
	* actions/GenericActionPoint.java (runActions): Added observer as 
	an argument.
	* actions/ActionPoint.java (addAction): replace abstract addAction
	with proper declaration.
	* actions/LogAction.java: New file.
	* actions/GenericAction.java: New file.
	* StatusWidget.java: Replaced Action declarations with GenericAction.
	* ProcDataModel.java: Renamed proc.observableTaskRemovedXXX to
	 proc.observableTaskRemoved.
	* LogWidget.java (LogWidget): Removed old logging code. Added print
	function to print to logWidget.
	* EventLogger.java: Converted EventLogger to a manager for event
	loggers (created singleton instance, and added getEventLogger()).

2005-12-13  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Update, Proc .observableTaskRemoved renamed
	to .observableTaskRemovedXXX.

2005-12-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskSyscallObserver.java (TaskSyscallObserver): initialized
	exitingTaskActionPoint... ops.
	* observers/TaskForkedObserver.java: Removed forkedActions list.
	* observers/ObserverRoot.java: Removed addAction to force clients to
	explicitly select genericActionPoint.
	* observers/ObserverManager.java: replaced old code with StickyObserver
	action... not tested yet.
	* actions/TaskActionPoint.java (addAction): Implmented addAction().
	* actions/TaskAction.java (TaskAction): Added copy Constructor.
	* actions/Stop.java: Implemented getCopy().
	* actions/ShowSourceWin.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/GenericActionPoint.java (addAction): Implemented addAction.
	* actions/ActionPoint.java (addAction): new abstract function.
	* actions/Action.java (getCopy): new abstract function.
	* TrayIcon.java: Added present() call to bring Frysk to the right
	desktop.
	* ObserversMenu.java (removeGuiObject):  new function.
	* ListView.java: Was forgeting to remove observers when an item
	is removed...fixed.
	* CustomeObserverWindow.java: Removed code for handling Actions. Now
	taken care of by ActionWidget.
	* ActionsWidget.java: New file. Widget for editing the actions
	of an Observer.

2005-12-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* SimpleComboBox.java: Was forgeting to remove observers when an item
	is removed...fixed.
	* FilterLineWidget.java: Rewrote from scratch this version finally works.

2005-12-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskForkedObserver.java: removed forkedActions.
	* observers/TaskSyscallObserver.java: Ditto.
	* observers/TaskCloneObserver.java: Ditto.
	* observers/TaskTerminatingObserver.java: Added missing
	actionPoints/filterPonts.
	* filters/IntFilterPoint.java: New file.
	* filters/IntFilter.java: New file.
	* actions/TaskActionPoint.java (runActions): renamed to funActions from 
	runAction.

2005-12-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/ProcNameFilter.java: Added DynamicWidget initialization and 
	handling.
	* filters/TaskProcNameFilter.java: Ditto.
	* filters/Filter.java: Added javadoc. Added DynamicWidget, and getter
	function.
	* FilterLineWidget.java: Rnamed FilterLine to this.
	* FilterWidget.java: split setSelection(FilterPoint,Filter) int setFilterPoint
	and setFilter.
	* DynamicWidget.java (addTextEntry): Added callback handling.
	* actions/ActionManager.java (initActionList): Added ShowSourceWin() back.

2005-12-06 Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramObserver.java: Added

2005-12-05  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskSyscallObserver.java: Renamed SyscallObserver to this.
	* observers/TaskForkedObserver.java: Added two taskActionPoints +
	handling. fixed onld procFilterPoint  to conform to new back-end
	interface.
	* observers/TaskExecObserver.java: Added a taskActionPoint + handling.
	* observers/ObserverRoot.java: Added genericActionPoint.
	Added functions for addingActionPoints and retrieving them.
	* actions/TaskActionPoint.java:  New file.
	* actions/GenericActionPoint.java:  New file.
	* actions/ActionPoint.java: New file.
	* actions/ActionManager.java: Added genericActionsList. added
	functions to add to and get genericActionsList. added javadoc.
	* TaskData.java: Removed not needed code (now provided by
	ObservableLinkedList).
	* ObservableLinkedList.java: Removed debug output.
	* GuiData.java: Removed redundent code that is now provided by 
	ObservableLinkedList.
	* FilterWidget.java: Removed debug output.
	* FilterLine.java: Added isPrototype boolean. Added NP check when
	adding a filter. Removed some unused uncommented code.
	
005-12-05  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskObserverRoot.java (apply): added apply(Proc) function
	TATA! :); handles application of a task observer to all tasks (current
	and future) of a Proc.
	(apply): removed extranious call to onAdded.run();
	* TaskData.java: Removed uneeded notifyObserver call (done by
	ObservableLinkedList).
	* StatusWidget.java: Disabled stripchart widget.
	* ProcMenu.java: Now retrieves a list of taskObservers.
	* ProcData.java (add): New function moved from GuiData to here.
	Removed debug output.
	* ObserversMenu.java (addGuiObject): new function refactored
	redundent code to here.
	Removed debug output.
	* GuiData.java: Removed unused commented out code.

2005-12-04  Chris Moller  <moller@mollerware.com>

	* StatusWidget.java: Added setBackgroundRGB to the stripchart.

2005-12-02  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java: Replaced old TextView with time line widget.

2005-12-01  Phil Muldoon <pmuldoon@redhat.com>

	* observers/TaskForkedObserver.java: Make Proc/Task Filter
	point to public
	* observers/TaskExecObserver.java: Ditto.

2005-11-30  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverManager.java: Added javadoc. Added swapTaskObserverPrototype
	for adding modified observers to the manager.
	* filters/TaskProcNameFilter.java: Added getCopy() method.
	* filters/FilterPoint.java (removeFilter): Added check for illegal argument.
	* filters/FilterManager.java: Implemented getFilterCopy(Filter prototype).
	* actions/ForkedAction.java: replaced ecute(Task task, Proc child), with 
	execute(Task task, Task child) to match change in backend interface.
	* SimpleComboBox.java: Added  add(GuiObject object, int index), 
	add(GuiObject object, TreeIter treeIter), and 
	watchLinkedList(ObservableLinkedList linkedList) to allow the combobox to watch
	and ObservableLinkedList.
	* FilterWidget.java: Added more javadoc.
	* ListView.java: ditto.
	* FilterLine.java: Created setSelectedFilter/setSelectedFilterPoint	functions.
	* CustomeObserverWindow.java: Added stubs for backup system (when user clicks
	cancel)

2005-11-24  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskExecObserver.java: FilterPoints were being added twice. Fixed.
	* observers/TaskForkedObserver.java: Ditto.
	* filters/ProcNameFilter.java: now passes a string to widget.addString().
	* filters/TaskProcNameFilter.java: Ditto.
	* FilterWidget.java: added call to removedFromObserver upon delete.
	* FilterLine.java: added setFilterWidget(Widget widget). Removed some commented
	out code.
	* DynamicWidget.java: Added code to manipulate a reference when an entry is
	made.
	* CustomeObserverWindow.java: Replaced KeyListener with EntryListiner.
	
2005-11-24  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverManager.java: Added removeTaskObserverPrototype, removed
	some uneeded notification code.
	* ObservableLinkedList.java: Added public boolean remove(Object o).
	* FilterWidget.java: Removed some debug print statements.
	* CustomeObserverWindow.java: Added add/remove functions for updating the observer
	under concideration. Added handlers for add/delete observer buttons.
	* GuiObject.java: Fixed copy constructor.
	* observers/TaskTerminatingObserver.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	* observers/TaskExecObserver.java: Ditto.
	* observers/ObserverRoot.java: Ditto.
	* observers/AttachedContinueObserver.java: Ditto.
	* filters/TaskProcNameFilter.java: Ditto.
	* filters/TaskFilterPoint.java: Ditto.
	* filters/TaskFilter.java: Ditto.
	* filters/ProcNameFilter.java: Ditto.
	* filters/ProcFilterPoint.java: Ditto.
	* filters/ProcFilter.java: Ditto.
	* filters/FilterPoint.java: Ditto.
	* filters/Filter.java: Ditto.
	* actions/Action.java: Ditto.

2005-11-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskExecObserver.java: Added missing this.addFilterPoint.
	* filters/FilterPoint.java: Added removeFilter function. Replaced LinkedList with
	ObservableLinkedList.
	* MenuBar.java: added call to createNewObserver.
	* ListView.java: Added function for watching an ObserbaleLinkedList, a function
	for adding an item at a particular index, and a function for selecting matching
	text on the list.
	* SimpleComboBox.java: Ditto.
	* FilterWidget.java: Buttons for adding/removing filter lines, replace
	widgets linked list with a hashmap.
	* FilterLine.java: Added setSelection function, add/remove functions wich
	add/remove the filter from the observer.
	* DetailedObserverTreeView.java: Removed redundent code, used
	ObservableLinkedList instead.
	* CustomeObserverWindow.java: Removed some unused code.
	* ObservableLinkedList.java: New file
	* ActionPool.java: Replaced LinkedList with ObservableLinkedList.
	* GuiData.java: Ditto.
	* ObserversMenu.java: Ditto.
	* ThreadMenu.java: Ditto.
	* StatusWidget.java: Ditto.
	* filters/FilterManager.java: Ditto.
	* actions/ActionManager.java: Ditto.
	* filters/TaskFilterPoint.java: Ditto.
	* filters/ProcFilterPoint.java: Ditto.
	* observers/ObserverManager.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	* observers/ObserverRoot.java: Ditto.

2005-11-22  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramDataModel.java (find): Added.
	(add): Replace on similar items.
	* ProgramAddWindow.java (populate): Added observer Populate
	(findObserver): Added.
	(getGladeWidgets): Fixed java-gnome FileChooser message.

2005-11-22  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/Filter.java: Added abstract getWidget method.
	* filters/ProcNameFilter.java: Implemented getWidget method.
	* filters/TaskProcNameFilter.java: ditto.
	* SimpleComboBox.java: Handles no object is selected case. 
	* FilterLine.java: Now properly handles selected observer, filterPoint, and 
	Filter.
	* DynamicWidget.java: Is now a child of Table instead of Frame.
	* CustomeObserverWindow.java: Removed unused commented out code.

2005-11-20  Andrew Cagney  <cagney@redhat.com>

	* observers/TaskForkedObserver.java: Update,
	frysk.proc.TaskObserver .Forked .updateForked passes in the
	processes Task.
	* EventLogger.java: Ditto.

2005-11-18  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskForkedObserver.java (TaskForkedObserver): Renamed a FilterPoint.
	* filters/FilterManager.java (initFilterList): added some filter prototypes.
	* SimpleComboBox.java: New file.
	* FilterLine.java: New file.
	* FilterWidget.java: New file.
	* CustomeObserverWindow.java: Replaced filter handling code with FilterWidget.

2005-11-18  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/FilterPoint.java (getFilters): new function. Added notifyObservers
	call.
	* filters/FilterManager.java: initialized taskList :) .
	* GuiObject.java: Added notifyObservers call.
	* DetailedObserverTreeView.java: Cleaned out some old redundent code by 
	using ListView. Added code to update when observer change.
	* ListView.java : New File. Convienience class to eleminate code
	redundency.
	* CustomeObserverWindow.java: Cleaned out some old redundent code by using
	ListView, and added more handling.

2005-11-17  Andrew Cagney  <cagney@redhat.com>

	* observers/ObserverRoot.java: Replace .added, and .deleted with
	.addedTo, .deletedFrom, and .addFailed.
	* EventLogger.java: Ditto.

2005-11-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Added getBaseName to tell wich observer
	a custom observer was based on.
	* MenuBar.java: Added present() call after showAll() see gj javadoc.
	* GuiObject.java: Now extends GuiObservable.
	* DetailedObserverTreeView.java: A view that provides adetailed
	representation of observers currently available with observer manager.
	* CustomeObserverWindow.java: Added handlers for summary labels. Add
	handeling for selected observer.

2005-11-16  Jeff Johnston  <jjohnstn@redhat.com>

	* observers/SyscallObserver.java: Remove .updateSyscallXXX
	which is no longer used.
	* EventLogger.java: Ditto.

2005-11-16  Sami Wagiaalla  <swagiaal@redhat.com>

	* TrayIcon.java (TrayIcon): Accedintally pasted URL removed :).

2005-11-15  Sami Wagiaalla  <swagiaal@redhat.com>

	* PreferencesWindow.java: Added handle for cancel button.
	* MenuBar.java: Added handel for custom observer item.
	* GuiObject.java: No longer abstract.
	* DynamicWidget.java: New file.
	* CustomeObserverWindow.java: Added handles for managing components.
	Added handlers for varios parts of the window.

2005-11-11  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramData.java (delete): Added.
	* ProgramViewPage.java (deleteSelectedMonitor): Added.
	(buttonEvent): Added new listener for delete button.
	* ProgramDataModel.java (delete): Added.

2005-11-10  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java: Clean up and add comments. Remove
	unused listeners. Removed getSelectedProc.
	* ProgramDataModel.java: Clean up and add javadoc.

2005-11-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ForkedAction.java: New file.
	* observers/TaskExecObserver.java: Added infrastructor to handle
	customization.
	* observers/ObserverManager.java : Rewrote the sample custom observer. 
	* observers/TaskForkedObserver.java: Removed local filter handling code.
	 Added infrastructor to handle customization.
	* filters/ProcNameFilter.java: Renamed NameProcFilter to this.
	* filters/TaskProcNameFilter.java: New file.
	* filters/FilterPoint.java: Made it extend GuiObject.
	* filters/TaskFilterPoint.java : Made it extend GuiObject. Removed addFilter
	function.
	* filters/ProcFilterPoint.java (ProcFilterPoint): Ditto.
	* actions/Action.java: refactored tooltiop/Name code to GuiObject.
	* observers/ObserverRoot.java: Ditto.
	(ObserverRoot): Initialized filterPoint list.
	* filters/Filter.java: Ditto.
	* GuiObject.java: New file.

2005-11-09  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (selectionChangedEvent): Extruded
	tooltip from listener and placed formulation in Data
	Model.
	* ProgramDataModel.java: (getTip): Added.
	

2005-11-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/TaskFilterPoint.java: New file.
	* filters/TaskFilter.java: New file.
	* filters/ProcFilterPoint.java: New file.
	* filters/ProcFilter.java: Uses new name/tooltip constructor. Removed
	old function filter() function.
	* filters/NameProcFilter.java: Uses new name/tooltip constructor.
	* filters/FilterPoint.java: Added constructor, and getApplicableFilters
	function.
	* filters/FilterManager.java: Added get(Proc/Task)Filters functions.
	* filters/Filter.java: Added name/toolTip and code to set/get.
	* actions/Detach.java: Now uses super constructor instead fo direct access.
	* actions/Stop.java: Ditto.
	* actions/ShowSourceWin.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/ProcAction.java: Ditto.
	* actions/TaskAction.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/Attach.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	* actions/Action.java: Change name/toolTip strings to private.
	* observers/ObserverRoot.java: Ditto.
	
2005-11-09  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (selectionChangedEvent): Added
	tooltip to show object data. Set enabled state on selection.
	* ProgramDataModel.java (getObjectDataDC): Added.

2005-11-09  Sami Wagiaalla  <swagiaal@redhat.com>
	
	* observers/SyscallObserver.java: Changed RootObserver to TaskRootObserver.
	* observers/TaskObserverRoot.java: New File.
	* observers/TaskTerminatingObserver.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	Removed unused function.
	* observers/TaskExecObserver.java: Ditto.
	* observers/TaskCloneObserver.java: Ditto.
	* observers/ObserverRoot.java: Removed bouncee. Added action list and
	functions
	* observers/ObserverManager.java: Added a sample custom observer. Changed
	RootObserver to TaskRootObserver.
	* filters/ProcFilter.java: New file.
	* filters/NameProcFilter.java: New file. Sample filter.
	* filters/FilterPoint.java: New file.
	* filters/FilterManager.java: New file.
	* filters/Filter.java: New file.
	* actions/ProcAction.java: Removed unnecessary execute() function.
	* actions/TaskAction.java: Ditto.
	* actions/ActionManager.java: Spelling fixes :).
	* actions/Action.java: Added new constructor. Replace execute() with
	an abstract function.
	* StatusWidget.java: Changed to using Actions instead of Runnable.
	* ObserversMenu.java: Changed cast to RootObserver to 
	TaskRootObserver; sister class for ProcRootObserver soon to come.
	Removed unused observer declaration.
	* TaskData.java: ditto.
	* GuiData.java: Removed add observer function.

2005-11-08  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (populate): Added.
	* ProgramViewPage.java (loadExistingMonitors): Make sure
	new object is added on each load.
	* ProgramDataModel.java (interrogate): Added.
	
2005-11-08  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ShowSourceWin.java: new file. An action that shows the
	a source window.
	* actions/ActionManager.java: Added a prototype of ShowSourceWin
	action.

2005-11-07  Sami Wagiaalla  <swagiaal@redhat.com>	

	* actions/ActionManager.java: removed Attach/Detach actions from
	menu. See bz 1446

2005-11-07  Phil Muldoon  <pmuldoon@redhat.com>

	*  ProgramData.java (buildStore): Added
	
	* ProgramAddWindow.java (saveDialog): Dynamically add
	program event observers to listbox.
	(saveDialog): Moved default save location to ProgramData.
	(buildStore): Removed
	
	* MainWindow.java (MainWindow): Fixed ecj 3.1 warning.
	* ActionPool.java (ActionPool): Ditto.
	* ObserversMenu.java (ObserversMenu): Ditto.
	* ProgramDataModel.java (ProgramDataModel): Ditto.
	(toggle): Added.

	* ProgramViewPage: Added Toggle cell listener.

2005-11-07  Andrew Cagney  <cagney@redhat.com>

	* actions/Attach.java, actions/Resume.java, actions/Detach.java:
	Replace Proc.observableAttachedContinue and
	.observableDetachedContinue with .observableAttached and
	.observableDetached.

2005-11-06  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (loadExistingMonitors): Fixed NPE. 
	BZ 1816 (.listFiles returns null on no files, not 0).

2005-11-06  Andrew Cagney  <cagney@redhat.com>

	* actions/Stop.java: Comment out call to Proc.requestAttachedStop.

2005-11-04  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (loadExistingMonitors): Added.
	* ProgramData.java (load): Rewrite to use w3c dom load.
	JDOM parser crashes. Convert to JDOM using DOMBuilder().
	* ProgramDataModel.java (ProgramDataModel): made singleton.
	
	* ProgramAddWindow.java (buildStore): Added.
	(saveDialog): Added. Save data to xml.
	(applyLastClicked): Added (and set state globally)
	(cancelLastClicked): Ditto.


2005-11-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ActionManager.java: New file. Added points for retrieving
	and adding action prototypes. 
	* actions/ProcAction.java: Abstract class for actions which apply
	to a Proc.
	* actions/TaskAction.java: Abstract class for actions which apply
	to a Task.
	* actions/Attach.java: Moved ActionPool.Action to here.
	removed old execution and remove observer functions.
	* actions/Stop.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/Detach.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/Action.java: Moved ActionPool.Action to here.
	Moved execution methods to appropriet child classes.
	Added generic runnable to allow creating anonymous inner
	instances of action.
	* ThreadMenu.java: Retrieves Actions from action Manager and
	uses new execution pattern.
	* ProcMenu.java: New file. Renamed WatchMenu to ProcMenu.
	* ProcViewPage.java: Renamed WatchMenu to ProcMenu.
	* ActionPool.java: Removed all the inner actions classes
	and moved them to actions/X.

2005-11-03  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramData.java (getName): Added.
	(setName): Ditto.
	(save): Added (JDOM XML)
	(load): Added (JDOM XML)

2005-11-02  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (getGladeWidgets): Modify widgets
	to match glade remake.
	(setFileButtonListener): Removed.
	(doValidation): Refactored validation for new widgets
	
	* WindowManager.java (initWindows): Remove all showAll()
	(let the glade property define default load paint behaviour)
	* ProgramViewPage.java (ProgramViewPage): Moved Cell Renderers
	to mountProgramDataModel.
	(mountProgramDataModel): Added.
	* ProgramDataModel.java (getModel): Added.
	
2005-11-01  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (buildObserverListBox): Populate
	observers from newly added ObserverManager.
	
	* ProgramData.java (ProgramData): Added. And added initial basic
	build-out.
	(getProcessList): Return watched process list.
	(setProcessList): Set watched process list.
	(getObserverList): Get applied observer list.
	(setObserverList): Set applied observer list.
	(getExecutable): Get observed executable.
	(setExecutable): Set the observer executable.
	(isEnabled): Get whether event monitor enabled for this
	program.
	(setEnabled): Set the enabled state.
	
	* ProgramDataModel.java (ProgramDataModel): Added initial manifest.
	Added add method.
 

2005-11-01  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java: migrated all old AddXObserver code to observers/X.
	* observers/SyscallObserver.java: Now handles its own back end application.
	* observers/TaskForkedObserver.java: Ditto.
	* observers/TaskExecObserver.java: Ditto.
	* observers/TaskTerminatingObserver.java: Ditto. 
	* observers/TaskCloneObserver.java : Ditto.
	* observers/ObserverManager.java: The one and only...ObserverManager.
	* observers/TaskForkedObserver.java (getCopy): Now uses new application
	pattern.
	* observers/ObserverRoot.java (getCopy, applyObserver): New 
	functions.
	* ThreadMenu.java (ThreadMenu): Retrieves observers from 
	ObserverManager instead of ActionPool.
	* ObserversMenu.java (ObserversMenu): Refactored to use new 
	observer addition pattern.
	* TaskData.java (setTask): Refactored observer addition (that 
	effecting gui components) to here.
	* GuiData.java: Commented out observer removal code (to be 
	moved to fit new pattern).
	Removed old Observer addition code.
	* ActionPool.java: Started migration of observer addition code
	to observers/X (ForkObserver done).

2005-10-28  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (setApplyCancelButtonListener): Added.
	(buildObserverListBox):  Ditto.
	(doValidation): Ditto. (Do wizard validation checks).

2005-10-28  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java (ObserverRoot): add a null check
	before calling bouncee.
	* EventLogger.java: fixed null pointer exception.

2005-10-27  Phil Muldoon  <pmuldoon@redhat.com>

	* WindowManager.java (save): Added entry for programAddWindow.
	(load): Added entry for programAddWindow.
	
	* ProgramAddWindow.java (lifeCycleQuery): Add hideAll() on
	delete event instead of destroy.
	(setFileButtonListener): Added logic for browse file button.
	* ProgramViewPage.java (ProgramViewPage): Bring up Wizard
	instead of FileBrowser.

2005-10-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java (StatusWidget): replaced scrolled window add
	with addWithViewport (fixed bz 1563).
	
2005-10-26  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (mountProcModel): Added.
	(getGladeWidgets): Added convienience function
	(createDataModel): Ditto.
	(setTreeListeners):  Ditto.
	(getSelectedProc): Added (returns right click).

2005-10-26  Andrew Cagney  <cagney@redhat.com>

	* observers/SyscallObserver.java: Add .updateSyscallXXX.
	* EventLogger.java: Ditto.

2005-10-26  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java (AddForkObserver): Replace RuntimeExceptions with
	appropriet back function calls.
	* observers/TaskForkedObserver.java: Now implements
	TaskObserver.Forked.
	Removed ecj 3.1.1 warnings( Modified patch by Jeff Johnston).
	* MainWindow.java: Removed ecj 3.1.1 warnings (Modified patch by
	Jeff Johnston).
	* TearOffNotebook.java: Removed ecj 3.1.1 warnings (Modified patch
	by Jeff Johnston).
	* ProgramViewPage.java: Removed ecj 3.1.1 warnings (Modified patch
	by Jeff Johnston).
	
2005-10-26  Andrew Cagney  <cagney@redhat.com>

	* observers/SyscallObserver.java: Update TaskObserver.Syscall
	interface methods to match change to .updateSyscallEnter, and
	.updateSyscallExit.
	* EventLogger.java: Ditto.

2005-10-26  Phil Muldoon  <pmuldoon@redhat.com>

	* ConsoleWindow.java: Added Copyright/License Header.
	* TearOffNotebook.java: Ditto.
	* TaskStatusWidget.java: Ditto.
	* StatusWidget.java: Ditto.
	* ProgramViewPage.java: Ditto.
	* ProgramDataModel.java: Ditto.
	* ProgramAddWindow.java: Ditto.
	* ProcStatusWidget.java: Ditto.
	* PreferenceWidget.java: Ditto.
	* PreferencesWindow.java: Ditto.
	* NotifyingLabel.java: Ditto.
	* MenuBar.java: Ditto.
	* InfoWidget.java: Ditto.
	* GuiObservable.java: Ditto.
	* GuiData.java: Ditto.
	* EventFormatter.java: Ditto.
	* CustomeObserverWindow.java: Ditto.

2005-10-25  Andrew Cagney  <cagney@redhat.com>

	* ActionPool.java: Replace calls to Task .requestAddObserver, and
	.requestDeleteObserver with either a call to
	.requestAddExecedObserver, .requestDeleteExecedObserver,
	.requestAddTerminatingObsever, .requestDeleteTerminatingObserver,
	.requestAddForkedObserver, .requestDeleteForkedObserver,
	.requestAddClonedObserver, .requestDeleteClonedObserver, or a
	RuntimeException throw.
	
2005-10-25  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskTerminatingObserver.java: 
	* LogWidget.java: 
	* GuiData.java: 
	* EventLogger.java: 
	* observers/SyscallObserver.java: 
	* observers/TaskCloneObserver.java: 
	* observers/TaskExecObserver.java: 
	* ActionPool.java: Changed all add/remove observer code to use
	the new pattern.

2005-10-25  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java: New File.
	* WindowManager.java: Added ProgramAddWindow handles.
	Close window on startup.

2005-10-24  Sami Wagiaalla  <swagiaal@redhat.com>

	* MainWindow.java: Added a handle for ProgramViewPage.
	* ProcViewPage.java: Renamed AllProcWidget to this.
	* ProgramDataModel.java: new file.
	* ProgramViewPage.java: new file.

2005-10-23  Andrew Cagney  <cagney@redhat.com>

	* ActionPool.java: Replace use of Proc .taskExeced with runtime
	exception throw.

	* ActionPool.java: Replace use of Proc .taskExiting with runtime
	exception throw.

2005-10-22  Andrew Cagney  <cagney@redhat.com>

	* ActionPool.java: Do not set Task .traceFork.

2005-10-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* TearOffNotebook.java : New file.
	(dragEnded): Removed code that requires a new javagnome patch.
	* MainWindow.java: Moved tear off tab code into its own class.

2005-10-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* TaskStatusWidget.java (TaskStatusWidget): Removed the thread entry
	address from the label.
	* observers/ProcForkObserver.java (update): Added special filter
	to check for the new process's parent.
	* ActionPool.java: Added actions for fork and clone observer.
	(initActions): Fixed exception on right click.

2005-10-14  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java: Changed abstract methods in Action to regular
	methods that throw and UnimplementedFucntionException if they are
	not overwirtten in the child class.
	* AllProcWidget.java: Fixed null pointer exception with rapid tree
	slection changes.
	* observers/ProcCloneObserver.java: New file.
	* observers/ProcForkObserver.java: New file.
	* StatusWidget.java (StatusWidget): Removed bad cast.
	Changed layout, and added seperator.

2005-10-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcStatusWidget.java: new file.
	* CustomeObserverWindow.java: new file.
	* TaskStatusWidget.java: new file.
	* WindowManager.java: Added a handel for customObserverWindow and 
	hid it by default.
	* InfoWidget.java: added setSelectedProc and setSelectedTask.
	* AllProcWidget.java: Added code to select first thread by default.
	Added handling for creating threa status widget and showing it.
	Changed InfoWidget to be one per class instead of per process.
	* GuiData.java: Changed infoWidget handle to a generic StatusWidget
	handle.
	* observers/SyscallObserver.java: new file.
	* ThreadMenu.java, WatchMenu.java: added calls for dynamically
	instanciating the appropriate ObserverMenu.
	* TaskData.java (add): new function for adding SyscallObserver.
	* StatusWidget.java: Minor eye candy; replace procName lable by frame,
	Removed always show scrol bars around textbox and treeview.
	Added setName function.
	Changed constructor to take generic GuiData.
	* ObserversMenu.java: Removed Singleton instanciation. ObserversMenu
	now takes items linked list as an argument, and is instanciated by
	parent menu.
	* MainWindow.java: Minor modifications to drag and drop code ( only 
	testing features).
	* ActionPool.java: Added threadObservers linked list.
	Added AddSyscallObserver Action.

2005-10-07  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Update, EventTimer .addTimerEvent renamed to
	.add.

2005-10-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* MainWindow.java (dragEnded): Added code for reparenting the draged
	notebook page to a new one outside the window.
	* PreferencesWindow.java: new file.
	* PreferenceWidget.java: new file.
	* MenuBar.java: new file.
	* WindowManager.java: Added declarations for menuBar and
	perferanceWindow.

2005-10-06  Andrew Cagney  <cagney@redhat.com>

	* ThreadMenu.java, ProcDataModel.java, EventLogger.java: For
	tasks, use getTid instead of getPid.

2005-10-05  Phil Muldoon  <pmuldoon@redhat.com>

	* LogWidget.java: Added missing file.
	* LogWindow.java: Removed.

2005-10-05  Sami Wagiaalla  <swagiaal@redhat.com>	


	* AllProcWidget.java : Removed all the fitlers code.
	* WindowManager.java: Renamed LogWindow to LogWidget.
	

2005-10-05  Phil Muldoon  <pmuldoon@redhat.com>

	* EventLogger.java (TaskExecRunnable): Change cast
	from Proc to TaskEvent. Fixes casting error.

2005-10-05  Sami Wagiaalla  <swagiaal@redhat.com>
 
	* GuiData.java: changed from using Runnables to ObserverRunnables.
	* StatusWidget.java: ditto.
	* EventLogger.java: Changed Observers to ObserverRunnables, and added
	the	ObserverRunnables to Observers isntanciated from package 
	frysk.gui.monitor.observers.
	* ActionPool.java: Renamed eventTaskExecObserver to taskExecObserver,
	and eventTaskExitingObserver to taskExitingObserver.
	* observers/TaskExecObserver.java: new file.
	* observers/ObserverRunnable.java (run): new interface; provies
	run(Observerable, Obj) to allow passing arguments form update to 
	clients of an observer.
	* observers/AttachedContinueObserver.java: new file.
    * observers/AttachedResumeObserver.java: new file.
    * observers/AttachedStopObserver.java: new file.
    * observers/DetachedContinueObserver.java: new file.
    * observers/ObserverRoot.java: new file.
    * observers/ObserverRunnable.java: new file.
    * observers/TaskExecObserver.java: new file.
    * observers/TaskExitingObserver.java: new file.
	

2005-10-05  Phil Muldoon  <pmuldoon@redhat.com>

	* EventLogger.java (EventTaskExitingObserver): Added.
	(run): 
	* ActionPool.java (execute): Added taskExiting to
	EventLogger

2005-10-04  Phil Muldoon  <pmuldoon@redhat.com>

	* InfoWidget.java (InfoWidget): Set BorderWidth to 4.
	* ActionPool.java (AddExecObserver.execute): 
	Added EventLogger observer
	* EventFormatter.java (format): Added.
	* EventLogger.java (AttachedContinueObserver):  Changed log msg.
	(DetachedContinueObserver): Ditto.
	(AttachedStopObserver): Ditto.
	(AttachedResumeObserver): Ditto.
	(buildHandler): Changed Formatter to EventFormatter.
	(TaskExecObserver): Added

2005-10-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java: I preperation fro adding the time line widget
	the log window in StatusWidget reports observable events recieved 
	for its particular task.
	* ObserverRoot.java (update): Execution of 'update' is done within
	the event loop now (CustomEvents.add).
	* ActionPool.java: Added removeObservers() to all actions to 
	remove any observers they have added to the back end;
	* GuiData.java: Added code for removing observers for GuiData.
	* EventLogger.java (EventLogger): Changed visibility to public.
	* EggTrayIcon.java: Moved load library from FryskGui.java to here.

2005-10-03  Phil Muldoon  <pmuldoon@redhat.com>

	* StatusWidget.java (StatusWidget): Remove unused variable for 
	ecj 3.1 warnings.
	Removed unused imports.
	* InfoWidget.java (InfoWidget): Ditto.
	Removed unused imports.
	* ProcDataModel.java (refilter): Remove temporarily.

2005-09-30  Sami Wagiaalla  <swagiaal@redhat.com>

	* LogWindow.java: Synchronized observerable updates with 
	GUI loop (CustomEvents.add).

2005-09-30  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java (Stop.execute): Added observer plumbing.
	(Resume.execute): Added observer plumbing.
	(Detach.execute): Change from Manager to data.getProc().
	Add corrects observers.
	* LogWindow.java (AttachedStopObserver): Added.
	(AttachedResumeObserver):  Added.
	* EventLogger.java (AttachedContinueObserver.update): Changed
	Log format.
	(DetachedContinueObserver.update): Changed Log format.
	(AttachedStopObserver): Added.	
	(AttachedResumeObserver): Added
	(buildHandler): Changed formatter to SimpleFormatter.

2005-09-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* GuiData.java: Added add(TaskExitingObserver).
	* ActionPool.java: Added TaskExiting Observer and fixed TaskExec
	Observer.

2005-09-28  Phil Muldoon  <pmuldoon@redhat.com>

	* LogWindow.java (AttachedContinueObserver): Added.
	(DetachedContinueObserver): Added
	* EventLogger.java (EventFileHandler): Added.
	(AttachedContinueObserver): swagiaal patch
	(DetachedContinueObserver): swagiaal patch
	* ActionPool.java: Actually instantiate eventLog.	
	(Attach.execute): Change method of attaching.
	Changed method of adding observers.
	Fixed LogWindow observers.

2005-09-27  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java (execute): Added eventLog observer.
	* EventLogger.java (EventLogger): Added.
	

2005-09-27  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Instead of frysk .proc .Manager
	.procRemoved, use frysk .proc .Host .observableProcRemoved.

	* ActionPool.java, LogWindow.java, ProcDataModel.java: : Instead
	of frysk .proc .Manager .procDiscovered, use frysk .proc .Host
	.observableProcAdded.
	
	* ActionPool.java, ProcDataModel.java: Use observableTaskRemoved,
	instead of taskRemoved.

2005-09-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Removed calls to refilter.
	* NotifyingLabel.java (NotifyingLabel): Removed call buggy to ExposeEvent.
	* GuiData.java (GuiData): refactored setStatusWidget to setInfoWidget.
	* AllProcWidget.java (selectionChangedEvent): StatusWidget -> InfoWidget.

2005-09-22  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java : Clicking a column now changes the search column to the one
	clicked. this feature is still a little laggy improvements comming soon.
	* StatusWidget.java (initAttacheObserversTreeView): Added remove observer code

2005-09-21  Sami Wagiaalla  <swagiaal@redhat.com>

	* NotifyingLabel.java: new file: a lable that changes color when the object it is 
	observing calls update, and resets color when it is selected.
	* InfoWidget.java (InfoWidget): new file: provies a NoteBook which statusWidget is
	the first page of.
	* AllProcWidget.java: Changed to using infoWidget instead of statusWidget
	* GuiObservable.java (notifyObservers): new file: GuiObserver automatically sets
	hasChanged boolean when notifyObservers() is called.
	* GuiData.java (GuiData): Changed Observables to GuiObservables.
	* StatusWidget.java : Created the design.
	Connected Attached observers list to proper observables. 

2005-09-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: ProcDestroyed was incorrectly being handled outside the gui
	event loop...Fixed.
	added NullPointer check to TaskDestroyedObserver
	
2005-09-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* GuiData.java (GuiData): Fixed AddExecObserver NullPointerException

2005-09-14  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java: now creates a status widget for each proc (still buggy)
	* ObserverRoot.java: new file
	* TaskExecObserver.java: new file
	* GuiData.java (getObservers): new file
	* StatusWidget.java (StatusWidget): new file

2005-09-12  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java (getSelectedProc): cleared some unused variable/imports warnings
	* ProcDataModel.java (ProcDataModel): cleared some unused variable/imports warnings 
	* MainWindow.java: Renamed ProcpopWindow to MainWindow
	cleared some unused variable/imports warnings

2005-09-10  Andrew Cagney  <cagney@redhat.com>

	* AllProcWidget.java: Don't import javax.swing.ListModel, and
	frysk.gui.monitor.ProcDataModel.FilterType, unused.
	* ProcDataModel.java: Delete unnecessary semicolon.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/gui/monitor/ to frysk/gui/monitor/.

2005-09-08  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java: Moved to monitor/
	* AllProcWidget.java: Ditto.
	* EggTrayIcon.java: Ditto.
	* FryskErrorFileHandler.java: Ditto.
	* LogWindow.java: Ditto.
	* ObserversMenu.java: Ditto.	
	* ProcData.java: Ditto.	
	* ProcDataModel.java: Ditto.				
	* Saveable.java: Ditto.		
	* TaskData.java: Ditto.		
	* ThreadMenu.java: Ditto.		
	* TrayIcon.java: Ditto.		
	* WatchMenu.java: Ditto.		
	* WindowManager.java: Ditto.	
	* ProcpopWindow.java (ProcpopWindow): Added catch for IOExceptions.
	Added error log for above.
	* Procpop.java: Renamed to FryskGui.java.
	

2005-09-08  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Fixed NullPointerException on ProcDestroyed.


2005-09-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* ObserversMenu.java: Added code to handle calls for threads.
	* ActionPool.java (ActionPool): Added threadMenu list to populate threadMenu.
	Added resume Action.
	* ProcDataModel.java: Fixed task destroyed/proc doestroyed observers.
	* ThreadMenu.java: New file. Name says it all.
	* AllProcWidget.java : Added threadsMenu.
	

2005-09-07  Sami Wagiaalla  <swagiaal@redhat.com>	 

	* ProcDataModel.java : Removed some old code that remained from PsDataModel.
	* AllProcWidget.java (mountProcModel): Set the search coloumn to be process name.

2005-09-07  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcDataModel.java (setFilter): Use errorlog for exceptions.
	(setFilterType): Ditto.
	* AllProcWidget.java (refresh): Ditto.
	* FryskErrorFileHandler.java (FryskErrorFileHandler): Added.

	
2005-09-06  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java: Split the TreeView inot a Proc and a Thread view.
	

	
2005-09-01  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java : Added context highlighting (proc's are bold; threads are thin).
	The seperation is still not clear... more to come.

2005-08-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Use getID instead of getTaskID/getProcID.

2005-08-26  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java : Added functions that apply the action iterativly
	for multiple selection.
	Added Stop action.
	* TaskData.java: New class to keep GUI specific Task data.

	
2005-08-23  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java: Changed taskDestroyed to taskRemoved.
	* ProcDataModel.java(ProcCreatedObserver): Changed taskCreated to taskDiscovered.
	Changed taskDestroyed to taskRemoved.

	
2005-08-22  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcData.java: Removed PID storage... it now uses Proc straight from
	the backend.

2005-08-19  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Adding task information handling.

2005-08-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Renamed PsDataModel to ProcDataModel.
	* AllProcWidget.java: Reduced columns to just PID, and command.
	* PsDataModel.java: Switched to using info from Manager.host instead
	of PsObserver.

2005-08-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java (update): Change hash key from pid to TaskId.


2005-07-14  Phil Muldoon  <pmuldoon@redhat.com>

	* PsDataModel.java (PsDataModel): Changed parentHash to HashMap.
	Changed progressListeners to  ArrayList.
	* ActionPool.java (AddTaskDestroyObserver): Added.
	(AddTaskExitingObserver): Added.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
