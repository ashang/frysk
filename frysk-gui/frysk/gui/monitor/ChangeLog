2005-11-18  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/FilterPoint.java (getFilters): new function. Added notifyObservers
	call.
	* filters/FilterManager.java: initialized taskList :) .
	* GuiObject.java: Added notifyObservers call.
	* DetailedObserverTreeView.java: Cleaned out some old redundent code by 
	using ListView. Added code to update when observer change.
	* ListView.java : New File. Convienience class to eleminate code
	redundency.
	* CustomeObserverWindow.java: Cleaned out some old redundent code by using
	ListView, and added more handling.

2005-11-17  Andrew Cagney  <cagney@redhat.com>

	* observers/ObserverRoot.java: Replace .added, and .deleted with
	.addedTo, .deletedFrom, and .addFailed.
	* EventLogger.java: Ditto.

2005-11-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java: Added getBaseName to tell wich observer
	a custom observer was based on.
	* MenuBar.java: Added present() call after showAll() see gj javadoc.
	* GuiObject.java: Now extends GuiObservable.
	* DetailedObserverTreeView.java: A view that provides adetailed
	representation of observers currently available with observer manager.
	* CustomeObserverWindow.java: Added handlers for summary labels. Add
	handeling for selected observer.

2005-11-16  Jeff Johnston  <jjohnstn@redhat.com>

	* observers/SyscallObserver.java: Remove .updateSyscallXXX
	which is no longer used.
	* EventLogger.java: Ditto.

2005-11-16  Sami Wagiaalla  <swagiaal@redhat.com>

	* TrayIcon.java (TrayIcon): Accedintally pasted URL removed :).

2005-11-15  Sami Wagiaalla  <swagiaal@redhat.com>

	* PreferencesWindow.java: Added handle for cancel button.
	* MenuBar.java: Added handel for custom observer item.
	* GuiObject.java: No longer abstract.
	* DynamicWidget.java: New file.
	* CustomeObserverWindow.java: Added handles for managing components.
	Added handlers for varios parts of the window.

2005-11-11  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramData.java (delete): Added.
	* ProgramViewPage.java (deleteSelectedMonitor): Added.
	(buttonEvent): Added new listener for delete button.
	* ProgramDataModel.java (delete): Added.

2005-11-10  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java: Clean up and add comments. Remove
	unused listeners. Removed getSelectedProc.
	* ProgramDataModel.java: Clean up and add javadoc.

2005-11-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ForkedAction.java: New file.
	* observers/TaskExecObserver.java: Added infrastructor to handle
	customization.
	* observers/ObserverManager.java : Rewrote the sample custom observer. 
	* observers/TaskForkedObserver.java: Removed local filter handling code.
	 Added infrastructor to handle customization.
	* filters/ProcNameFilter.java: Renamed NameProcFilter to this.
	* filters/TaskProcNameFilter.java: New file.
	* filters/FilterPoint.java: Made it extend GuiObject.
	* filters/TaskFilterPoint.java : Made it extend GuiObject. Removed addFilter
	function.
	* filters/ProcFilterPoint.java (ProcFilterPoint): Ditto.
	* actions/Action.java: refactored tooltiop/Name code to GuiObject.
	* observers/ObserverRoot.java: Ditto.
	(ObserverRoot): Initialized filterPoint list.
	* filters/Filter.java: Ditto.
	* GuiObject.java: New file.

2005-11-09  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (selectionChangedEvent): Extruded
	tooltip from listener and placed formulation in Data
	Model.
	* ProgramDataModel.java: (getTip): Added.
	

2005-11-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* filters/TaskFilterPoint.java: New file.
	* filters/TaskFilter.java: New file.
	* filters/ProcFilterPoint.java: New file.
	* filters/ProcFilter.java: Uses new name/tooltip constructor. Removed
	old function filter() function.
	* filters/NameProcFilter.java: Uses new name/tooltip constructor.
	* filters/FilterPoint.java: Added constructor, and getApplicableFilters
	function.
	* filters/FilterManager.java: Added get(Proc/Task)Filters functions.
	* filters/Filter.java: Added name/toolTip and code to set/get.
	* actions/Detach.java: Now uses super constructor instead fo direct access.
	* actions/Stop.java: Ditto.
	* actions/ShowSourceWin.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/ProcAction.java: Ditto.
	* actions/TaskAction.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/Attach.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	* actions/Action.java: Change name/toolTip strings to private.
	* observers/ObserverRoot.java: Ditto.
	
2005-11-09  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (selectionChangedEvent): Added
	tooltip to show object data. Set enabled state on selection.
	* ProgramDataModel.java (getObjectDataDC): Added.

2005-11-09  Sami Wagiaalla  <swagiaal@redhat.com>
	
	* observers/SyscallObserver.java: Changed RootObserver to TaskRootObserver.
	* observers/TaskObserverRoot.java: New File.
	* observers/TaskTerminatingObserver.java: Ditto.
	* observers/TaskForkedObserver.java: Ditto.
	Removed unused function.
	* observers/TaskExecObserver.java: Ditto.
	* observers/TaskCloneObserver.java: Ditto.
	* observers/ObserverRoot.java: Removed bouncee. Added action list and
	functions
	* observers/ObserverManager.java: Added a sample custom observer. Changed
	RootObserver to TaskRootObserver.
	* filters/ProcFilter.java: New file.
	* filters/NameProcFilter.java: New file. Sample filter.
	* filters/FilterPoint.java: New file.
	* filters/FilterManager.java: New file.
	* filters/Filter.java: New file.
	* actions/ProcAction.java: Removed unnecessary execute() function.
	* actions/TaskAction.java: Ditto.
	* actions/ActionManager.java: Spelling fixes :).
	* actions/Action.java: Added new constructor. Replace execute() with
	an abstract function.
	* StatusWidget.java: Changed to using Actions instead of Runnable.
	* ObserversMenu.java: Changed cast to RootObserver to 
	TaskRootObserver; sister class for ProcRootObserver soon to come.
	Removed unused observer declaration.
	* TaskData.java: ditto.
	* GuiData.java: Removed add observer function.

2005-11-08  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (populate): Added.
	* ProgramViewPage.java (loadExistingMonitors): Make sure
	new object is added on each load.
	* ProgramDataModel.java (interrogate): Added.
	
2005-11-08  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ShowSourceWin.java: new file. An action that shows the
	a source window.
	* actions/ActionManager.java: Added a prototype of ShowSourceWin
	action.

2005-11-07  Sami Wagiaalla  <swagiaal@redhat.com>	

	* actions/ActionManager.java: removed Attach/Detach actions from
	menu. See bz 1446

2005-11-07  Phil Muldoon  <pmuldoon@redhat.com>

	*  ProgramData.java (buildStore): Added
	
	* ProgramAddWindow.java (saveDialog): Dynamically add
	program event observers to listbox.
	(saveDialog): Moved default save location to ProgramData.
	(buildStore): Removed
	
	* MainWindow.java (MainWindow): Fixed ecj 3.1 warning.
	* ActionPool.java (ActionPool): Ditto.
	* ObserversMenu.java (ObserversMenu): Ditto.
	* ProgramDataModel.java (ProgramDataModel): Ditto.
	(toggle): Added.

	* ProgramViewPage: Added Toggle cell listener.

2005-11-07  Andrew Cagney  <cagney@redhat.com>

	* actions/Attach.java, actions/Resume.java, actions/Detach.java:
	Replace Proc.observableAttachedContinue and
	.observableDetachedContinue with .observableAttached and
	.observableDetached.

2005-11-06  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (loadExistingMonitors): Fixed NPE. 
	BZ 1816 (.listFiles returns null on no files, not 0).

2005-11-06  Andrew Cagney  <cagney@redhat.com>

	* actions/Stop.java: Comment out call to Proc.requestAttachedStop.

2005-11-04  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramViewPage.java (loadExistingMonitors): Added.
	* ProgramData.java (load): Rewrite to use w3c dom load.
	JDOM parser crashes. Convert to JDOM using DOMBuilder().
	* ProgramDataModel.java (ProgramDataModel): made singleton.
	
	* ProgramAddWindow.java (buildStore): Added.
	(saveDialog): Added. Save data to xml.
	(applyLastClicked): Added (and set state globally)
	(cancelLastClicked): Ditto.


2005-11-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* actions/ActionManager.java: New file. Added points for retrieving
	and adding action prototypes. 
	* actions/ProcAction.java: Abstract class for actions which apply
	to a Proc.
	* actions/TaskAction.java: Abstract class for actions which apply
	to a Task.
	* actions/Attach.java: Moved ActionPool.Action to here.
	removed old execution and remove observer functions.
	* actions/Stop.java: Ditto.
	* actions/PrintProc.java: Ditto.
	* actions/PrintTask.java: Ditto.
	* actions/Detach.java: Ditto.
	* actions/Resume.java: Ditto.
	* actions/Action.java: Moved ActionPool.Action to here.
	Moved execution methods to appropriet child classes.
	Added generic runnable to allow creating anonymous inner
	instances of action.
	* ThreadMenu.java: Retrieves Actions from action Manager and
	uses new execution pattern.
	* ProcMenu.java: New file. Renamed WatchMenu to ProcMenu.
	* ProcViewPage.java: Renamed WatchMenu to ProcMenu.
	* ActionPool.java: Removed all the inner actions classes
	and moved them to actions/X.

2005-11-03  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramData.java (getName): Added.
	(setName): Ditto.
	(save): Added (JDOM XML)
	(load): Added (JDOM XML)

2005-11-02  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (getGladeWidgets): Modify widgets
	to match glade remake.
	(setFileButtonListener): Removed.
	(doValidation): Refactored validation for new widgets
	
	* WindowManager.java (initWindows): Remove all showAll()
	(let the glade property define default load paint behaviour)
	* ProgramViewPage.java (ProgramViewPage): Moved Cell Renderers
	to mountProgramDataModel.
	(mountProgramDataModel): Added.
	* ProgramDataModel.java (getModel): Added.
	
2005-11-01  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (buildObserverListBox): Populate
	observers from newly added ObserverManager.
	
	* ProgramData.java (ProgramData): Added. And added initial basic
	build-out.
	(getProcessList): Return watched process list.
	(setProcessList): Set watched process list.
	(getObserverList): Get applied observer list.
	(setObserverList): Set applied observer list.
	(getExecutable): Get observed executable.
	(setExecutable): Set the observer executable.
	(isEnabled): Get whether event monitor enabled for this
	program.
	(setEnabled): Set the enabled state.
	
	* ProgramDataModel.java (ProgramDataModel): Added initial manifest.
	Added add method.
 

2005-11-01  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java: migrated all old AddXObserver code to observers/X.
	* observers/SyscallObserver.java: Now handles its own back end application.
	* observers/TaskForkedObserver.java: Ditto.
	* observers/TaskExecObserver.java: Ditto.
	* observers/TaskTerminatingObserver.java: Ditto. 
	* observers/TaskCloneObserver.java : Ditto.
	* observers/ObserverManager.java: The one and only...ObserverManager.
	* observers/TaskForkedObserver.java (getCopy): Now uses new application
	pattern.
	* observers/ObserverRoot.java (getCopy, applyObserver): New 
	functions.
	* ThreadMenu.java (ThreadMenu): Retrieves observers from 
	ObserverManager instead of ActionPool.
	* ObserversMenu.java (ObserversMenu): Refactored to use new 
	observer addition pattern.
	* TaskData.java (setTask): Refactored observer addition (that 
	effecting gui components) to here.
	* GuiData.java: Commented out observer removal code (to be 
	moved to fit new pattern).
	Removed old Observer addition code.
	* ActionPool.java: Started migration of observer addition code
	to observers/X (ForkObserver done).

2005-10-28  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (setApplyCancelButtonListener): Added.
	(buildObserverListBox):  Ditto.
	(doValidation): Ditto. (Do wizard validation checks).

2005-10-28  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/ObserverRoot.java (ObserverRoot): add a null check
	before calling bouncee.
	* EventLogger.java: fixed null pointer exception.

2005-10-27  Phil Muldoon  <pmuldoon@redhat.com>

	* WindowManager.java (save): Added entry for programAddWindow.
	(load): Added entry for programAddWindow.
	
	* ProgramAddWindow.java (lifeCycleQuery): Add hideAll() on
	delete event instead of destroy.
	(setFileButtonListener): Added logic for browse file button.
	* ProgramViewPage.java (ProgramViewPage): Bring up Wizard
	instead of FileBrowser.

2005-10-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java (StatusWidget): replaced scrolled window add
	with addWithViewport (fixed bz 1563).
	
2005-10-26  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java (mountProcModel): Added.
	(getGladeWidgets): Added convienience function
	(createDataModel): Ditto.
	(setTreeListeners):  Ditto.
	(getSelectedProc): Added (returns right click).

2005-10-26  Andrew Cagney  <cagney@redhat.com>

	* observers/SyscallObserver.java: Add .updateSyscallXXX.
	* EventLogger.java: Ditto.

2005-10-26  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java (AddForkObserver): Replace RuntimeExceptions with
	appropriet back function calls.
	* observers/TaskForkedObserver.java: Now implements
	TaskObserver.Forked.
	Removed ecj 3.1.1 warnings( Modified patch by Jeff Johnston).
	* MainWindow.java: Removed ecj 3.1.1 warnings (Modified patch by
	Jeff Johnston).
	* TearOffNotebook.java: Removed ecj 3.1.1 warnings (Modified patch
	by Jeff Johnston).
	* ProgramViewPage.java: Removed ecj 3.1.1 warnings (Modified patch
	by Jeff Johnston).
	
2005-10-26  Andrew Cagney  <cagney@redhat.com>

	* observers/SyscallObserver.java: Update TaskObserver.Syscall
	interface methods to match change to .updateSyscallEnter, and
	.updateSyscallExit.
	* EventLogger.java: Ditto.

2005-10-26  Phil Muldoon  <pmuldoon@redhat.com>

	* ConsoleWindow.java: Added Copyright/License Header.
	* TearOffNotebook.java: Ditto.
	* TaskStatusWidget.java: Ditto.
	* StatusWidget.java: Ditto.
	* ProgramViewPage.java: Ditto.
	* ProgramDataModel.java: Ditto.
	* ProgramAddWindow.java: Ditto.
	* ProcStatusWidget.java: Ditto.
	* PreferenceWidget.java: Ditto.
	* PreferencesWindow.java: Ditto.
	* NotifyingLabel.java: Ditto.
	* MenuBar.java: Ditto.
	* InfoWidget.java: Ditto.
	* GuiObservable.java: Ditto.
	* GuiData.java: Ditto.
	* EventFormatter.java: Ditto.
	* CustomeObserverWindow.java: Ditto.

2005-10-25  Andrew Cagney  <cagney@redhat.com>

	* ActionPool.java: Replace calls to Task .requestAddObserver, and
	.requestDeleteObserver with either a call to
	.requestAddExecedObserver, .requestDeleteExecedObserver,
	.requestAddTerminatingObsever, .requestDeleteTerminatingObserver,
	.requestAddForkedObserver, .requestDeleteForkedObserver,
	.requestAddClonedObserver, .requestDeleteClonedObserver, or a
	RuntimeException throw.
	
2005-10-25  Sami Wagiaalla  <swagiaal@redhat.com>

	* observers/TaskTerminatingObserver.java: 
	* LogWidget.java: 
	* GuiData.java: 
	* EventLogger.java: 
	* observers/SyscallObserver.java: 
	* observers/TaskCloneObserver.java: 
	* observers/TaskExecObserver.java: 
	* ActionPool.java: Changed all add/remove observer code to use
	the new pattern.

2005-10-25  Phil Muldoon  <pmuldoon@redhat.com>

	* ProgramAddWindow.java: New File.
	* WindowManager.java: Added ProgramAddWindow handles.
	Close window on startup.

2005-10-24  Sami Wagiaalla  <swagiaal@redhat.com>

	* MainWindow.java: Added a handle for ProgramViewPage.
	* ProcViewPage.java: Renamed AllProcWidget to this.
	* ProgramDataModel.java: new file.
	* ProgramViewPage.java: new file.

2005-10-23  Andrew Cagney  <cagney@redhat.com>

	* ActionPool.java: Replace use of Proc .taskExeced with runtime
	exception throw.

	* ActionPool.java: Replace use of Proc .taskExiting with runtime
	exception throw.

2005-10-22  Andrew Cagney  <cagney@redhat.com>

	* ActionPool.java: Do not set Task .traceFork.

2005-10-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* TearOffNotebook.java : New file.
	(dragEnded): Removed code that requires a new javagnome patch.
	* MainWindow.java: Moved tear off tab code into its own class.

2005-10-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* TaskStatusWidget.java (TaskStatusWidget): Removed the thread entry
	address from the label.
	* observers/ProcForkObserver.java (update): Added special filter
	to check for the new process's parent.
	* ActionPool.java: Added actions for fork and clone observer.
	(initActions): Fixed exception on right click.

2005-10-14  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java: Changed abstract methods in Action to regular
	methods that throw and UnimplementedFucntionException if they are
	not overwirtten in the child class.
	* AllProcWidget.java: Fixed null pointer exception with rapid tree
	slection changes.
	* observers/ProcCloneObserver.java: New file.
	* observers/ProcForkObserver.java: New file.
	* StatusWidget.java (StatusWidget): Removed bad cast.
	Changed layout, and added seperator.

2005-10-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcStatusWidget.java: new file.
	* CustomeObserverWindow.java: new file.
	* TaskStatusWidget.java: new file.
	* WindowManager.java: Added a handel for customObserverWindow and 
	hid it by default.
	* InfoWidget.java: added setSelectedProc and setSelectedTask.
	* AllProcWidget.java: Added code to select first thread by default.
	Added handling for creating threa status widget and showing it.
	Changed InfoWidget to be one per class instead of per process.
	* GuiData.java: Changed infoWidget handle to a generic StatusWidget
	handle.
	* observers/SyscallObserver.java: new file.
	* ThreadMenu.java, WatchMenu.java: added calls for dynamically
	instanciating the appropriate ObserverMenu.
	* TaskData.java (add): new function for adding SyscallObserver.
	* StatusWidget.java: Minor eye candy; replace procName lable by frame,
	Removed always show scrol bars around textbox and treeview.
	Added setName function.
	Changed constructor to take generic GuiData.
	* ObserversMenu.java: Removed Singleton instanciation. ObserversMenu
	now takes items linked list as an argument, and is instanciated by
	parent menu.
	* MainWindow.java: Minor modifications to drag and drop code ( only 
	testing features).
	* ActionPool.java: Added threadObservers linked list.
	Added AddSyscallObserver Action.

2005-10-07  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Update, EventTimer .addTimerEvent renamed to
	.add.

2005-10-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* MainWindow.java (dragEnded): Added code for reparenting the draged
	notebook page to a new one outside the window.
	* PreferencesWindow.java: new file.
	* PreferenceWidget.java: new file.
	* MenuBar.java: new file.
	* WindowManager.java: Added declarations for menuBar and
	perferanceWindow.

2005-10-06  Andrew Cagney  <cagney@redhat.com>

	* ThreadMenu.java, ProcDataModel.java, EventLogger.java: For
	tasks, use getTid instead of getPid.

2005-10-05  Phil Muldoon  <pmuldoon@redhat.com>

	* LogWidget.java: Added missing file.
	* LogWindow.java: Removed.

2005-10-05  Sami Wagiaalla  <swagiaal@redhat.com>	


	* AllProcWidget.java : Removed all the fitlers code.
	* WindowManager.java: Renamed LogWindow to LogWidget.
	

2005-10-05  Phil Muldoon  <pmuldoon@redhat.com>

	* EventLogger.java (TaskExecRunnable): Change cast
	from Proc to TaskEvent. Fixes casting error.

2005-10-05  Sami Wagiaalla  <swagiaal@redhat.com>
 
	* GuiData.java: changed from using Runnables to ObserverRunnables.
	* StatusWidget.java: ditto.
	* EventLogger.java: Changed Observers to ObserverRunnables, and added
	the	ObserverRunnables to Observers isntanciated from package 
	frysk.gui.monitor.observers.
	* ActionPool.java: Renamed eventTaskExecObserver to taskExecObserver,
	and eventTaskExitingObserver to taskExitingObserver.
	* observers/TaskExecObserver.java: new file.
	* observers/ObserverRunnable.java (run): new interface; provies
	run(Observerable, Obj) to allow passing arguments form update to 
	clients of an observer.
	* observers/AttachedContinueObserver.java: new file.
    * observers/AttachedResumeObserver.java: new file.
    * observers/AttachedStopObserver.java: new file.
    * observers/DetachedContinueObserver.java: new file.
    * observers/ObserverRoot.java: new file.
    * observers/ObserverRunnable.java: new file.
    * observers/TaskExecObserver.java: new file.
    * observers/TaskExitingObserver.java: new file.
	

2005-10-05  Phil Muldoon  <pmuldoon@redhat.com>

	* EventLogger.java (EventTaskExitingObserver): Added.
	(run): 
	* ActionPool.java (execute): Added taskExiting to
	EventLogger

2005-10-04  Phil Muldoon  <pmuldoon@redhat.com>

	* InfoWidget.java (InfoWidget): Set BorderWidth to 4.
	* ActionPool.java (AddExecObserver.execute): 
	Added EventLogger observer
	* EventFormatter.java (format): Added.
	* EventLogger.java (AttachedContinueObserver):  Changed log msg.
	(DetachedContinueObserver): Ditto.
	(AttachedStopObserver): Ditto.
	(AttachedResumeObserver): Ditto.
	(buildHandler): Changed Formatter to EventFormatter.
	(TaskExecObserver): Added

2005-10-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* StatusWidget.java: I preperation fro adding the time line widget
	the log window in StatusWidget reports observable events recieved 
	for its particular task.
	* ObserverRoot.java (update): Execution of 'update' is done within
	the event loop now (CustomEvents.add).
	* ActionPool.java: Added removeObservers() to all actions to 
	remove any observers they have added to the back end;
	* GuiData.java: Added code for removing observers for GuiData.
	* EventLogger.java (EventLogger): Changed visibility to public.
	* EggTrayIcon.java: Moved load library from FryskGui.java to here.

2005-10-03  Phil Muldoon  <pmuldoon@redhat.com>

	* StatusWidget.java (StatusWidget): Remove unused variable for 
	ecj 3.1 warnings.
	Removed unused imports.
	* InfoWidget.java (InfoWidget): Ditto.
	Removed unused imports.
	* ProcDataModel.java (refilter): Remove temporarily.

2005-09-30  Sami Wagiaalla  <swagiaal@redhat.com>

	* LogWindow.java: Synchronized observerable updates with 
	GUI loop (CustomEvents.add).

2005-09-30  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java (Stop.execute): Added observer plumbing.
	(Resume.execute): Added observer plumbing.
	(Detach.execute): Change from Manager to data.getProc().
	Add corrects observers.
	* LogWindow.java (AttachedStopObserver): Added.
	(AttachedResumeObserver):  Added.
	* EventLogger.java (AttachedContinueObserver.update): Changed
	Log format.
	(DetachedContinueObserver.update): Changed Log format.
	(AttachedStopObserver): Added.	
	(AttachedResumeObserver): Added
	(buildHandler): Changed formatter to SimpleFormatter.

2005-09-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* GuiData.java: Added add(TaskExitingObserver).
	* ActionPool.java: Added TaskExiting Observer and fixed TaskExec
	Observer.

2005-09-28  Phil Muldoon  <pmuldoon@redhat.com>

	* LogWindow.java (AttachedContinueObserver): Added.
	(DetachedContinueObserver): Added
	* EventLogger.java (EventFileHandler): Added.
	(AttachedContinueObserver): swagiaal patch
	(DetachedContinueObserver): swagiaal patch
	* ActionPool.java: Actually instantiate eventLog.	
	(Attach.execute): Change method of attaching.
	Changed method of adding observers.
	Fixed LogWindow observers.

2005-09-27  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java (execute): Added eventLog observer.
	* EventLogger.java (EventLogger): Added.
	

2005-09-27  Andrew Cagney  <cagney@redhat.com>

	* ProcDataModel.java: Instead of frysk .proc .Manager
	.procRemoved, use frysk .proc .Host .observableProcRemoved.

	* ActionPool.java, LogWindow.java, ProcDataModel.java: : Instead
	of frysk .proc .Manager .procDiscovered, use frysk .proc .Host
	.observableProcAdded.
	
	* ActionPool.java, ProcDataModel.java: Use observableTaskRemoved,
	instead of taskRemoved.

2005-09-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Removed calls to refilter.
	* NotifyingLabel.java (NotifyingLabel): Removed call buggy to ExposeEvent.
	* GuiData.java (GuiData): refactored setStatusWidget to setInfoWidget.
	* AllProcWidget.java (selectionChangedEvent): StatusWidget -> InfoWidget.

2005-09-22  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java : Clicking a column now changes the search column to the one
	clicked. this feature is still a little laggy improvements comming soon.
	* StatusWidget.java (initAttacheObserversTreeView): Added remove observer code

2005-09-21  Sami Wagiaalla  <swagiaal@redhat.com>

	* NotifyingLabel.java: new file: a lable that changes color when the object it is 
	observing calls update, and resets color when it is selected.
	* InfoWidget.java (InfoWidget): new file: provies a NoteBook which statusWidget is
	the first page of.
	* AllProcWidget.java: Changed to using infoWidget instead of statusWidget
	* GuiObservable.java (notifyObservers): new file: GuiObserver automatically sets
	hasChanged boolean when notifyObservers() is called.
	* GuiData.java (GuiData): Changed Observables to GuiObservables.
	* StatusWidget.java : Created the design.
	Connected Attached observers list to proper observables. 

2005-09-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: ProcDestroyed was incorrectly being handled outside the gui
	event loop...Fixed.
	added NullPointer check to TaskDestroyedObserver
	
2005-09-20  Sami Wagiaalla  <swagiaal@redhat.com>

	* GuiData.java (GuiData): Fixed AddExecObserver NullPointerException

2005-09-14  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java: now creates a status widget for each proc (still buggy)
	* ObserverRoot.java: new file
	* TaskExecObserver.java: new file
	* GuiData.java (getObservers): new file
	* StatusWidget.java (StatusWidget): new file

2005-09-12  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java (getSelectedProc): cleared some unused variable/imports warnings
	* ProcDataModel.java (ProcDataModel): cleared some unused variable/imports warnings 
	* MainWindow.java: Renamed ProcpopWindow to MainWindow
	cleared some unused variable/imports warnings

2005-09-10  Andrew Cagney  <cagney@redhat.com>

	* AllProcWidget.java: Don't import javax.swing.ListModel, and
	frysk.gui.monitor.ProcDataModel.FilterType, unused.
	* ProcDataModel.java: Delete unnecessary semicolon.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/gui/monitor/ to frysk/gui/monitor/.

2005-09-08  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java: Moved to monitor/
	* AllProcWidget.java: Ditto.
	* EggTrayIcon.java: Ditto.
	* FryskErrorFileHandler.java: Ditto.
	* LogWindow.java: Ditto.
	* ObserversMenu.java: Ditto.	
	* ProcData.java: Ditto.	
	* ProcDataModel.java: Ditto.				
	* Saveable.java: Ditto.		
	* TaskData.java: Ditto.		
	* ThreadMenu.java: Ditto.		
	* TrayIcon.java: Ditto.		
	* WatchMenu.java: Ditto.		
	* WindowManager.java: Ditto.	
	* ProcpopWindow.java (ProcpopWindow): Added catch for IOExceptions.
	Added error log for above.
	* Procpop.java: Renamed to FryskGui.java.
	

2005-09-08  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Fixed NullPointerException on ProcDestroyed.


2005-09-07  Sami Wagiaalla  <swagiaal@redhat.com>

	* ObserversMenu.java: Added code to handle calls for threads.
	* ActionPool.java (ActionPool): Added threadMenu list to populate threadMenu.
	Added resume Action.
	* ProcDataModel.java: Fixed task destroyed/proc doestroyed observers.
	* ThreadMenu.java: New file. Name says it all.
	* AllProcWidget.java : Added threadsMenu.
	

2005-09-07  Sami Wagiaalla  <swagiaal@redhat.com>	 

	* ProcDataModel.java : Removed some old code that remained from PsDataModel.
	* AllProcWidget.java (mountProcModel): Set the search coloumn to be process name.

2005-09-07  Phil Muldoon  <pmuldoon@redhat.com>

	* ProcDataModel.java (setFilter): Use errorlog for exceptions.
	(setFilterType): Ditto.
	* AllProcWidget.java (refresh): Ditto.
	* FryskErrorFileHandler.java (FryskErrorFileHandler): Added.

	
2005-09-06  Sami Wagiaalla  <swagiaal@redhat.com>

	* AllProcWidget.java: Split the TreeView inot a Proc and a Thread view.
	

	
2005-09-01  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java : Added context highlighting (proc's are bold; threads are thin).
	The seperation is still not clear... more to come.

2005-08-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Use getID instead of getTaskID/getProcID.

2005-08-26  Sami Wagiaalla  <swagiaal@redhat.com>

	* ActionPool.java : Added functions that apply the action iterativly
	for multiple selection.
	Added Stop action.
	* TaskData.java: New class to keep GUI specific Task data.

	
2005-08-23  Phil Muldoon  <pmuldoon@redhat.com>

	* ActionPool.java: Changed taskDestroyed to taskRemoved.
	* ProcDataModel.java(ProcCreatedObserver): Changed taskCreated to taskDiscovered.
	Changed taskDestroyed to taskRemoved.

	
2005-08-22  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcData.java: Removed PID storage... it now uses Proc straight from
	the backend.

2005-08-19  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Adding task information handling.

2005-08-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java: Renamed PsDataModel to ProcDataModel.
	* AllProcWidget.java: Reduced columns to just PID, and command.
	* PsDataModel.java: Switched to using info from Manager.host instead
	of PsObserver.

2005-08-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* ProcDataModel.java (update): Change hash key from pid to TaskId.


2005-07-14  Phil Muldoon  <pmuldoon@redhat.com>

	* PsDataModel.java (PsDataModel): Changed parentHash to HashMap.
	Changed progressListeners to  ArrayList.
	* ActionPool.java (AddTaskDestroyObserver): Added.
	(AddTaskExitingObserver): Added.
