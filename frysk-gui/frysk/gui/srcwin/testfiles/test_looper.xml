<?xml version="1.0" encoding="UTF-8"?>
<TaskTask>Frysk JDOM<PC /><image filename="Task 28428" filepath="./test" CCPATH="./test"><function function_name="main" source="test_main_looper.c" start="3000" end="3097" line_start="89" line_end="94" function_call="main()" /><function function_name="func_1" source="test_main_looper.c" start="2846" end="3004" line_start="81" line_end="88" function_call="func_1(intx,inty)" /><function function_name="func_2" source="test_main_looper.c" start="2287" end="2849" line_start="54" line_end="79" function_call="func_2(intx,inty)" /><function function_name="loop_" source="test_main_looper.c" start="2154" end="2190" line_start="45" line_end="49" function_call="loop_()" /><source filename="test_main_looper.c" filepath="../../frysk/frysk-gui/frysk/gui/srcwin/testfiles" parsed="false" includepath="/usr/include/bits,/usr/lib/gcc/i386-redhat-linux/4.1.1/include,/usr/local/include,/usr/include"><line number="0" pc="3735928559" offset="0" length="43" executable="false" has_break="false">// This file is part of the program FRYSK.
</line><line number="1" pc="3735928559" offset="43" length="3" executable="false" has_break="false">//
</line><line number="2" pc="3735928559" offset="46" length="38" executable="false" has_break="false">// Copyright 2005, 2006, Red Hat Inc.
</line><line number="3" pc="3735928559" offset="84" length="3" executable="false" has_break="false">//
</line><line number="4" pc="3735928559" offset="87" length="68" executable="false" has_break="false">// FRYSK is free software; you can redistribute it and/or modify it
</line><line number="5" pc="3735928559" offset="155" length="69" executable="false" has_break="false">// under the terms of the GNU General Public License as published by
</line><line number="6" pc="3735928559" offset="224" length="59" executable="false" has_break="false">// the Free Software Foundation; version 2 of the License.
</line><line number="7" pc="3735928559" offset="283" length="3" executable="false" has_break="false">//
</line><line number="8" pc="3735928559" offset="286" length="64" executable="false" has_break="false">// FRYSK is distributed in the hope that it will be useful, but
</line><line number="9" pc="3735928559" offset="350" length="62" executable="false" has_break="false">// WITHOUT ANY WARRANTY; without even the implied warranty of
</line><line number="10" pc="3735928559" offset="412" length="68" executable="false" has_break="false">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
</line><line number="11" pc="3735928559" offset="480" length="44" executable="false" has_break="false">// General Public License for more details.
</line><line number="12" pc="3735928559" offset="524" length="4" executable="false" has_break="false">// 
</line><line number="13" pc="3735928559" offset="528" length="69" executable="false" has_break="false">// You should have received a copy of the GNU General Public License
</line><line number="14" pc="3735928559" offset="597" length="68" executable="false" has_break="false">// along with FRYSK; if not, write to the Free Software Foundation,
</line><line number="15" pc="3735928559" offset="665" length="64" executable="false" has_break="false">// Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
</line><line number="16" pc="3735928559" offset="729" length="4" executable="false" has_break="false">// 
</line><line number="17" pc="3735928559" offset="733" length="68" executable="false" has_break="false">// In addition, as a special exception, Red Hat, Inc. gives You the
</line><line number="18" pc="3735928559" offset="801" length="68" executable="false" has_break="false">// additional right to link the code of FRYSK with code not covered
</line><line number="19" pc="3735928559" offset="869" length="64" executable="false" has_break="false">// under the GNU General Public License ("Non-GPL Code") and to
</line><line number="20" pc="3735928559" offset="933" length="68" executable="false" has_break="false">// distribute linked combinations including the two, subject to the
</line><line number="21" pc="3735928559" offset="1001" length="68" executable="false" has_break="false">// limitations in this paragraph. Non-GPL Code permitted under this
</line><line number="22" pc="3735928559" offset="1069" length="68" executable="false" has_break="false">// exception must only link to the code of FRYSK through those well
</line><line number="23" pc="3735928559" offset="1137" length="70" executable="false" has_break="false">// defined interfaces identified in the file named EXCEPTION found in
</line><line number="24" pc="3735928559" offset="1207" length="67" executable="false" has_break="false">// the source code files (the "Approved Interfaces"). The files of
</line><line number="25" pc="3735928559" offset="1274" length="66" executable="false" has_break="false">// Non-GPL Code may instantiate templates or use macros or inline
</line><line number="26" pc="3735928559" offset="1340" length="62" executable="false" has_break="false">// functions from the Approved Interfaces without causing the
</line><line number="27" pc="3735928559" offset="1402" length="58" executable="false" has_break="false">// resulting work to be covered by the GNU General Public
</line><line number="28" pc="3735928559" offset="1460" length="68" executable="false" has_break="false">// License. Only Red Hat, Inc. may make changes or additions to the
</line><line number="29" pc="3735928559" offset="1528" length="69" executable="false" has_break="false">// list of Approved Interfaces. You must obey the GNU General Public
</line><line number="30" pc="3735928559" offset="1597" length="68" executable="false" has_break="false">// License in all respects for all of the FRYSK code and other code
</line><line number="31" pc="3735928559" offset="1665" length="69" executable="false" has_break="false">// used in conjunction with FRYSK except the Non-GPL Code covered by
</line><line number="32" pc="3735928559" offset="1734" length="64" executable="false" has_break="false">// this exception. If you modify this file, you may extend this
</line><line number="33" pc="3735928559" offset="1798" length="71" executable="false" has_break="false">// exception to your version of the file, but you are not obligated to
</line><line number="34" pc="3735928559" offset="1869" length="63" executable="false" has_break="false">// do so. If you do not wish to provide this exception without
</line><line number="35" pc="3735928559" offset="1932" length="68" executable="false" has_break="false">// modification, you must delete this exception statement from your
</line><line number="36" pc="3735928559" offset="2000" length="62" executable="false" has_break="false">// version and license this file solely under the GPL without
</line><line number="37" pc="3735928559" offset="2062" length="14" executable="false" has_break="false">// exception.
</line><line number="38" pc="3735928559" offset="2076" length="1" executable="false" has_break="false">
</line><line number="39" pc="3735928559" offset="2077" length="19" executable="false" has_break="false">#include &lt;stdio.h&gt;
<tag type="keyword" start="0" length="8" token="#include" /><tag type="include" start="10" length="7" token="stdio.h" /></line><line number="40" pc="3735928559" offset="2096" length="20" executable="false" has_break="false">#include &lt;stdarg.h&gt;
<tag type="keyword" start="0" length="8" token="#include" /><tag type="include" start="10" length="8" token="stdarg.h" /></line><line number="41" pc="3735928559" offset="2116" length="1" executable="false" has_break="false">
</line><line number="42" pc="3735928559" offset="2117" length="36" executable="false" has_break="false">#define ABS(a) (a) &lt; 0 ? -(a) : (a)
<tag type="keyword" start="0" length="7" token="#define" /><tag type="macro" start="8" length="3" token="ABS" /></line><line number="43" pc="3735928559" offset="2153" length="1" executable="false" has_break="false">
</line><line number="44" pc="3735928559" offset="2154" length="4" executable="false" has_break="false">int
<tag type="keyword" start="0" length="3" token="int" /><tag type="function_call" start="0" length="7" token="loop_()" /></line><line number="45" pc="3735928559" offset="2158" length="12" executable="false" has_break="false">   loop_ ()
<tag type="function" start="3" length="5" token="loop_" /></line><line number="46" pc="3735928559" offset="2170" length="2" executable="false" has_break="false">{
</line><line number="47" pc="3735928559" offset="2172" length="12" executable="false" has_break="false">  return 1;
</line><line number="48" pc="3735928559" offset="2184" length="2" executable="false" has_break="false">}
</line><line number="49" pc="3735928559" offset="2186" length="1" executable="false" has_break="false">
</line><line number="50" pc="3735928559" offset="2187" length="20" executable="false" has_break="false">int static_int = 4;
<tag type="keyword" start="0" length="3" token="int" /><tag type="local_var" start="4" length="10" token="static_int" /></line><line number="51" pc="3735928559" offset="2207" length="79" executable="false" has_break="false">struct static_class_t {int class_int_1, class_int_2;} static_class = {51, 52};
<tag type="keyword" start="0" length="6" token="struct" /><tag type="class_decl" start="7" length="14" token="static_class_t" /><tag type="keyword" start="23" length="3" token="int" /><tag type="local_var" start="27" length="11" token="class_int_1" /><tag type="local_var" start="40" length="11" token="class_int_2" /><tag type="local_var" start="54" length="12" token="static_class" /></line><line number="52" pc="3735928559" offset="2286" length="1" executable="false" has_break="false">
</line><line number="53" pc="3735928559" offset="2287" length="4" executable="false" has_break="false">int
<tag type="keyword" start="0" length="3" token="int" /><tag type="function_call" start="0" length="22" token="func_2(int  x, int  y)" /></line><line number="54" pc="3735928559" offset="2291" length="27" executable="false" has_break="false">     func_2 (int x, int y)
<tag type="function" start="5" length="6" token="func_2" /><tag type="keyword" start="13" length="3" token="int" /><tag type="local_var" start="17" length="1" token="x" /><tag type="keyword" start="20" length="3" token="int" /><tag type="local_var" start="24" length="1" token="y" /></line><line number="55" pc="3735928559" offset="2318" length="2" executable="false" has_break="false">{
</line><line number="56" pc="3735928559" offset="2320" length="58" executable="false" has_break="false">  typedef struct {int class_int_1, class_int_2;} class_t;
<tag type="keyword" start="18" length="3" token="int" /><tag type="local_var" start="22" length="11" token="class_int_1" /><tag type="local_var" start="35" length="11" token="class_int_2" /></line><line number="57" pc="3735928559" offset="2378" length="17" executable="false" has_break="false">  class_t class;
<tag type="keyword" start="2" length="7" token="class_t" /><tag type="local_var" start="10" length="5" token="class" /></line><line number="58" pc="3735928559" offset="2395" length="14" executable="false" has_break="false">  int *int_p;
<tag type="keyword" start="2" length="5" token="int *" /><tag type="local_var" start="7" length="5" token="int_p" /></line><line number="59" pc="3735928559" offset="2409" length="20" executable="false" has_break="false">  class_t *class_p;
<tag type="keyword" start="2" length="9" token="class_t *" /><tag type="local_var" start="11" length="7" token="class_p" /></line><line number="60" pc="3735928559" offset="2429" length="19" executable="false" has_break="false">  int int_22 = 22;
<tag type="keyword" start="2" length="3" token="int" /><tag type="local_var" start="6" length="6" token="int_22" /></line><line number="61" pc="3735928559" offset="2448" length="23" executable="false" has_break="false">  short short_21 = 12;
<tag type="keyword" start="2" length="5" token="short" /><tag type="local_var" start="8" length="8" token="short_21" /></line><line number="62" pc="3735928559" offset="2471" length="19" executable="false" has_break="false">  int int_21 = 11;
<tag type="keyword" start="2" length="3" token="int" /><tag type="local_var" start="6" length="6" token="int_21" /></line><line number="63" pc="3735928559" offset="2490" length="24" executable="false" has_break="false">  float float_21 = 1.1;
<tag type="keyword" start="2" length="5" token="float" /><tag type="local_var" start="8" length="8" token="float_21" /></line><line number="64" pc="3735928559" offset="2514" length="30" executable="false" has_break="false">  double double_21 = 1.22658;
<tag type="keyword" start="2" length="6" token="double" /><tag type="local_var" start="9" length="9" token="double_21" /></line><line number="65" pc="3735928559" offset="2544" length="19" executable="false" has_break="false">  int_p = &amp;int_22;
<tag type="local_var" start="2" length="5" token="int_p" /><tag type="local_var" start="11" length="6" token="int_22" /></line><line number="66" pc="3735928559" offset="2563" length="20" executable="false" has_break="false">  class_p = &amp;class;
<tag type="local_var" start="2" length="7" token="class_p" /><tag type="local_var" start="13" length="5" token="class" /></line><line number="67" pc="3735928559" offset="2583" length="29" executable="false" has_break="false">  class_p-&gt;class_int_1 = 14;
<tag type="local_var" start="2" length="7" token="class_p" /></line><line number="68" pc="3735928559" offset="2612" length="29" executable="false" has_break="false">  class_p-&gt;class_int_2 = 15;
<tag type="local_var" start="2" length="7" token="class_p" /></line><line number="69" pc="3735928559" offset="2641" length="26" executable="false" has_break="false">  class.class_int_1 = 13;
<tag type="local_var" start="2" length="5" token="class" /></line><line number="70" pc="3735928559" offset="2667" length="3" executable="false" has_break="false">  
</line><line number="71" pc="3735928559" offset="2670" length="64" executable="false" has_break="false">  int_21 = loop_(class_p-&gt;class_int_1,*int_p, int_22, short_21,
<tag type="local_var" start="2" length="6" token="int_21" /><tag type="function" start="11" length="5" token="loop_" /><tag type="local_var" start="17" length="7" token="class_p" /><tag type="local_var" start="39" length="5" token="int_p" /><tag type="local_var" start="46" length="6" token="int_22" /><tag type="local_var" start="54" length="8" token="short_21" /></line><line number="72" pc="3735928559" offset="2734" length="36" executable="false" has_break="false">		 int_21, float_21,double_21,x,y);
<tag type="local_var" start="3" length="6" token="int_21" /><tag type="local_var" start="11" length="8" token="float_21" /><tag type="local_var" start="20" length="9" token="double_21" /><tag type="local_var" start="30" length="1" token="x" /><tag type="local_var" start="32" length="1" token="y" /></line><line number="73" pc="3735928559" offset="2770" length="17" executable="false" has_break="false">  while (int_21)
<tag type="local_var" start="9" length="6" token="int_21" /></line><line number="74" pc="3735928559" offset="2787" length="6" executable="false" has_break="false">    {
</line><line number="75" pc="3735928559" offset="2793" length="27" executable="false" has_break="false">      int_21 = x / int_21;
<tag type="local_var" start="6" length="6" token="int_21" /><tag type="local_var" start="15" length="1" token="x" /><tag type="local_var" start="19" length="6" token="int_21" /></line><line number="76" pc="3735928559" offset="2820" length="6" executable="false" has_break="false">    }
</line><line number="77" pc="3735928559" offset="2826" length="17" executable="false" has_break="false">  return int_21;
<tag type="local_var" start="9" length="6" token="int_21" /></line><line number="78" pc="3735928559" offset="2843" length="2" executable="false" has_break="false">}
</line><line number="79" pc="3735928559" offset="2845" length="1" executable="false" has_break="false">
</line><line number="80" pc="3735928559" offset="2846" length="4" executable="false" has_break="false">int
<tag type="keyword" start="0" length="4" token="int&#xA;" /><tag type="function_call" start="0" length="22" token="func_1(int  x, int  y)" /></line><line number="81" pc="3735928559" offset="2850" length="22" executable="false" has_break="false">func_1 (int x, int y)
<tag type="function" start="0" length="6" token="func_1" /><tag type="keyword" start="8" length="3" token="int" /><tag type="local_var" start="12" length="1" token="x" /><tag type="keyword" start="15" length="3" token="int" /><tag type="local_var" start="19" length="1" token="y" /></line><line number="82" pc="3735928559" offset="2872" length="2" executable="false" has_break="false">{
</line><line number="83" pc="3735928559" offset="2874" length="19" executable="false" has_break="false">  int int_21 = 21;
<tag type="keyword" start="2" length="3" token="int" /><tag type="local_var" start="6" length="6" token="int_21" /></line><line number="84" pc="3735928559" offset="2893" length="19" executable="false" has_break="false">  int int_11 = 12;
<tag type="keyword" start="2" length="3" token="int" /><tag type="local_var" start="6" length="6" token="int_11" /></line><line number="85" pc="3735928559" offset="2912" length="52" executable="false" has_break="false">  printf("abs of -1 and 1: %d %d",ABS(-1), ABS(1));
</line><line number="86" pc="3735928559" offset="2964" length="34" executable="false" has_break="false">  return func_2 (int_21, int_11);
<tag type="function" start="9" length="6" token="func_2" /><tag type="local_var" start="17" length="6" token="int_21" /><tag type="local_var" start="25" length="6" token="int_11" /></line><line number="87" pc="3735928559" offset="2998" length="2" executable="false" has_break="false">}
</line><line number="88" pc="3735928559" offset="3000" length="12" executable="false" has_break="false">int main ()
<tag type="keyword" start="0" length="3" token="int" /><tag type="function" start="4" length="4" token="main" /><tag type="function_call" start="0" length="6" token="main()" /></line><line number="89" pc="3735928559" offset="3012" length="2" executable="false" has_break="false">{
</line><line number="90" pc="3735928559" offset="3014" length="19" executable="false" has_break="false">  int int_21 = 31;
<tag type="keyword" start="2" length="3" token="int" /><tag type="local_var" start="6" length="6" token="int_21" /></line><line number="91" pc="3735928559" offset="3033" length="17" executable="false" has_break="false">  int int_1 = 1;
<tag type="keyword" start="2" length="3" token="int" /><tag type="local_var" start="6" length="5" token="int_1" /></line><line number="92" pc="3735928559" offset="3050" length="33" executable="false" has_break="false">  return func_1 (int_21, int_1);
<tag type="function" start="9" length="6" token="func_1" /><tag type="local_var" start="17" length="6" token="int_21" /><tag type="local_var" start="25" length="5" token="int_1" /></line><line number="93" pc="3735928559" offset="3083" length="2" executable="false" has_break="false">}
</line><line number="94" pc="3735928559" offset="3085" length="1" executable="false" has_break="false">
</line></source></image></TaskTask>
