2006-10-20  Yao Qi  <qiyaoltc@cn.ibm.com>

	* SourceWindow.java (updateShownStackFrame): Check null 
	pointer for argument.

	* CurrentStackView.java (CurrentStackView): Avoid reference
	a null StackFrame object.

2006-10-18  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java (SourceWinBlocker.existingTask):
	Update number of Tasks before proceding with blocks.
	* SourceWindow.java (SourceWindow): Changed all references to
	Action to org.gnu.gtk.Action. Similarly for ActionListener.
	Imported frysk.proc.Action; new references to Action refer 
	to this import.
	(toggleMainThread): Added.	Unblocks and re-blocks the main task.
	(InstructionObserver): Added.

2006-10-17  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (doStackUp): Catch null TreePath selection.
	(doStackDown): Ditto.
	(doStackBottom): Ditto.
	* SourceBuffer.java (setCurrentLine): Only highlight currently
	selected stack frame. Addresses #3327.

2006-10-16  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java (SourceWinListener.lifeCycleQuery):
	Set SW_active to false after the window closes.

2006-10-13  Rick Moseley  <rmoseley@redhat.com>

	* SourceView.java: Popup "Variable out of scope" when variable
	is right-clicked and it is out-of-scope.

2006-10-13  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (updateShownStackFrame): Check for a null
	DOMFunction and DOMSource in selected StackFrame. Made more
	robust for function definitions.
	* SourceView.java (scrollToFunction): Checks for open brace.

2006-10-12  Rick Moseley  <rmoseley@redhat.com>

	* VariableWatchView.java: Fixed stacktrace when last item in 
	window is deleted.
	* SourceView.java: Only show "Add to Variable Watches/
	Remove from Variable Watches" when necessary.

2006-10-12  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (populateStackBrowser): Don't rebuild the 
	StackView from scratch on subsequent calls (via stop/start). 
	Made public. Now called from global ProcAttachedObserver on 
	Proc re-block. Addresses #3346.
	(getDOM): Added.
	(SourceWindow): Create a new global ProcAttachedObserver object.
	(doRun): Makes a call to unblockProc() - runs the process from 
	the blocked state.
	(unblockProc): Added - Deletes the blocking observer from each of
	the Proc's Tasks.
	(doStop): Moved individual de/sensitization of widgets to 
	procReblocked(). Calls iterateAttach() from the global 
	ProcAttachedObserver to block all Tasks. Desensitizes SourceWindow.
	(procReblocked): Re-de/sensitizes widgets after the Proc being
	observed has been re-blocked by the observer.
	* SourceWindowFactory.java (generateProcStackTrace): Added. Creates
	a new DOMFrysk if necessary; handles stack trace re/generation.
	(finishSourceWin): Calls generateProcStackTrace() for stack trace
	generation.
	(handleTask): Added code to determine whether or not the event is 
	a SourceWindow creation or a Stop/Continue; creates or generates
	information as necessary.

2006-10-12  Rick Moseley  <rmoseley@redhat.com>

	* VariableWatchView.java: Now are able to view float/double values.

2006-10-11  Mike Cvet  <mcvet@redhat.com>

	* SourceBuffer.java (createTags): Strip spaces from the function
	string.
	* SourceView.java (scrollToFunction): Get rid of newlines and 
	spaces in the incoming string.
	* SourceWindow.java (updateShownStackFrame): Upon call, send the
	function string to the SourceView to scroll to. Fixes #3327.

2006-10-10  Mike Cvet  <mcvet@redhat.com>

	* SourceBuffer.java: (getVariable): Cleaned up a bit.
	* SourceView.java: Added a new HashMap to uniquely identify
	Variables.
	(removeVar): Added. Removes variable from the HashMap and calls
	to remove the variable trace from the GUI.
	(clickedOnTextArea): Added new menu option for removing Variables.
	* SourceWindow.java: (SourceWindow): New VariableWatchView with
	this as a parameter. 
	(removeVariableTrace): Added - removes the Variable trace from the 
	VariableWatchView.
	(getView): Added. 
	(doStackUp): Fixed up for #3327.
	(doStackDown): Ditto.
	(doStackBottom): Ditto.
	(currentStackChanged): Ditto.
	* VariableWatchView.java: (VariableWatchView): Sets incoming 
	SourceWindow as parent, initializes new TreeStore and Listener.
	(removeTrace): Added. Removes the row from the TreeView.
	(selectionChangedEvent): Added catch for index exception.
	(clickedOnVariable): Added. Creates new menu when a row is clicked
	from the TreeView.
	(handleClick): Added. Tells the parent to remove the clicked Variable.
	(mouseEvent): Added. Determines whether the mouse event is worth
	pursuing.
	

2006-10-09  Rick Moseley  <rmoseley@redhat.com>

	* SourceView.java: Fix only one digit of line #'s being displayed.
	Fix backtrace that is generated when clicking on non-variable area.

2006-10-06  Mike Cvet  <mcvet@redhat.com>

	* InlineBuffer.java (getVariable): Sends scope argument into new
	SymTab.
	* SourceBuffer.java (getVariable): Ditto.

2006-10-05  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (doStackUp): Fixed up to work with multithreaded
	Procs and the TreeView in the StackView.
	(doStackDown): Ditto.
	(doStackBottom): Ditto.

2006-10-05  Rick Moseley  <rmoseley@redhat.com>

	* SourceView.java: Re-arranged right-click variable value menu.
	Do not show "Add Trace" when clicking in white space.
	Changed "Add Trace" to "Add to Variable Watrches".

2006-10-05  Rick Moseley  <rmoseley@redhat.com>
	
	* SourceView.java: Use the Variable.toString() to display variable
	values.

2006-10-05  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (setMyProc): Fixed to update window title.
	Fixes #3309.

2006-10-04  Mike Cvet  <mcvet@redhat.com>

	* SourceBuffer.java (isLineBroken): Added a null check.
	* SourceWindowFactory.java (procTable): Changd from taskTable.
	(createSourceWindow): Updated to create a SourceWindow from a Proc
	with multiple Tasks. Uses ProcAttachedObserver to block the Proc.
	(finishSourceWin): Takes a proc. Iterates through each Task and
	generates a StackFrame from it, pushing into an array. Sends 
	StackFrame array into SourceWindow. Removed call to getDwflLineXXX.
	(unblockProc): Refactored from unblockTask. Handles new Proc blocking
	method.
	(getFunctionXXX): Removed unnecessary print statements.
	(SourceWinListener.lifeCycleQuery): Unblocks the Proc instead of Task.
	(SourceWinBlocker): Added - implements ProcObserver.ProcTasks.
	(handleTask): Added.
	* SourceWindow.java (SourceWindow): Takes an array of StackFrames 
	as a parameter.
	(setMyProc): Added.
	(getMyProc): Added.
	(populateStackBrowser): Initializes the stack browser with an array
	of StackFrames; one for each thread belonging to the Proc. Updates
	shown stack frame.
	(toggleRegisterWindow): Handles the RegisterWindow with a Proc.
	(toggleMemoryWindow): Ditto.
	(toggleDisassemblyWindow): Ditto.
	* CurrentStackView.java (CurrentStackView): Initializes stackColumns
	globally. Now takes an array of StackFrames as a parameter, builds
	a TreeView out of them. Changed ListStore to TreeStore.
	(getFirstFrameSelection): Added.

2006-10-04  Rick Moseley  <rmoseley@redhat.com>

	* SourceBuffer.java: Fix off by one line number error for 
	right-click variable values.

2006-10-03  Mike Cvet  <mcvet@redhat.com>

	* CurrentStackView (CurrentStackView): Enabled for x86_64.

2006-10-01  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (getVariable): Now uses frysk.lang.Variable and
	SymTab.
	* SourceBuffer.java (getVariable): Ditto.
	* InlineSourceView.java (mouseEvent): Now shows the variable value
	as an item within the right click menu, also rewired to use
	frysk.lang.Variable.
	* SourceView.java (clickedOnTextArea): Ditto.
	(parent): Made protected.
	* SourceWindow.java: Replaced references of frysk.gui.srcwin.Variable
	with frysk.lang.Variable.
	* VariableWatchView.java: Reformatted.
	(addTrace): Now uses frysk.lang.Variable.
	* Variable.java: Removed, frysk.lang.Variable should be used instead.

2006-09-22  Mike Cvet  <mcvet@redhat.com>

	* SourceBuffer.java (isLineExecutable): Check for a null StackFrame
scope. Addresses #3250.
	(getVariable): Ditto.
	(getLineCount): Ditto.
	(hasInlineCode): Ditto.
	(getInlineInstance): Ditto.
	(loadFile): Ditto.

2006-09-21  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (getVariable): Changed to reflect new parameter to
	Variable constructor.
	* SourceBuffer.java (getVariable): Ditto.
	* SourceView.java (drawMargin): Added additional comments.
	(mousedOverText): Ditto.
	* Variable.java (Variable): Added filepath parameter.
	(getFilePath): Added.

2006-09-20  Tom Tromey  <tromey@redhat.com>

	* CurrentLineSection.java (startOffset): Renamed.
	(CurrentLineSection): Updated.
	(getStartOffset): Renamed.
	(setStartOffset): Likewise.
	* SourceBuffer.java (setCurrentLine): Use renamed getStartOffset.

2006-09-20  Mike Cvet  <mcvet@redhat.com>

	* InlineSourceView.java (InlineSourceView): Passes a StackFrame
	to the new InlineBuffer.
	(toggleChild): Passes in a StackFrame to the new InlineSourceView.
	* InlineBuffer.java (InlineBuffer): Takes a StackFrame, used
	as the current scope.
	(moveDown): Uses StackFrame to set current scope.
	(moveUp): Ditto.
	* SourceBuffer.java (loadFile): Added a boolean and a check to 
	prevent error message being continuously printed to the view.
	* CurrentStackView.java (CurrentStackView): Now displays a stack
	backtrace on tasks without debug info.
	(getCurrentFrame): Made this and the returned variable static.

2006-09-19  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (SourceWindow): Removed StackLevel from 
	parameters.
	(populateStackBrowser): Removed StackLevel.
	* SourceWindowFactory.java (finishSourceWin): Removed creation of 
	StackLevels.
	* CurrentStackView.java (CurrentStackView): Got rid of all references
	to StackLevel and CurrentLineSection. Re-organized to properly detect
	inline code.

2006-09-18  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (populateStackBrowser): Initializes the
	View with a StackFrame.
	(SourceWindow): Got rid of the StackLevel global variable.
	* SourceView.java (SourceView): Changed StackLevel to 
	a StackFrame.
	(SourceView): Ditto.
	(load): Ditto.
	(getScope): Ditto.
	* View.java (load): Ditto.
	(getScope): Ditto.
	* SourceBuffer.java (scope): Changed StackLevel variable
	to a StackFrame.
	(SourceBuffer): Changed StackLevel to a StackFrame.
	(SourceBuffer): Ditto.
	(setCurrentLine): Ditto. Updated calls properly.
	(setScope): Ditto.
	(setScope): Ditto.
	(getScope): Ditto.
	* MixedView.java (MixedView): Changed StackLevel to a
	StackFrame.
	(load): Ditto.
	(getScope): Ditto.
	* InlineBuffer.java (InlineBuffer): Temporarily removed 
	calls to setScope.
	(moveDown): Ditto.
	(moveUp): Ditto.
	(setCurrentLine): Switched the change line calls to a 
	StackFrame instead of a CurrentLineSection.
	* CurrentStackView.java (StackViewListener): Changed to a
	StackFrame from a StackLevel.
	(notifyObservers): Ditto.
	(selectionChangedEvent): Ditto.
	* SourceWindowFactory.java (finishSourceWin): Properly creates
	StackFrames, and initializes information for each frame on the 
	call stack, rather than just the top StackLevel.
	(SourceWinBlocker.addFailed): Logging call made directly to errorLog
	rather than the EventLogger.

2006-09-16  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java: Added Javadoc.

2006-09-15  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (conWin): Imported and made variables for
	ConsoleWindow - now represented by the SourceWindow.
	(createMenus): Added code to display the ConsoleWindow from the 
	menu - commented out for now, pending bugs.
	(toggleConsoleWindow): Added.
	(toggleDisassemblyWindow): Added a catch for 64-bit architectures,
	on which the disassembler does not work properly, yet. Fixes #3203.
	(toggleMemoryWindow): Ditto.

2006-09-14  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (toggleDisassemblyWindow): Added a toggleAction
	for the DisassemblyWindow.
	(createActions): Set up the toggleAction for above.
	(createMenus): Added menu items for the above window.
	(toggleDisassemblyWindow): Added.

2006-09-08  Mike Cvet  <mcvet@redhat.com>

    * CurrentStackView.java (CurrentStackView): Added architecture
    checks to address #3198.

2006-09-08  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java (finishSourceWin): Creates a new
	StackFrame to send to the SourceWindow. Removed some unneeded 
	comments and information.
	* CurrentStackView.java (CurrentStackView): Temporarily removed lots
	of old and redundant code, and added plumbing for the new StackFrame
	parameter.
	* SourceWindow.java (SourceWindow): Now takes in a StackFrame for 
	useful information.
	(populateStackBrowser): Also takes a StackFrame as a parameter.
	* CurrentLineSelection.java: Applied GNU formatting.

2006-07-27  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java: Cleaned up global variables; now works
	properly with the TaskBlockCounter.
	(createSourceWindow): Added null checks and counter checks for
	multiple windows watching the same process.
	(unblockTask): Decrements the block counter, properly cleans up
	after an exit.
	* SourceWindow.java (toggleRegisterWindow): Calls RegisterWindow
	properly through the new factory.
	(toggleMemoryWindow): Ditto for MemoryWindow.

2006-07-26  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java: Added static SourceWindow variable.
	(finishSourceWin): Edited to use above variable.
	* SourceWindow.java: Removed some unnecessary imports and
	global variables for the Memory and Register windows, which is
	now taken care of by their respective factories.
	(SourceWindow): Remove Register and Memory window initialization.
	(attachEvents): Remove listeners for the above windows.
	(doRun): Removed references to the above windows.
	(doStop): Ditto.
	(toggleMemoryWindow): Allows MemoryWindowFactory to take care of
	initialization, showing, hiding, and task assigning.
	(toggleRegisterWindow): Ditto for RegisterWindowFactory.

2006-07-21  Rick Moseley  <rmoseley@redhat.com>

	* SourceWindow.java: Minor change of source window title.

2006-07-17  Rick Moseley  <rmoseley@redhat.com>

	* SourceWindow.java: Corrected misspelling of "occurrence".

2006-07-11  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (SourceWindow): Added initialization for the
	memory window, removed import for WindowManager.
	(addEvents): Now uses local register window.
	(doRun): Ditto.
	(doStop): Ditto.
	(toggleMemoryWindow): Ditto.

2006-07-07  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Now initializes the register
	window.
	(addEvents): Changed to use new local register window.
	(doRun): Ditto.
	(doStop): Ditto.
	(toggleRegisterWindow): Ditto.
	* SourceWindowFactory.java (finishSourceWindow): No longer hides the
	session manager if a source window already exists, also calls
	grabFocus().

2006-07-06  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (finishSourceWindow): No longer calls
	setKeepAbove(true) as this makes the dialog modal.

	* SourceWindowFactory.java (finishSourceWindow): Now calls grabFocus
	and setKeepAbove(true) for the source window.

	* SourceView.java: Applied GNU formatting.
	(exposeEvent): Refactored so that in the future it will be easier to
	enable hover-over-variable display.
	(mousedOverText): Now saves the variable in the object and
	tells the window to refresh if we've moved from a variable to no
	variable or vice versa.

2006-07-05  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWindow): Now checks to 
	see if the task is blocked, and if it is does not add a blocker.

	* SourceWindow.java (SourceWindow): Now sets status bar text.
	(doStop): Ditto.
	(doRun): Ditto.

	* SourceBuffer.java (hasInlinedCode): Now correctly handles the case
	where no debugging information is present.

	* CurrentStackView.java: Applied GNU formatting.
	(CurrentStackView): Now handles the case where DOM information in the
	stack frame is null, signifying a frame with no debugging
	information.
	* SourceBuffer.java: Applied GNU formatting.
	(getVariable): Now handles case where there is no DOM for the current
	frame.
	(getLineCount): Ditto.
	(loadFile): Ditto.
	* SourceWindow.java (SourceWindow): Commented out unused DOMFrysk
	variable.
	(updateShownStackFrame): Now handles frames with no debug information.
	* SourceWindowFactory.java: Applied GNU formatting.
	(finishSourceWindow): Now handles cases where there is no debugging
	information for the current process.
	* StackLevel.java: Applied GNU formatting.
	(NO_LINE): Added.
	(StackLevel): Now handles cases where this is no debug information for
	the current stack.

2006-06-30  Mike Cvet  <mcvet@redhat.com>

	* SourceWindow.java (toggleMemoryWindow): Added toggle for MemoryWindow.
	(createActions): Added Action for MemoryWindow.
	(createMenus): New MenuItem for MemoryWindow.
	(attachEvents): Added Listener for MemoryWindow.
	(doRun): Set running status for MemoryWindow.
	(doStop): Ditto.
	* SourceWindow.java: Formatted with new GNU formatter.

2006-06-28  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (finishSourceWindow): Now pops up a WarnDialog if
	a IOException occurs while creating the DOM.
	(unblockTask): Added, refactored out of multiple occurances in the code.

	* SourceWindow.java (showFindBox): Now sets focus to be on the 
	search text box, fixes bug 2854.

2006-06-27  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (doStackUp): No longer uses the outdate widget
	from glade, now uses the local CurrenStackView variable.
	(doStackDown): Ditto.
	(doStackBottom): Ditto.

	* SourceWindowFactory.java (finishSourceWindow): If a source window
	has been previously opened for this task restore it and hide the
	session manager.
	(SourceWinListener.lifeCycleQuery): Now unblocks the task when the 
	source window closes.

2006-06-22  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (finishSourceWindow): Now hides the
	session manager before showing the source window.
	(SourceWinListener.lifeCycleQuery): Reshows the session manager when
	the window exits.

	* SourceWindow.java (createActions): Now sets program control actions
	to insensitive since they are currently not implemented.
	(attachEvents): Set mode box to insensitive since it is currently not
	properly implemented.

2006-06-22  Mike Cvet  <mcvet@redhat.com>

	* SourceWindowFactory.java: Observer add failures are now logged properly.

2006-06-22  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (finishSourceWin): Now calls requestUnblock
	before removing the observer.

2006-06-21  Phil Muldoon  <pmuldoon@redhat.com>

	* SourceWindowFactory.java (finishSourceWin): Use
	NoDebugInfoDialog for warning.

2006-06-20  Mark Wielaard  <mark@klomp.org>

	* SourceWindowFactory.java (finishSourceWin): Fix if block.

2006-06-20  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (finishSourceWin): No longer throws
	an exception if a blocker is not found.

	* SourceWindowFactory.java (finishSourceWin): No longer uses
	DialogManager to launch the error dialog, now creates it's own.

	* SourceWindowFactory.java (getFunctionXXX): Changed the heuristic for
	finding the current function, since the previous one would break if 
	weren't stopped on the function entry address.

	* SourceWindowFactory.java (finishSourceWin): Now uses proper call
	to showErrorDialog and calls System.exit(1) if ErrorDialog.QUIT is
	returned.

2006-06-19  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (finishSourceWin): Initialized dom with
	null.

	* SourceWindowFactory.java (finishSourceWin): Now creates a dialog
	rather than trying to throw an exception to be caught, since nothing
	will be able to catch the exception.

	* SourceWindowFactory.java (finishSoruceWin): Now throws a
	NoDebugInfoException if the dom cannot be created.

	* SourceWindowFactory.java (finishSourceWin): Fixed bug where
	observers are no longer removed from a task if there aren't any
	attached blockers following failure to get a dom object.

2006-06-16  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWinFromStoppedTask):
	Created, behaves the same as createSourceWindow except it assumes
	that the task is already blocked.

2006-06-15  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (getFunctionXXX): Added as an interim way
	of getting the function on a file and line number.
	(finishSourceWin): Uses getFunctionXXX rather than a hardcoded
	DOMFunction.

2006-06-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWin): Stores a reference to
	the blocker for the task in a hash map so we can detatch from it when
	we're done.
	(finishSourceWin): If no DOM can be created, now tells task to resume
	execution.

	* SourceWindowFactory.java (finishSourceWin): Now uses the parent proc
	for a key in the hashmap rather than the task itself.

	* SourceWindowFactory.java (SourceWindowBlocker): Added.
	(createSourceWin): Now pushes event onto the core event loop and
	exits,
	(finishSourceWin): Added, is called after task is  blocked.

2006-06-07  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (loadFile): No longer tries to parse DOM, merely
	creates tags from information contained in the DOM.
	* SourceWindowFactory.java (setTestFilesPath): Removed.
	(clearTestFilesPath): Removed.
	(createSourceWindow): Now uses DOMFactory to create the DOM and no
	longer pulls in test files.

2006-05-17  Andrew Cagney  <cagney@redhat.com>

	* SourceWindow.java: Comment out println calls.
	* cparser/Tokenizer.java: Ditto.

2006-05-10  Adam Jocksch  <ajocksch@redhat.com>

	* CurrentStackView.java (CurrentStackView): Now adds accessibility
	information.
	* SourceView.java (SourceView): Ditto.
	* VariableWatchView.java (VariableWatchView): Ditto.
	* SourceWindowFactory.java (SourceWindowFactory): Made some modifications
	to inline code positions to better line up with code examples.

2006-05-03  Phil Muldoon  <pmuldoon@redhat.com>

	* tags/Tagset.java (Tagset): Add a no parameter constructor
	to satisfy ObjectFactory.load() reflection class loading.
	* tags/Tag.java (Tag): Ditto. 
	* tags/TagsetManager.java (removeTagset): Added. Remove tag set 
	from storage and manager.
	(save): Added. Save all tag sets registered with the manager.
	(load): Added. Load all tag sets in Tagsets directory.
	(TagsetManager): Added lookup UniqueHashMap.
	(getTagsetByName): Added. Allow Tagset name lookup.

2006-05-01  Phil Muldoon  <pmuldoon@redhat.com>

	* tags/Tagset.java (save): Implement from SaveableXXX interface.
	(load): Ditto. 
	* tags/Tag.java (save): Implement from SaveableXXX interface.
	(load): Ditto. 

2006-04-28  Phil Muldoon  <pmuldoon@redhat.com>

	* tags/TagsetManager.java (TagsetManager): Use ObservableLinkedList
	instead of Vector.
	(getListTagsets): Added. Return linked list.
	* tags/Tagset.java (Tagset): Extend GuiObject. Call super()
	in constructor.

2006-04-24  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactor.java (createSourceWindow): Uncommented
	hack to stop process since register get works with modified kernel,
	this will need to be replaced by a proper start/stop method.

2006-04-12  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (toggleRegisterWindow): Now uses WindowManager
	to launch the register window.
	* SourceWindowFactory.java (createSourceWindow): Added commented out
	observer that stops the current task, this will evetually need to be
	replaced with a less hackish API.

2006-04-10  Adam Jocksch  <ajocksch@redhat.com>

	* SoureWindow.java (createActions): Changed type of find and
	toggleRegisterWindow actions to ToggleAction, made it so a
	repeated triggering of the find event will show/hide the bar.
	(createSearchBar): No longer sets icons for next/prev buttons,
	resets the text for highlight all after setting icon.
	(showFindBox): Added.

2006-04-10  Adam Jocksch  <ajocksch@redhat.com>

	* tags/TagsetManager.java (getTagsets): Added overloaded version
	that returns all tagsets registered with manager.

	* SourceWindow.java (setMyTask): Refactored out Register window
	creation code.
	(createActions): Created action for toggling register window.
	(createMenus): Creates "View" menu with option to toggle register
	window.
	(toggleRegisterWindow): Added.

2006-04-06  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (setMyTask): Now creates a register window for the task.
	(doRun): Sets the register window to be insensitive.
	(doStop): Sets the register window to be sensitive.

2006-04-05  Adam Jocksch  <ajocksch@redhat.com>

	* tags/Tagset.java (Tagset): Now takes a version string of the command
	this tagset applies to.
	(getVersion): Added.
	(addTag): Added.
	(getTags): Added.
	(containsTag): Added.
	(equals): Added.
	* tags/TagsetManager.java (containsTagset): Added.
	* tags/Tag.java: Added.

	* tags/TagsetManager.java: (addTagset): Now properly adds tag to
	tagset.

	* tags: Added.
	* tags/TagsetManager.java: Added.
	* tags/Tagset.java: Added.

	* SourceWindow.java (attachEvents): Now adds mouse listener to the
	toolbar goto box that selects the text in the box when the mouse is
	clicked on it.

2006-04-04  Adam Jocksch  <ajocksch@redhat.com>

	* SourceView.java (scrollToFunction): Now scrolls so the function is
	near the top of the window.
	* SourceWindow.java (attachEvents): Now adds completion to the goto box,
	for jump to function purposes.
	(doJumpToFunction): Added.
	(SourceWinListener.entryEvent): If parse for line number fails, now
	jumps to function, also removed clearing of text.

2006-04-03  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (scrollToLine): Now uses a value of 0.35 as the
	second parameter, so the line the user wanted to scroll to appears
	closer to the top of the widget.
	* SourceWindow.java (SourceWindowListener.entryEvent): Now also jumps
	to a line number when the user enters that number; no longer needs to
	be prefixed by "line ".

	* SourceWindow.java (SourceWindow): Removed call to populateFunctionBox.
	(addEvents): Now adds an EntryListener to the toolbar entry.
	(gotoLine): Now takes a line to jump to, passes that line to source view.
	(doScrollToFunction): Removed.
	(updateShownStackFrame): Removed call to populateFunctionBox.
	(doStop): Sets the sensitivity of the toolbar goto box.
	(doRun): Ditto.
	(populateFunctionBox): Removed.
	(SourceWindowListener.buttonEvent): No longer checks for goto button.
	(EntryEvent): If the event came from the toolbar, try to parse it to
	jump to a line.
	(comboBoxEvent): Now is only responsible for switching the mode of the
	source window.

	* CurrentStackView.java (CurrentStackView): No longer shows headers,
	also added function names to the information displayed.
	* InlineBuffer.java (InlineBuffer): No longer takes a DOMSource.
	(moveDown): refactored to reflect changes to StackLevel.
	* InlineSourceView.java (InlineSourceView): No longer takes a
	DOMSource.
	* SourceView.java (toggleChild): Refactored to reflect new 
	InlineSourceView constructor.
	* SourceWindow.java (addEvents): Removed events for goto line.
	(createSearchBar): Removed initializations for goto line.
	* SourceWindowFactory.java (createSourceWindow): Now adds functions
	to the StackLevels.
	* StackLevel.java (StackLevel): Now takes a DOMFunction instead of
	a DOMSource.
	(getFunc): Added.
	* cparser/CDTParser.java (ParserCallBack.acceptFunctionDeclaration):
	removed debugging output.

2006-03-31  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (createTags): Commented out section for adding
	comment texttags, is still broken in some corner cases. Will leave
	disabled until fix is in place.
	* InlineBuffer.java (createTags): Ditto.
	* SourceWindowFactory.java (createSourceWindow): Changed executable
	lines for file test2.cpp due to edits.
	* cparser/CDTParser.java (ParserCallBack.acceptVariable):
	No longer assumes that the variable name and it's type are on the 
	same line.
	(ParserCallBack.acceptFunctionDeclaration): Ditto, also assumes
	that not all parameters are on the same line.
	(enterFunctionBody): Ditto.
	* testfiles/test2.cpp: Added varaible declaration that spans two lines.

2006-03-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (createTags): Now uses DOMTagTypes as tag names,
	skips of FUNCTION_BODY tags.
	* SourceBuffer.java (init): Now initializes tags using DOMTagTypes,
	also added listener for template syntax highlighting.
	(createTags): Now uses type of tag to create TextTag, FUNCTION_BODY
	tags no longer trigger syntax highlighting, rather they add the
	function to the interal vector of funcions.
	* SourceWindow.java (SourceWindow): Reordered initialization steps
	so that events are the last thing to be initialized.
	(doScrollToFunction): Removed "_FUNC" postfix.
	(populateFunctionBox): No longer tries to remove "_FUNC" postfix.
	* cparser/CDTParser.java 
	(ParserCallBack.enterFuncitonBody): Now adds a FUNCTION tag
	for syntax highlighting and a FUNCTION_BODY tag containing the
	complete parameter list for jump-to-function purposes.
	(ParserCallBack.enterMethodBody): Ditto.
	(ParserCallBack.acceptTemplateParameterReference): Implemented.
	* prefs/SyntaxPreferenceGroup.java (TEMPLATE): Added.

2006-03-28  Rick Moseley  <rmoseley@redhat.com>
	* cparser/CDTparser.java: Added Frysk comment header.
	* cparser/Token.java: Ditto.
	* cparser/Tokenizer.java: Ditto.
	* prefs/SourceWinPreferenceGroup.java: Ditto.
	* prefs/SyntaxPreference.java: Ditto.
	* prefs/SyntaxPreferenceGroup.java: Ditto.

2006-03-28  Rick Moseley  <rmoseley@redhat.com>
	* CurrentLineSection.java: Added Frysk comment header.
	* CurrentStackView.java:  Ditto.
	* InlineBuffer.java: Ditto.
	* MixedView.java: Ditto.
	* SourceWindowFactory.java: Ditto.
	* VariableWatchView.java: Ditto.
	* View.java: Ditto.

2006-03-27  Adam Jocksch  <ajocksch@redhat.com>

	* sourceBuffer.java (init): Added tags for macro highlighting and
	attaches a TagListener to the macro sytnax highlighting preference.
	(createTags): Creates macro tags.
	* cparser/CDTParser.java 
	(ParserCallBack.acceptMacro): Added method body.
	* prefs/SyntaxPreferenceGroup.java (NAMESPACE): Added.
	* testfiles/test6.cpp (THIS_IS_A_MACRO): Added.

	* SourceBuffer.java (init): Added tags for namespace and include
	statement syntax highlighting, adds listeners for these tags to the
	associated preferences.
	(createTags): Creates tags for namespace and include statement syntax
	highlighting.
	* cparser/CDTParser.java
	(ParserCallBack.enterNamespaceDefinition): Added method body.
	(ParserCallBack.acceptNamespaceReference): Ditto.
	(ParserCallBack.acceptUsingDirective): Ditto.
	(ParserCallBack.acceptUsingDeclaration): Ditto.
	(ParserCallBack.enterInclusion): Ditto.
	* prefs/SyntaxPreferenceGroup.java (NAMESPACE): Added.
	(INCLUDES): Ditto.
	* testfiles/test6.cpp: Updated to reflect a more complicated code
	example.

2006-03-24  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Now creates a VariableWatchView
	as well as initializing the stack browser before initializing events.
	(addVariableTrace): Now delegates work to VariableWatchView.
	(populateStackBrowser): Now creats a CurrentStackView.
	(addEvents): Adds listener to the CurrentStackView.
	(updateShownStackFrame): Now gets stackLevel direct from event.
	(SourceWinListener): Now implements StackViewListener.
	(SourceWinListener.currentStackChanged): Added.
	(SourceWinListener.selectionChangedEvent): Removed.
	* VariableWatchView.java: Added.
	* CurrentStackView.java: Added.

2006-03-19  Andrew Cagney  <cagney@redhat.com>

	* SourceWindow.java (setMyTask): Do not append Task.getStateString
	to the name; value should have been private to Task.

2006-03-17  Adam Jocksch  <ajocksch@redhat.com>

	* cparser/CDTParser.java (parse): Now parses file with QUICK_PARSE and
	COMPLETE_PARSE to highlight the most items possible.

2006-03-16  Adam Jocksch  <ajocksch@redhat.com>

	* cparser/CDTParser.java (parse): Changed the parsing mode to
	QUICK_PARSE, as this mode seems to lead to more accurate parsing
	and syntax highlighting of the code.

2006-03-15  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (addFunction): Removed since parsers now directly
	manipulate the DOM.
	(addVariable): Ditto.
	(addKeyword): Ditto.
	(addClass): Ditto.
	(load): Now passes in DOMSource to parser.
	(getText): Removed.
	(getLineOffset): Removed.
	* InlineBuffer.java (getText): Removed.
	(getLineOffset): Ditto.
	* StaticParser.java (parse): Now takes a DOMSource object.
	* cparser/CDTParser.java (parse): Changed to reflect change to interface.
	(ParserCallBack): Functions now directly manipulate the DOM, rather than
	calling methods in SourceBuffer.
	* cparser/CTagsParser.java (parse): Changed to reflect interface,
	also commented out areas that add tags since they use the old API. Will
	update this parser when it becomes needed.
	* cparser/SimpleParser.java (parse): Ditto.

	* InlineBuffer.java (getText): Added.
	(getLineOffset): Ditto.
	* SourceBuffer.java (addFunction): Now uses getLineOffset.
	(addVariable): Ditto, also uses getText.
	(addKeyword): Ditto.
	(addClass): Ditto.
	(getText): Added.
	(getLineOffset): Ditto.
	* cparser/CDTParser.java (parse): Enabled parsing for return statements.

2006-03-14  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (createTags): Now goes through list of comments
	and creates tags for them as well.
	* SourceBuffer.java (createTags): Ditto.
	(addComment): Now adds a comment into the protected static HashMap,
	since we want to keep a copy but don't want to burden the DOM.
	(init): Comment tag now initialized again, and listener is added.
	(CommentList): Added, data structure to keep track of comments for a file.
	* StackLevel.java (isParsed): Now passes call on to DOMSource.
	(setParsed): Ditto.
	* cparser/CDTParser.java (parse): Now does secondary scan of file 
	to pick up comments, code copied from SimpleParser.java.
	* cparser/SimpleParser.java (Tokenizer): Refactored out into it's own class.
	(Token): Ditto.
	* cparser/Token.java: Added.
	* cparser/Tokenizer.java: Added.
	* prefs/SyntaxPreferenceGroup.java: Added field for Comments.

2006-03-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (init): Updated loading of preferences to 
	reflect making Syntax Highlighting related preferences a
	subgroup.
	* SourceView.java (initialize): Ditto.
	* prefs/SourceWinPreferenceGroup (SourceWinPreferenceGroup):
	Now takes int for preference tab.
	* prefs/SyntaxPreferenceGroup (SyntaxPreferenceGroup): Ditto.

2006-03-09  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (getVariable): Now adds check for the DOMLine
	being null since this occurs in corner cases.

	* SourceWindowFactory.java (createSourceWindow): Removed debugging
	output.

2006-03-08  Adam Jocksch  <ajocksch@redhat.com>
	
	* SourceWindow.java (createToolbar): Fixed tooltip for continue execution.
	(SourceWindowListener::comboEvent): Changed to reflect changes in mode
	selection box.

2006-03-03  Adam Jocksch  <ajocksch@redhat.com>

	* InlineSourceView.java (refresh): Renamed to recalculateVisibleScopes.
	* MixedView.java (refresh): Removed.
	* SourceView.java (refresh): Removed.
	(drawMargin): Now uses member variables that are set by the preference
	listeners.
	(initialize): Adds listeners to appropriate preferences.
	(calculateMargin): Added.
	* View.java (refresh): Removed.

	* InlineSourceView.java (refresh): Now gets number of inline 
	levels from new preferences model.
	(toggleChild): Ditto.
	* SourceBuffer.java (init): Now adds listeners to appropriate
	preferences.
	(finalize): Removed.
	(TagPeferenceListener): Added.
	* SourceView.java (refresh): Now pulls values from new preference model.
	(drawMargin): Ditto.
	* SourceWindow.java (refresh): Removed.
	(setShowToolbar): Added.
	(launchPreferenceWindow): Now uses new Preference Window.
	* prefs/ColorPreferenceEditor.java: Removed.
	* prefs/LNFPreferenceViewer.java: Ditto.
	* prefs/PreferenceList.java: Ditto.
	* prefs/PreferenceViewer.java: Ditto.
	* prefs/PreferenceWindow.java: Ditto.
	* prefs/SourceWinPreferenceGroup.java: Added.
	* prefs/SyntaxPreference.java: Now extends ColorPreference, also removed
	constants.
	(SyntaxPreference): Now takes a string and default values for color, weight,
	style.
	(addListener): Added.
	(updateTag): Removed.
	(revert): Added.
	* prefs/SyntaxPreferenceGroup.java: Added.
	* prefs/SyntaxPreferenceViewer.java: Removed.
	* prefs/TagPreference.java: Removed.

2006-02-23  Adam Jocksch  <ajocksch@redhat.com>

	* prefs/TagPreference.java: Added.

	* prefs/BooleanPreference.java: Moved to frysk.gui.common.prefs, .
	* prefs/PreferenceManager.java: Ditto.
	* prefs/IntPreference.java: Ditto.
	* prefs/ColorPreference.java: Ditto.
	* prefs/FryskPreference.java: Ditto, now implements Saveable,
	replacing saveValues and setModel.

2006-02-22  Adam Jocksch  <ajocksch@redhat.com>

	* MixedView.java (MixedView): Now adds source windows to scrolled
	widgets so that you can scroll laterally.
	* SourceBuffer.java (SourceBuffer): Added constructor that takes
	the mode to be displayed.
	(finalize): Added, removes this buffer's texttags from the preferences
	that update them.
	* SourceView.java (SourceView): Added constructor that takes the
	mode to be displayed.
	* SourceWindow.java (switchToAsmMode): Now uses new SourceView
	constructor.
	* prefs/ColorPreference.java (ColorPreference): Now adds tag to
	an internal vector of tags if non-null.
	(setModel): Now iteratres through all tags and updates them.
	(saveValues): Ditto.
	(appendTags): Added.
	(removeTag): Added.
	* prefs/PreferenceManager.java (addPreference): If the duplicate
	preference is a color preference, it now concatenates the new
	observer's list of tags with the old one's.
	(getColorPreference): Added private version that takes a string.
	* SyntaxPreference.java (updateTags): Extracted to save the
	properties of all the tags.

2006-02-15  Adam Jocksch  <ajocksch@redhat.com>

	* Sourcewindow.java: (createSearchBar): No longers sets label text,
	adds size groups to necessary items.
	(SourceWindowListener.ButtonEvent): Added check to make sure button
	was actually clicked.

2006-02-08  Phil Muldoon  <pmuldoon@redhat.com>

	* srcwin/SourceWindow.java: Revert i8n.

2006-02-03  Adam Jocksch  <ajocksch@redhat.com>

	* CodeItem.java: Removed, merged contents into Variable.java.

2006-02-02  Adam Jocksch  <ajocksch@redhat.com>

	* SourceView.java: Created inner class to handle listener
	responsabilities.
	(mouseEvent): Removed.
	(findNext): Now does the scrolling in this method.
	(findPrevious): Ditto.
	(scrollToFound): Removed.
	(scrollToFunction): Added.
	(getFunctions): Added.
	(getScope): Ditto.
	(drawMargin): Removed commented out debugging output.
	(mouseMotionEvent): Removed.
	(isTextArea): Added.
	(isMargin): Added.
	(clickedOnMargin): Added.
	(clickedOnTextArea): Ditto.
	(mouseOverMargin): Ditto.
	(mouseOverText): Ditto.
	(getIterFromWindowCoords): Ditto.
	* SourceWindow.java: Created inner class to handle listener
	responsabilities.
	(SourceWindow): Now sets the icon of the window to be the Frysk
	icon.
	(buttonEvent): Removed.
	(entryEvent): Removed.
	(comboBoxEvent): Removed.
	(resetSearchBox): Added.
	(populateStackBrowser): Made private.
	(SelectionChangedEvent): Removed.
	(addListeners): Now assigns listeners to the inner class.
	(hideFindBox): Added.
	(gotoLine): Ditto.
	(doFindNext): Ditto.
	(doFindPrev): Ditto.
	(doHighlightAll): Ditto.
	(doScrollToFunction): Ditto.
	(switchToSourceMode): Ditto.
	(switchToAsmMode): Ditto.
	(switchToMixedMode): Ditto.
	(switchToSourceAsmMode): Ditto.
	(updateShownStackFrame): Ditto.
	* View.java (scrollToFound): Removed.
	

2006-02-01  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (populateStackBrowser): Fixed infinite loop.

	* CurrentLineSection.java: Added, is able to represent the
	"current line" as an arbitrary number of contiguous sections.
	* InlineBuffer.java (setCurrentLine): Refactored to use 
	CurrentLineSection.
	* SourceBuffer.java (setCurrentLine): Ditto.
	(load): Ditto.
	* SourceWindow.java (populateStackBrowser): Ditto.
	* StackLevel.java (StackLevel): Ditto.
	(getStartingLineNum): Removed.
	(getEndingLineNum): Ditto.
	(setStartingLineNum): Ditto.
	(setEndingLineNum): Ditto.
	(getColEnd): Ditto.
	(setColEnd): Ditto.
	(getColStart): Ditto.
	(setColStart): Ditto.
	(getCurrentLine): Added.
	(setCurrentLine): Added.

2006-01-31  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (getVariable): Now added check to see if line
	was null, fixed NPE that can occur when mouse past end of text.
	(hasInlinedCode): Ditto.
	(getNumberOfAssemblyLines): Added.
	* SourceView.java (initialize): Now sets font to monospace.
	* SourceWindow.java (comboBoxEvent): Added code to set mode of the
	view to MIXED when appropriate.

	* SourceWindowFactory.java (createSourceWindow): Removed debugging 
	output, now will print stack trace and exit if source window glade
	file cannot be found.
	* MixedView.java (MixedView): Switched mode setting to use new
	interface.
	(load): Ditto.
	* SourceBuffer.java: Changed state from being a boolean to being an
	int with 3 possible values: source, assembly, or mixed.
	(isLineExecutable): Refactored to reflect above change.
	(isLineBroken): Ditto.
	(toggleBreakpoint): Ditto.
	(getVariable): Ditto.
	(getLineCount): Ditto.
	(hasInlineInstance): Ditto.
	(setScope): Single parameter version now uses above int-based mode
	system, dual parameter version now has switch statement for the three
	modes.
	(setShowAssembly): Refactored to setMode(int).
	* SourceView.java (setMode): Refactored to take an int instead of a
	booean.
	* SourceWindow.java (comboBoxEvent): Added section to deal with Mixed
	mode, added comments.

2006-01-30  Adam Jocksch  <ajocksch@redhat.com>

	* View.java (scrollToFunction): Added.
	(scrollToLine): Added.
	(getFunctions): Added.
	(getScope): Added.
	(showAll): Added.
	(getParent): Added.
	* MixedView.java: Added new interface methods.
	(MixedView): Created.
	(refresh): Added, calls refresh on children.
	(findNext): Now searches through the source, then assembly.
	(highlightAll): Now highlights every match in both buffers.
	(load): Loads data for both buffers.
	(getScope): Funnels call down to source buffer.
	* SourceView.java: Added new interface methods.
	* SourceWindow.java (comboBoxEvent): Now deals with the case where 
	the SOURCE/ASM option is chosen, as well as delegating the function
	goto cababilities to the View.
	(populateStackBrowser): Removed casts made possible by interface changes.
	(populateFunctionBox): Now uses getFunctions from View.

	* SourceBuffer.java (setScope): No longer takes boolean for assembly
	code, now to set assembly code you must call setShowAssembly, old
	version was made private.
	(setShowAssembly): Added.
	* SourceView.java (load): No longer takes boolean for assembly code.
	(setMode): Now calls setShowAssembly rather than setScope.

	* SourceBuffer.java (isLineExecutable): Now returns true for every line
	less than or equal to the last line if assembly code is being shown.
	(isLineBroken): Returns false if assembly code is being shown, will
	have to review this later as to breakpoints in assembly code.
	(toggleBreakpoint): Returns false if assembly code is being shown,
	see above comment.
	(getVariable): Always returns null if assembly code is being shown,
	since variables do not make sense in that context.
	(getLineCount): If assembly is being shown returns the length
	of the buffer, rather than the contents of the DOM.
	(hasInlineCode): Now returns false if assembly code is being shown for
	now, will this change once we're displaying mixed mode with inlined code?
	(setScope): Now sets member variable indicating whether assembly code
	is being displayed.
	* SourceView.java (setMode): Now calls refresh on the widget after
	showing assembly code.

2006-01-27  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (setScope): Now takes boolean as to whether the
	assembly should be shown rather than the source.
	(loadAssembly): Added.
	* SourceView.java (load): Added second method that takes boolean 
	indicating whether assembly code is to be shown rather than source
	code.
	(setMode): Added.
	* SourceWindow.java (comboBoxEvent): Now looks for changes in the
	viewing mode.
	(addEvents): Now adds listener to the mode combobox.

	* AssemblyView: Removed, will be worked in as part of SourceView.
	* InlineAssemblyView: Ditto, but with  InlineSourceView.
	* InlineView.java: Removed.

	* SourceViewWidget.java: Refactored to SourceView.java.
	* InlineViewer.java: Refactored to InlineSourceView.java.
	* View.java: Added.
	* SourceView.java: Refactored from SourceViewWidget.java, now implements
	View.java.
	* AssemblyView.java: Added.
	* MixedView.java: Added.
	* InlineView.java: Added.
	* InlineSourceView.java: Added.
	* InlineAssemblyView.java: Added.

2006-01-25  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (setScope): Now checks for the existence of tags
	before removing them.
	* SourceWindow.java (SourceWindow): Now initializes trace view widget.
	(addVariableTrace): Now adds variable name and a default value to the
	trace window.
	(selectionChanged): Now checks for no selection existing.
	* SourceWindowFactory.java: No longer initlializes variables in
	static constructor.
	(setDummyPath): Renamed to setTestFilesPath.
	(clearDummyPath): Renamed to clearTestFilesPath.
	(createSourceWindow): Added search to find proper test file path

	* SourceBuffer.java (addVariable): Re-hardcoded offsets for different
	variable types due to change to sample files.
	(init): Now sets strikethrough on optimized variable tag.
	* SourceWindowFactory.java (createSourceWindow): Re-hardcoded
	executable lines and current line due to changes in sample files.
	* testfiles/common.h: Removed declaration of myClass.
	* testfiles/test6.cpp: Added declaration of myClass.

2006-01-23  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget.java (mouseMotionEvent): Now checks for the existance
	of variables when the cursor is over the Text area of the widget and 
	changes the cursor to a hand if there is a variable there.

	* SourceViewWidget.java: Now implements MouseMotionListener.
	(initialize): Now adds this as a MouseMotionListener.
	(mouseMotionEvent): Added, changes the cursor over the margin and
	over lines that contain inline code.

2006-01-20  Adam Jocksch  <ajocksch@redhat.com>

	* prefs/PreferenceViewer.java (showPreferenceEditor): Removed public to
	fix warning.
	(saveAll): Ditto.

	* InlineViewer.java (refresh): Now calls getIntPreferenceValue rather
	than getIntPreference.
	(toggleChild): Ditto.
	* SourceViewWidget.java (refresh): Calls to get___Preference replaced
	with get___PreferenceValue.
	(drawMargin): Ditto.
	* SourceWindow (refresh): Ditto.
	* prefs/IntPreference.java (setCurrentValue): Added.
	* prefs/LNFPreferenceViewer.java (LNFPreferenceViewer): Now creates
	checkboxes and spinner for toolbar, line number, executable, and
	inline code depth preferences.
	(saveAll): saves preferences for toolbar, line number, executable mark
	and inline code depth.
	(toggleEvent): Added.
	(spinEvent): Added.
	* prefs/PreferenceManager.java: Now initializes toolbar preference
	using addPreference rather than directly inserting into the HashMap.
	(getBooleanPreferenceValue): Added.
	(getIntPreferenceValue): Added.
	(getColorPreferenceValue): Added.
	(getBooleanPreference): Now returns the preference, rather than the value.
	(getIntPreference): Ditto.
	(getColorPreference): Ditto.
	* prefs/PreferenceWindow.java: Now stores both lnf and syntax pref
	viewers.
	(buttonEvent): Both viewers are now saved, not just the current one.
	(setupButtons): Now initializes both viewers, although neither is added
	to the window.
	(updateShownPrefs): Now uses the previously initialized preference
	viewers.

2006-01-19  Adam Jocksch  <ajocksch@redhat.com>

	* prefs/PreferenceWindow.java (preferenceWindow): Now calls addListeners
	prior to calling setupButtons so that the initial selection is handled
	properly.

	* prefs/ColorPreference.java (setModel): No longer calls saveValues, now
	sets tag properties.
	* prefs/PreferenceList.java (selectionChangedEvent): Changed type of 
	preference being retrieved to ColorPreference from SyntaxPreference.
	* prefs/PreferenceWindow.java (updateShownPrefs): Fixed typo for name
	of glade widget and syntax highlighting option, now shows all widgets
	after they've been added.

	* prefs/PreferenceWindow.java (updateShownPrefs): Now actually changes
	the preference editor being displayed based on the selection.

	* prefs/PreferenceViewer.java (saveAll): Added.
	* prefs/LNFPreferenceViewer.java: Added.

	* prefs/PreferenceWindow.java (setupButtons): No longer creates a 
	SyntaxPreferenceViewer on startup.
	* prefs/IntPreference.java: Rearranged constants to fix ecj warning.

	* prefs/BooleanPreference.java: Moved constant declarations so that
	they're before the first use; solves ecj warning.
	* prefs/ColorPreference.java: Ditto.
	* prefs/ColorPreferenceEditor (setCurrentPref): Now takes argument
	of type ColorPreference rather than SyntaxPreference, also sets
	state of weight and style buttons based on input.
	(toggleEvent): Added cast to SyntaxPreference, see comment for more
	details.
	* prefs/SyntaxPrefList.java: Renamed to PreferenceList.java.
	* prefs/PreferenceList.java (PreferenceList): Now takes an array of
	Strings to use as names.
	* prefs/PreferenceViewer.java: Added.
	* prefs/PreferenceWindow.java (show): No longer re-calls setupButtons,
	as this was causing an Exception if the prefs window was launched
	more than once.
	* prefs/SyntaxPreference.java (setModel): Now updates tag weight and
	style.
	* prefs/SyntaxPreferenceViewer.java: Now implements PreferenceViewer.
	(showSyntaxPrefEditor): Changed to showPreferenceEditor.
	

2006-01-18  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): No longer takes a Preferences.
	(refresh): Now uses PreferenceManager.
	(toggleChild): Ditto.
	* PreferenceConstants.java: Removed.
	* PreferenceWindow.java: Moved to prefs/PreferenceManager.
	* prefs: Added.
	* SourceBuffer.java: Reformatted.
	(updatePreferences): Removed, tags are now updated automatically.
	(init): Now creates preferences for the various tags.
	* SourceViewWidget.java: Reformatted.
	(SourceViewWidget): No longer takes Preference object.
	(refresh): Now uses PreferencesManager to pull preference data.
	(drawMargin): Ditto.
	(initialize): Initializes some higher-level preferences.
	* SourceWindow.java: Reformatted.
	(SourceWindow): No longer creates preferences object.
	* prefs/BooleanPreference.java: Added.
	* prefs/ColorPreference.java: Ditto.
	* prefs/ColorPreferenceEditor.java: Ditto.
	* prefs/FryskPreference.java: Ditto.
	* prefs/IntPreference.java: Ditto.
	* prefs/PreferenceManager.java: Ditto.
	* prefs/SyntaxPrefsList.java: Ditto.
	* prefs/SyntaxPreference.java: Ditto.
	* prefs/SyntaxPreferenceViewer.java: Ditto.

2006-01-11  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWindow): Now prints out
	Exception stack trace upon glade error.

2005-12-21  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (refresh): Now correctly sets the color of the
	search results tag to the background, rather than foreground.
	* SourceViewWidget.java (scrollToLine): Fixed off-by-one error.
	* SourceWindow.java (handlButtonClicked): Now correctly returns
	for empty search targets as well as malformed input in the goto
	line box.
	(entryEvent): No longer searches on empty (or whitespace) text.

	* InlineViewer.java (refresh): Now performs adjustments for changes in
	the number of inline scopes that can be visible at any one time (fixes
	bug #2075).
	(moveDown): Renamed to moveDownPostOrder.
	(moveDownPreOrder): Added.
	(expandLowestChild): Uncommented.

	* InlineViewer.java (refresh): Added.
	(expandLowestChild): Added, commented out for now since it isn't used.
	* SourceViewWidget.java: Added child member variable of type 
	InlineViewer.
	(refresh): Now calls refresh on the inlined scopes.
	(setSubscopeAtCurrentLine): Now saves the passed InlineViewer as the
	child of this Widget so that it can be updated when preferences change.

2005-12-20  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (createEllipsis): Now adds a tooltip to the
	ellipsis that explains the concept of hidden inlined code more clearly.
	* PreferenceWindow.java (setupButtons): Now sets the value of the spinner
	for inline code levels to the value in the preferences model.
	(buttonEvent): Now saves the status of the spinbutton for number of inline
	levels into the preferences model.

	* Various javadoc additions to all files.

	* InlineBuffer.java (loadLines): Now sets the ellipsis anchor to null
	since the contents are being overwritten.
	(getLineCount): Is now conditional on the presence of the ellipsis,
	since that will add an extra line to the code being displayed.
	(getLastLine): Ditto.
	* InlineViewer.java (createEllipsis): Added.
	(moveUp): Now uses createEllipsis.
	(moveDown): Ditto.
	* SourceBuffer.java (loadFile): Now sets anchor to be null since 
	buffer contents are about to be overwritten.

	* InlineViewer.java (moveUp): Refactored to use createEllipsisAnchor in 
	InlineBuffer.java.
	(moveDown): Ditto.
	* InlineBuffer.java (createEllipsisAnchor): Added.
	* SourceViewWidget.java (setSubscopeAtCurrentLine): Refactored to use
	createAnchorAtCurrentLine method in SourceBuffer.
	(clearSubscopeAtCurrentLine): Refactored to use	clearAnchorAtCurrentLine
	in SourceBuffer.
	* SourceBuffer.java (createAnchorAtCurrentLine): Added.
	(clearAnchorAtCurrentLine): Added.

2005-12-14  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Removed initialization of IconManager.
	* SourceWindowFactory: Removed references to image paths since this is 
	now handled by IconManager.

	* SourceWindow.java (createSearchBar): Now pulls icons from stock,
	rather than from file.

2005-12-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java: Started then commented out new way of keeping track
	of the child anchors.
	* SourceWindow.java: Moved constants to IconManager.
 	(SourceWindow): Now calls IconManager to initialize the icons.
	(createActions): No longer creates icons.
	(createToolbar): Temporarily ditto, until IconManager can load these
	icons too.

2005-12-12  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceConstants.java: (Inline): Added values for the number of
	inline code levels to display and the default value for it.
	* InlineViewer.java (toggleChild): Now pulls the level of depth from the
	preferences model.
	(drawLineNumber): Needs to return (x) - 1 if we're showing ellipsis, not
	(x) + 1.

2005-12-09  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (moveUp): Implemented details.
	* InlineViewer.java (moveUp): Ditto.

	* InlineViewer.java (moveDown): Now reparents the inlined code (if it
	exists) so that gtk doesn't clear it away when we change the text.
	* SourceViewWidget.java (toggleChild): Changed to use new getSource
	method in DOMFunction.
	(setSubscopeAtCurrentLine): Checks to see if the widget has a parent,
	and if so removes it.
	* InlineBuffer.java (moveDown): Added code to create new StackLevel.

2005-12-08  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): Initializes base depth to 1.
	(setSubscopeAtCurrentLine): Now correctly has parameter type as
	SourceViewWidget, otherwise does not override superclass.
	(doSetSubscope): Added.
	(clearSubscopeAtCurrentLine): Added.
	(toggleChild): Arbitrary limit set to three levels for now, added
	debugging output.
	(removeLowestChild): Added debugging output.
	* SourceViewWidget.java: Added myContext member variable.
	(drawMargin): Now uses member myContext variable, to avoid repeated
	garbage collection of GC variables.

	* dom/: Moved to frysk-core, updated imports in .java files to
	match.

2005-11-24  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): Removed boolean hasEllipsis parameter.
	(setSubscopeAtCurrentLine): Added.
	(toggleChild): Added.
	(removeLowestChild): Added.
	(moveDown): Added.
	(moveUp): Added.
	* SourceWindowFactory.java (createSourceWindow): Added another level to
	the stack, all but the top and bottom are now inlined to test the inline
	code functionality.

2005-11-23  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (getInlineInstance): Added.
	(getCurrentLine): Removed.
	(setCurrentLine): Added.
	* SourceBuffer.java (setCurrentLine): Changed to protected,
	left gravity of end of current line mark set to false.
	* SourceViewWidget.java: Changed the TextChildAnchor to protected.	

	* InlineBuffer.java (hasInlineCode): Now uses getCurrentLine.
	(getCurrentLine): Added.
	
	* InlineBuffer.java (hasInlineCode): Now implemented.
	* PreferenceConstants.java: Added constants for variables that are out of
	scope, renamed unavailable variabels to optimized variables.
	* SourceBuffer.java: Changed unavailable variable tag to optimized
	variable tag, added tag for out of scope variables, removed inline
	code tag.
	(init): Removed initialization of inline scope tag, added creation
	of out of scope tag.
	(updatePreferences): Ditto, except for updating rather than
	initializing.
	(addVariable): Hardcoded some out of scope variable information.
	(createTags): Now looks for out of scope variable tags in DOM.
	* SourceViewWidget.java (toggleChild): Now uses constant for image
	node name.
	* SourceWindowFactory.java (createSourceWindow): Now adds info
	for inline code 2 levels deep.
	
2005-11-22  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceConstants.java: Added constants for unavailable variables.
	* SourceBuffer.java (addVaraible): Hacked some things in to simulate
	unavailable variables.
	(createTags): Creates unavailable variable tags.
	(init): Creates unavailable variable tag.

	* SourceViewWidget.java (mouseEvent): Now ignores clicks next to
	an area of inlined code, rather than causing the inlined code to
	be collapsed.

2005-11-21  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (InlineBuffer): Now takes a DOMSource instead of a
	StackLevel.
	(getVariable): Added.
	* InlineViewer.java (InlineViewer): Now takes a DOMSource instead of a 
	StackLevel.
	* SourceViewWidget.java (toggleChild): Refactored to reflect above
	change to InlineViewer constructor.
	* SourceWindowFactory.java (createSourceWindow): Fixed current line
	for example code.

	* InlineViewer.java (mouseEvent): Added, currently does not allow
	breakpoint or trace related functionality due to ambiguities
	regarding inlined code.
	* SourceViewWidget.java (mouseEvent): Now checks to make sure there is
	inline code before creating an InlineViewer.
	* SourceWindowFactory.java (createSourceWindow): Fixed 
	NullPointerException as a result of not incrementing a variable.

2005-11-17  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWindow): Moved inline code to
	first level of scope, added DOMFunctions for all the functions.

	* InlineBuffer.java (isLineExecutable): Now only returns false, since
	we are disabling the case of settting a breakpoint in disbled code
	since we're not sur what to do with it.
	(isLineBroken): Ditto.
	(toggleBreakpoint): Ditto.

	* InlineBuffer.java (isLineExecutable): Added.
	(isLineBroken): Added.
	(toggleBreakpoint): Added.
	* InlineViewer.java (drawMargin): Fixed off-by-one for line numbers.
	* SourceBuffer.java (toggleBreakpoint): Now checks to make sure line
	is executable.

	* InlineBuffer.java (createTags): Added.
	* SourceBuffer.java: Made most member variable protected.

	* SourceBuffer.java (isLineExecutable): Removed debugging output.
	(setCurrentLine): Ditto.
	(loadFile): Ditto.

	* SourceViewWidget.java (drawMargin): Now calculates the height of the
	current line taking whether or not there's inline code into
	consideration, not doing this was leading to errors in the margin after
	a block of expanded inline code.

	* InlineBuffer.java (getLastLine): Added.
	(getFirstLine): Added.
	* InlineViewer.java (drawLineNumber): Added.
	* SourceBuffer.java (getLastLine): Added.
	* SourceViewWidget.java (refresh): Now pulls the width of the drawing
	area from getLastLine rather than getLineCount, since in the case of
	inline code these two will not be the same.
	(drawMargin): Extracted out protected drawLineNumber method.

2005-11-16  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (InlineBuffer): Removed debugging output.
	(getLineCount): Added.
	* InlineViewer.java (toggleChild): Removed.
	(load): Removed.
	(moveDown): Remvoed.
	(getScope): Removed.
	(setScope): Remvoed.
	(setSubScopeAtCurrentLine): Removed.
	(clearSubScopeAtCurrentLine): Removed.
	(drawMargin): Removed.
	* SourceBuffer.java (getLineCount): Removed boolean parameter since it
	was unused.
	* SourceViewWidget.java (mouseEvent): Now checks to see if there is
	inline code being displayed, and if there is compensates for it.
	(toggleChild): Moved the setting of expanded to before the 
	InlineInstance is added.
	(drawMargin): Fixed bug with the line numbers being off, combined two
	if blocks dealing with the current line.
	* InlineHandler.java: Removed.	

	* InlineBuffer.java: Added.
	* InlineViewer.java (InlineViewer): Now takes StackLevel and
	DOMInlineInstance.
	(toggleChild): Commented out for now.
	(moveDown): Ditto.
	(setSubScopeAtCurrentLine): Ditto.
	(drawMargin): Corrected bug where r,g, and b for a color were all being
	populated by the r component.
	* SourceBuffer.java (SourceBuffer): Created constructor that just 
	initializes, but doesn't load data.
	(getInlineInstance): Added.
	(init): Removed section that loads data.
	(loadFile): Changed to protected, extracted out loadLines function.
	(loadLines): Refactored out of loadFile.
	(createTags): Changed to protected.
	* SourceViewWidget.java (SourceViewWidget): Added constructor that takes
	an already existing SourceBuffer.
	(toggleChild): Refactored to use new InlineViewer constructor.
	(drawMargin): Executable marks not drawn on lines where the is expanded
	inline code.

2005-11-15  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget.java (toggleChild): Removed references to InlineHandler.
	* SourceWindowFactory.java (createSourceWindow): Adds inline isntance
	reference to appropriate lines in dummy DOM, changed the way that
	functions are added to the image.
	(printDOM): Added.

	* SourceWindow.java (setMyTask): Now sets the title to contain the
	proc command, the task #, and the status.

	* PreferenceConstants.java: Removed extraneous comment.
	* PreferenceWindow.java: Added comments to uncommented methods.
	* SourceBuffer.java: Commented uncommented methods.
	(init): Made private.
	(createComment): Added TODO, since nothing calls this right now.
	* SourceCodeLine.java: Removed.
	* SourceWindow.java: Commented Uncommented methods and reoganized layout.
	(setMyTask): Now puts name of task in window title, added TODO in regards
	to safeness of method.
	* SourceWindowFactory.java: Commented methods.
	(SourceWinListener): Made class private.

2005-11-14  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): Added SourceWindow parameter to
	reflect refactorings in SourceViewWidget.
	* SourceBuffer.java (setScope): Clears all previous textmarks from
	the buffer before loading new info.
	* SourceViewWidget.java (SourceViewWidget): Added SourceWindow parameter.
	(mouseEvent): Added menu option for adding a trace on a variable.
	(drawMargin): Now uses Widget.getLayout instead of creating one from scratch
	* SourceWindow.java (SourceWindow): Sets the text for the variable trace
	window as well as the title for the current source.
	(populateStackBrowser): Removed title from column.
	(addVariableTrace): Added, but currently does nothing.
	(load): Updates the text of the label over the source when a new file is
	loaded.
	* SourceWindowFactory.java (createSourceWindow): Removed debugging output.
	* Variable.java (getNext): Removed.
	(setNext): Removed.
	(getPrev): Removed.
	(setPrev): Removed.
	* VariableList.java: Removed.

2005-11-09  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceWindow.java (PreferenceWindow): Fixed bug in finding glade file.
	* SourceBuffer.java (createTags): Now looks for FUNCTION_BODY tag, puts
	mark in buffer so we can jump to it.
	(setScope): Clears function vector when new scope is loaded.
	(addFunction): Adds FUNCTION_BODY tags into DOM.
	* SourceWindow.java (SourceWindow): Now takes glade path in constructor
	in order to pass it to the Preference Window.
	(populateFunctionBox): Extracted out of constructor.
	* SourceWindowFactory.java (createSourceWindow): Now passes glade path
	to the SourceWindow constructor.

	* SourceWindowFactory.java (createSourceWindow): Now marks proper lines
	as executable.

	* SourceWindowFactory.java (createSourceWindow): Now reads in all
	.cpp files, rather than relying on data in DOMTestGUIBuilder.

	* SourceWindowFactory.java: dummyPath now defaults to the source
	directory, since the user may not be running from a 'make install'

	* SourceWindowFactory.java (createSourceWindow): Now correctly removes
	window/task pair from hashmap when the window is closed.

2005-11-08  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java: Now inherits from Window.
	(getMyTask): Added.
	(setMyTask): Ditto.
	(SourceWindow): Now takes glade object instead of array of paths.
	(populateStackBrowser): Checks to make sure line isn't null before
	checking for inline code.
	* SourceWindowFactory.java (createSourceWindow): No longer recreates
	window if it already exists, as well as creating the LibGlade object
	needed by the SourceWindow.

	* SourceWindow.java: Now correctly adds "/" inbetween glade dir and
	file name.

	* SourceViewWidget.java: Removed excess import.
	
	* testfiles/test3.cpp: Added a #define.

2005-11-07  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (hasInlineCode): Added debugging output.
	* SourceViewWidget.java (refresh): Made margin wider to include inline
	instance markers
	(drawMargin): Fixed bug where margin was only appearing in shades
	of grey, also made changes to reflect above change to refresh.
	* SourceWindow.java (SourceWindow): Now sets current line, also added
	hack to get around eclipse ecj 3.1 compiler warnings.
	
	* StackLevel.java: Added comments to methods/members
	(StackLevel): Introduced new constructor that allows partial/multi
	-line "current line"s.
	(getColStart): Added.
	(setColStart): Ditto.
	(getColEnd): Ditto.
	(setColEnd): Ditto.
	(getEndLine): Ditto.
	(setEndLine): Ditto.
	(getLine): Refactored to getStartingLine.
	* SourceWindow.java: Refactored to reflect change of getLine to 
	getStartingLine in StackLevel.
	
	* SourceBuffer.java (hasInlineCode): Removed debug output.
	(init): Now automatically calls getCurrentLine.
	(setScope): Ditto.
	(setCurrentLine): Made private, now takes starting/ending
	lines/columns.
	* SourceViewWidget (setCurrentLine): Removed.
	* SourceWindow (selectionChangedEvent): Removed call to setCurrentLine
	in SourceBuffer.
	* StackLevel.java (StackLevel): Now inializes column variables.

	* testfiles/common.h: Added.
	* testfiles: Changed files so that they could all be compiled into
	an executable.

2005-11-03  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Now takes array of image paths.
	(createActions): Now looks for images in multiple directories.
	(createSearchBar): Ditto.
	* SourceWindowFactory.java: Added.
	
	* SourceWindow.java (SourceWindow): Now prints out more informative error
	message if glade file not found.

	* SourceWindowFactory.java: Now sets default value for glade and image
	paths to look in installed directory, then source directory.
	
	* SourceWindowFactory.java: Fixed default values of glade and image paths,
	typo in earlier version.

	* SourceWindow.java (createToolBar): Workaround to display tooltips
	implemented.
	
	* SourceViewWidget.java (mouseEvent): Added menu items for adding traces
	to variable and customizing actions to be taken on a breakpoint. These
	currently do nothing but serve as a reminder to implement them later.

2005-11-02  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java: Now stores StackLevel, not just encapsulated
	DOMSource.
	(setScope): Added.
	(loadFile): Now checks to see if the source has already been parsed,
	and if so does not parse it again.
	* SourceViewWidget.java (SourceViewWidget): Now takes StackLevel, excess
	constructors removed.
	(load): Instead of a new SourceBuffer being created setScope is now called
	on the existing one.
	* SourceWindow.java (SourceWindow): Refactored to reflect change to 
	SourceViewWidget constructor.
	* StackLevel.java: Added 'parsed' member variable.
	(isParsed): Added.
	(setParsed): Added.

2005-11-01  Adam Jocksch  <ajocksch@redhat.com>
	
	* InlineViewer.java (drawMargin): Changed to use prefixes for colors
	stored in preference model.
	* PreferenceConstants.java: Instead of storing three keys for r,g, and b
	values now only one prefix is stored, onto which r g or b is appended;
	also the default value is now stored as a org.gnu.gdk.Color.
	* PreferenceWindow.java (buttonEvent): Refactored out saveColorButton,
	saveWeightCheck, and saveStyleCheck methods.
	(setupButtons): Refactored out setupColorButton, setupBoldCheckBox, and
	setupItalicsCheckBox methods.
	* SourceBuffer.java: Renamed itTag to variableTag.
	(updatePreferences): Refactored out updateTagColor and updateTagStyle
	methods.
	* SourceViewWidget.java (refresh): Refactored to use prefixes in 
	PreferenceConstants.java.
	(drawMargin): Ditto.

2005-10-31  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget (mouseEvent): Changed variable display to be triggered
	by a menu, added breakpoint status to right click in margin. (bug 
	#1685, bug #1686).

	* SourceBuffer.java (createTags): Refactored to use new DOMTagTypes
	class.
	(addFunction): Ditto.
	(addVariable): Ditto.
	(addKeyword): Ditto.
	(addClass): Ditto.

2005-10-28  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java: Removed excess imports.
	(drawMargin): Removed unused variables for inline background.
	* SourceBuffer.java (addFunction): Re-implemented to use DOM.
	(addVariable): Ditto.
	(addKeyword): Ditto.
	(addClass): Ditto.
	(load): Now adds newline to buffer for lines with no text.
	(createTags): Now accepts tags with type 'function'.
	* cparser/CDTParser.java: Refactored calls to TextBuffer methods to use
	revised syntax.
	* cparser/CTagsParser.java: Ditto.
	* cparser/SimpleParser.java: Ditto.
	* testfiles/test6.cpp: Updated to sync with data in DOMTestGUIBuilder.

2005-10-27  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (isLineExecutable): Fixed off by one error.
	* SourceViewWidget.java (drawMargin): Moved compensation for off by one
	error into isLineExecutable, rather than dealing with it here.
	* SourceWindow.java: Added stop action, removed 'running' flag, changed
	run action to Action from ToggleAction.
	(createActions): Initialize stop action.
	(createMenus): Create stop action menu item.
	(createToolBar): Create stop action toolitem.
	(doRun): Now only toggles mode into 'running'.
	(doStop): Added, toggles status out of 'running'.
	

2005-10-27  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (isLineExecutable): Implimented to use the DOM.
	(isLineBroken): Ditto.
	(toggleBreakpoint): Ditto.
	(getVariable): Fixed off by one error when getting line, now returns a 
	Variable object containing information.
	* SourceViewWidget.java (drawMargin): Fixed off by one error for executable
	marks.
	* SourceWindow.java (populateStackBrowser): Changed title of side browser
	to "Stack".
	(SourceWindow): Removed reference to function combobox.

2005-10-26  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (load): Removed extraneous newlines.
	(createTags): Fixed numerous errors with casting of DOM elements, as well
	as creation of class tags.
	* SourceViewWidget.java (load): Assigns newly created source buffer to
	member buf, stops GTK error.
	* SourceWindow.java: Added dom and stack member variables.
	(SourceViewWindow): Rearranged calls so that view is created before
	functions are parsed.
	(populateStackBrowser): Moved creation of source window to after we've
	found the bottom of the stack.
	* testfiles/test.cpp: Added '#include "common.h".
	* testfiles/test2.cpp: Ditto.
	* testfiles/test3.cpp: Ditto.
	* testfiles/test4.cpp: Ditto.
	* testfiles/test5.cpp: Ditto.
	* testfiles/test6.cpp: Ditto, changed name of function to bleh from main.
	

2005-10-26  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Commented out pending reorganization
	under the DOM.
	(moveUp): Ditto.
	(init): Ditto.
	* InlineViewer.java (load): Commented out pending reorganization under
	the DOM.
	(moveDown): Ditto.
	(setSubscopeAtCurrentLine): Ditto.
	* SourceBuffer.java: Removed unncessesary member variables.
	(SourceBuffer): Now takes a DOMSource.
	(SourceBuffer): Removed constructors that took Handles and TextTagTables.
	(init): No longer initializes Vector for lines or sets priority on the
	function tag, as well as adding call to load.
	(isLineExecutable): Reimplimented using the DOM.
	(isLineBroken): Remvoed code, needs to be reimplimented using the DOM.
	(toggleBreakpoint): Ditto.
	(getVariable): Partially reimplimented using DOM, still returns null.
	(addFunction): Commented out pending rewrite using DOM.
	(addVariable): Ditto.
	(addComment): Ditto.
	(addClass): Ditto.
	(addLiteral): Renamed to addKeyword, and Ditto.
	(getLineCount): Reimplimented to use the DOM.
	(hasInlineCode): Renamed from hasInlineLines, and Ditto.
	(load): Changed to private, reimplimented to use DOM.
	(createTags): Added.
	(toggleExpanded): Removed.
	(getNumInlinedLines): Removed.
	(SourceLineReader): Removed.
	* SourceViewWidget.java (SourceViewWidget): Now takes DOMSource.
	(load): Refactored to use DOM.
	(drawMargin): Remvoed commented out code, refactored parts to use DOM.
	* SourceWindow.java (SourceWindow): Partially reimplimented to use DOM.
	(populateStackBrowser): Ditto.
	(selectionChanged): Ditto.
	* StaticParser.java (parse): Reordered arguments for no good reason.
	* cparser/CDTParser.java: Changed references of addLiteral to addKeyword.
	(mainGui): Ditto.
	* PCLocation.java: Refactored to StackLevel.java

2005-10-25  Rick Moseley  <rmoseley@redhat.com>

	* testfiles/test6.cpp: new for testing DOM/GUI

2005-10-24  Adam Jocksch  <ajocksch@redhat.com>

	* ColorConverter.java: Added javadoc comments.
	* InlineHandler.java: Ditto.
	(moveDown): Now returns void.
	(moveUp): Ditto.
	* InlineViewer.java: Refactored to reflect above changes to moveUp and
	moveDown.
	* SourceBuffer.java: Changed back to using CDTParser, hopefully will have
	bug resolved soon.
	* SourceViewWidget.java:
	(setSubscopeAtCurrentLine): Now sets expanded to true.
	(clearSubscopeAtCurrentLine): Ditto.
	(toggleChild): Refactored to account for changes to InlineHandler.
	* SourceWindow.java: Added tips member variable.
	(SourceWindow): Initialize Tooltips.
	(createSearchBar): Changes tooltips to use member instance (jg bug
	#319415)
	* cparser/CDTParser.java (parse): Removed debug output

2005-10-20  Adam Jocksch  <ajocksch@redhat.com>

	* PCLocation.java (getInlineScope): Added.
	(getParentScope): Ditto.
	(hasInlineScope): Ditto.
	* InlineHandler.java (moveDown): Removed debugging output, refactored to
	use above refactorings to PCLocation, fixed bug with next scope being
	loaded instead of inline scope.
	(showScopes): Added.
	(moveUp): Refactored code out into showScopes, 
	* SourceViewWidget.java: Created hasInlineCode member.
	(load): Now sets hasInlineCode.
	(showMargins): Inline code mark is now only drawn if hasInlineCode is set.
	* InlineViewer.java (load): Now sets hasInlineCode.
	(moveDown): Now properly loads next inline level, not next level on stack.
	(showMargin): Inline code mark not drawn if no code present (identical to
	fix in SourceViewWidget.java).

2005-10-19  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (load): Changed formatting.
	* SourceBuffer.java (loadFile): Removed old redundant lines,
	switched back to SimpleParser due to bug #1503.
	* SourceWindow.java (createToolbar): Added toolbar.enable().
	(createSearchBar): Added call to enable tooltips.
	(doStackUp): Implemented core logic of functions, now works.
	(doStackDown): Ditto.
	(doStackBottom): Ditto.
	(selectionChangedEvent): Added code to refresh SourceViewWidget.
	* cparser/CDTParser.java: Added debug output.

2005-10-17  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceWindow.java (setupButtons): Show toolbar now defaults to false.
	
	* SourceWindow (SourceWindow): Find box is no longer shown on start,
	fixing bug #1480, toolbar is only shown according to user preference.
	(refresh): Added change to fix said bug.
	(setupStackBrowser): No longer shows find box if it is hidden.

2005-10-14  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java: Added Copyright/License information.
	
	* InlineViewer.java: Ditto.
	
	* PCLocation.java: Ditto.
	
	* PreferenceConstants.java: Ditto.
	
	* SourceBuffer.java: Ditto.
	
	* SourceWindow.java (SourceWindow): Moved code to create PCLocation out
	of constructor.
	(populateStackBrowser): Made public, now recreates the SourceViewWidget
	when stacks are refreshed.
	
	* SourceWinRunner (main): Now creates PCLocation data.

2005-10-13  Adam Jocksch  <ajocksch@redhat.com>

	* PCLocation.java: Added inlineScope and parentScope variables.
	(setNextScope): Removed.
	(setPrevScope): Removed.
	(link): Renamed to addNextScope.
	(addInlineScope): Added.
	
	* InlineHandler.java: All methods now refernece PCLocation.inlineScope over
	PCLocation.nextScope.
	(moveDown): No longer assumes existance of inlined scopes.
	
	* SourceViewWidget.java (load): No longer stays expanded when new file is 
	loaded.
	
	* SourceWindow.java: Now implements TreeSelectionListener.
	Member variable dataColumns added.
	(SourceWindow): Creation of PCLocation objects now uses refactored methods.
	(SourceWindow): Call to populateStackBrowser(PCLocation) added.
	(populateStackBrowser): Added.
	(addEvents): Adds TreeSelectionListener to stack browser.
	(selectionChangedEvent): Added.
	

2005-10-12  Adam Jocksch  <ajocksch@redhat.com>

	* Messages.java: Moved to ../common.

	* messages.properties: Ditto.

	* Updated all necessary files to reflect above refactoring.

2005-10-12  Adam Jocksch  <ajocksch@redhat.com>

	* Messages.java: Now uses PropertyResourceBundle and gets path to
	messages.properties from Config.PKGDATADIR.

2005-10-12  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Now takes an array of possible
	paths to glade files as well as a path for image files.

2005-10-11  Adam Jocksch  <ajocksch@redhat.com>

	* glade: Moved all glade files (frysk_source.glade{p},
	frysk_source_prefs.glade{p}) to ../glade.

2005-10-11  Adam Jocksch  <ajocksch@redhat.com>

	* testfiles: Added.

	* testfiels/test.cpp: Added.

	* testfiels/test2.cpp: Added.

	* testfiles/test3.cpp: Added.

	* testfiles/test4.cpp: Added.

	* testfiles/test5.cpp: Added.

2005-10-11  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (createActions): Accelerators are now added to 
	each action.
	(createMenus): Removed commented out accelerator code.
	(createToolbar): Removed unnecessary comments.

2005-10-07  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java: Removed member CurrentBottom, added firstVisible
	and lastVisible.
	(init): Changed to match above refactoring.
	(moveDown): Number of scopes visible now based on prefernce, changed
	to reflect this.
	(moveUp): Ditto.

	* InlineViewer.java (load): Added check to automatically hide ellipses.
	(moveDown): Added.
	(setSubscopeAtCurrentLine): Sets so the child does not show ellipses.

2005-10-05  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (load): Added note of how many scopes hidden to 
	ellipsis.
	(setSubscopeAtCurrentLine): Now sets expanded to be true
	(drawMargin): Fixed off by one error when ellipsis were shown.

	* PCLocation.java (getDepth): Added.

2005-10-04  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceConstants.java: Added default values for r,g,b triplets.
	
	* SourceBuffer.java (updatePreferences): Uses default values from 
	PreferenceConstants.java.
	
	* SourceViewWidget.java (refresh): Ditto.
	
	* PreferenceWindow.java (setupButtons): Ditto.

2005-10-04  Adam Jocksch  <ajocksch@redhat.com>

	* GladeConstants.java: Deleted.
	
	* SourceWindow.java: Ditto.
	
	* PreferenceWindow.java: Constants refactored back in.
	Renamed constants referring to 'Literals' to refer to 'keywords'.
	
	* glade/frysk_source_prefs.glade: Changed name of literal* widgets to
	keyword*.

2005-10-03  Adam Jocksch  <ajocksch@redhat.com>

	* GladeConstants.java: Added.
	
	* SourceWindow.java: Refactored constants to GladeConstants.java.
	
	* SourceViewWidget.java: Ditto.
	
	* PreferenceWindow.java: Ditto.
	
	* PreferenceConstants.java: Added.
	
	* SourceViewWidget.javaL Refactored constants to PreferenceConstants.java.

2005-10-03  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (launchPreferenceWindow): Now calls refresh in 
	SourceWindow.
	(refresh): Added.
	
	* PreferenceWindow.java (setupButtons): Status of "Show Toolbar" now
	updated.
	(buttonEvent): Status of "Show Toolbar" saved into prefs model.

2005-09-30  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer (drawMargin): Added code to draw margin for scopes with
	ellipsis visible.

2005-09-30  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget.java (drawMargin): Changed to protected.
	(drawMargin): Fixed bug where gap for inline code in line numbers wasn't
	being obeyed (bug #1398)
	(setSubscopeAtCurrentLine): Added checks for pre-existing child anchor.
	(clearSubscopeAtCurrentLine): Nullifies old child anchor.
	(mouseEvent): Removed unecesary refresh.
	
	* InlineHandler.java (moveDown): Fixed bug where upper scope wouldn't
	change.
	(moveDown): Removed unnecesary refresh commands.
	(moveUp): Ditto.
	
	* InlineViewer.java (drawMargin): Added.
	(toggleChild): Calls now set expanded.

2005-09-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Refactored ellipsis code into 
	InlineViewer::load.
	(moveUp): Ditto.
	
	* InlineViewer (load): Added ellipsis code from InlineHandler.
	(InlineViewer): Added constructor that takes boolean flag to show
	ellipsis.

2005-09-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Extracted sections into 
	SourceViewWidget::setSubscopeAtCurrentLine.
	(moveUp): Ditto, also moved common fields out of if statements.
	(moveUp(SourceViewWidget)): Refactored parts into 
	SourceViewWidget::clearSubscopeAtCurrentLine
	
	* SourceViewWidget.java (setSubscopeAtCurrentLocation): Added.
	(clearSubscopeAtCurrentLocation): Ditto.
	
	* InlineViewer (setSubscopeAtCurrentLoction): Added.
	

2005-09-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Moved the ellipsis into the InlineViewer.
	(moveUp): Ditto.

2005-09-28  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveUp): Fixed errors keeping track of current scope.
	(moveDown): Ditto.
	(moveDown): Added ellipsis w/ tooltip when levels of code are hidden.
	
	* SourceViewWidget.java (toggleChild): Removed debugging output.
	(drawMargin): First attempt at putting a background behind the 'i' in margin.
	
	* SourceBuffer.java (setCurrentLine): Removed debugging output.
	
	* cparser/CDTParser.java (ParserCallBack): Removed debugging output.

2005-09-26  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (load): Added.

	* InlineHandler.java: Added.

	* SourceViewWidget.java (load): Removed debug output.
	Now initializes InlineHandler to deal with inlined code.
	(toggleChild): Now uses InlineHandler::toggleTopmost;
	(drawMargin): refactored to removed excess variables.
	(drawMargin): Changed sign for inlined code to 'i'.

	* SourceWindow.java (SourceWindow): Changed example text to load.

	* PCLocation.java (getInlineData): Refactored to getNextScope.

2005-09-26  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java: Commented out (for now) unused import to fix warning.

	* PCLocation.java: Added depth identifier.
	Changed next/prevScope to protected.

2005-09-26  Adam Jocksch  <ajocksch@redhat.com>

	* PCLocation.java: Added.

	* SourceBuffer.java: Changed start/endCurrentLine to TextMarks.
	(setCurrentLine): Changed to reflect above change to TextMark.
	(getCurrentLine): Ditto.

	* SourceViewWidget.java: Added member 'inlined' for inlined code.
	(SourceViewWidget):  Changed handling of mouse events in margin to 
	expand inlined code.
	(load): Added.
	(toggleChild): Added.
	(drawMargin): Commented out unused (for now) variables.
	(getHeight): Added.

	* SourceWindow.java (SourceWindow): Use PCLocation to load data into
	SourceViewWidget.

2005-09-22  Andrew Cagney  <cagney@redhat.com>

	* SourceWindow.java: Import frysk.Config, instead of
	frysk.bin.Config.

2005-09-15  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (createMenus): Added casts to fix compilation error.
	(createToolbar): Ditto.

2005-09-14  Adam Jocksch  <ajocksch@redhat.com>

	* StaticParser.java (parse): Removed public identifier to get rid of compiler warning.

	* SourceViewWidget.java: Added constants for class specifier properties.
	(drawMargin): Added colored margins for expanded inline code.
	
	* SourceBuffer.java (updatePreferences): Changed to reference new constants in SourceViewWidget.java.

2005-09-14  Adam Jocksch  <ajocksch@redhat.com>

	* SourceCodeLine.java: Added ability to have inlined code.
	(addInlinedLine): Added.
	(getInlinedLines): Ditto.
	(hasInlinedLines): Ditto.
	(isExpanded): Ditto.
	(getNumInlinedLines): Ditto.

	* SourceBuffer.java: Added Inline Code, class identifier, and Member Variable tags.
	(loadFile): Added small test of inlining code to hardcoded line.
	(loadFile): Made switch to CDTParser from SimpleParser.
	(updatePreferences): Loads values for class and inline tags.
	(addFunction): Added overloaded version that takes offset from start of file.
	(addVariable): Changed to treat variable offset as from start of file
	(addLiteral): Added overloaded version that takes offset from start of file.
	(addLiteral): Fixed typo in name of previous version.
	(addClass): Added.
	(hasIndentedLines): Added.
	(isExpanded): Added.
	(toggleExpanded): Added.
	(getNumInlinedLines): Added.
	(getLineCount): Added overloaded version that can optionally include inlined code.

	* SourceViewWidget.java: Added constants for inline code color.
	(SourceViewWidget): For MouseListener type of button now filtered at lower level.
	(SourceViewWidget): Left clicks now detected in margin, used to trigger inline expansion.
	(drawMargin): Pushed common variables to higher scope in function.
	(drawMargin): Added ability to skip over expanded inlined code.
	(drawMargin): Draws mark, color in margin if line contains inlined code.

	* SourceWindow.java (SourceWindow): Now try a second location for glade file.

	* Variable.java: Changed isGlobal to isMember.
	(isGlobal): Refactored to isMember.

	* cparser/CDTParser.java: Added.

2005-09-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Fixed typo in loading glade file.  

2005-09-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Changed glade path to refer to frysk.bin.Config.GLADEPATH.

2005-09-09  Adam Jocksch  <ajocksch@redhat.com>

	* cparser/CTagsParser.java: Added comments.
	(escapeChars): Removed.
	
	* SourceViewWidget.java: Created new constants for comment, global tags
	
	* SourceBuffer.java (getNextLine): Removed extraneous variables.
	Refactored strings into constants.
	
	* SourceWindow.java (SourceWindow): Window now hidden until loading complete.
	Excess constants pruned.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/gui/srcwin/ to frysk/gui/srcwin/.

2005-09-08  Andrew Cagney  <cagney@redhat.com>

	* cparser/CDTParser.java: Delete.
	* cparser/SimpleParser.java: Ditto.
	* SourceBuffer.java: Revert switch to CDTParser.

2005-09-07  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java: moved from com.redhat.fedora.frysk.gui
	* cparser/SimpleParser.java (parse): added support for bitshift and quote characters
	* cparser/CDTParser.java: Added
	* SourceBuffer.java (loadFile): changed to use CDTParser
	(addFunction): Added overloaded method to take char offset from start of file
	(addVaraible): Changed to use only character offset, not line number

2005-09-07  Adam Jocksch  <ajocksch@redhat.com>

	* cparser/SimpleParser.java: Added to repository

	* SourceBuffer.java (loadFile): Changed to use SimpleParser instead of CTagsParser

	* SourceWindow.java (createActions): Changed icon for run action to run.png

2005-09-06 Adam Jocksch <ajocksch@redhat.com>

	* cparser: removed all but CTagsParser.java

	* VariableLocation.java: changed to Variable.java
	now inherits from CodeItem

	* CodeItem.java: Added

	* StaticParser.java: Added

2005-09-01 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceWindow.java: added createActions, createMenus
	(createToolbar): toolbar now created from Action objects
	(attachEvents): removed calls to attach to menu/toolbar items
	(doRun): status of Actions now toggled
	(debuggerCommand): removed
	(menuEvent): removed
	(toolButtonEvent): removed
	removed MenuListener and ToolButtonListener interfaces

2005-08-23 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceViewWidget.java (mouseEvent): Added code to toggle breakpoint

2005-08-22 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceViewWidget.java: Added "mouseEvent"
	(initialize): Added self as a MouseEvent Listener
	
	* SourceBuffer.java (processFunction): fixed repeated parsing bug
	
	* VariableList.java: Added
	
	* VariableLocation.java: Added

2005-08-17 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceBuffer.java (updatePreferences): replaced set*Color
	(SourceBuffer): Moved initialization of TextTags here from getData
	
	* PreferenceWindow.java 
	(setupButtons): added syntax highlighting options
	(buttonEvent): Saves syntax highlighting options
	
	*SourceViewWidget.java 
	(refresh): added call to SourceBuffer::updatePreferences

2005-08-18 Adam Jocksch <ajocksch@redhat.com>

	* SourceWindow.java: Added dummy methods for debugger calls
	(menuItemEvent): Added listeners to menu items

2005-07-15  Adam Jocksch <ajocksch@redhat.com>
	
	* SourceText.java 
	(SourceTest): Removed previously commented-out observer
	
2005-07-14  Adam Jocksch  <ajocksch@redhat.com>

	* SourceTest.java - added to repository, runs Source window mockup
	
	* SourceBuffer.java - Added displaying of line numbers next to lines
	
	* SourceViewWidget.java - Removed double-click/right-click add breakpoints to fix JVM crashes on quit

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
