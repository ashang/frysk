2006-01-20  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (refresh): Now calls getIntPreferenceValue rather
	than getIntPreference.
	(toggleChild): Ditto.
	* SourceViewWidget.java (refresh): Calls to get___Preference replaced
	with get___PreferenceValue.
	(drawMargin): Ditto.
	* SourceWindow (refresh): Ditto.
	* prefs/IntPreference.java (setCurrentValue): Added.
	* prefs/LNFPreferenceViewer.java (LNFPreferenceViewer): Now creates
	checkboxes and spinner for toolbar, line number, executable, and
	inline code depth preferences.
	(saveAll): saves preferences for toolbar, line number, executable mark
	and inline code depth.
	(toggleEvent): Added.
	(spinEvent): Added.
	* prefs/PreferenceManager.java: Now initializes toolbar preference
	using addPreference rather than directly inserting into the HashMap.
	(getBooleanPreferenceValue): Added.
	(getIntPreferenceValue): Added.
	(getColorPreferenceValue): Added.
	(getBooleanPreference): Now returns the preference, rather than the value.
	(getIntPreference): Ditto.
	(getColorPreference): Ditto.
	* prefs/PreferenceWindow.java: Now stores both lnf and syntax pref
	viewers.
	(buttonEvent): Both viewers are now saved, not just the current one.
	(setupButtons): Now initializes both viewers, although neither is added
	to the window.
	(updateShownPrefs): Now uses the previously initialized preference
	viewers.

2006-01-19  Adam Jocksch  <ajocksch@redhat.com>

	* prefs/PreferenceWindow.java (preferenceWindow): Now calls addListeners
	prior to calling setupButtons so that the initial selection is handled
	properly.

	* prefs/ColorPreference.java (setModel): No longer calls saveValues, now
	sets tag properties.
	* prefs/PreferenceList.java (selectionChangedEvent): Changed type of 
	preference being retrieved to ColorPreference from SyntaxPreference.
	* prefs/PreferenceWindow.java (updateShownPrefs): Fixed typo for name
	of glade widget and syntax highlighting option, now shows all widgets
	after they've been added.

	* prefs/PreferenceWindow.java (updateShownPrefs): Now actually changes
	the preference editor being displayed based on the selection.

	* prefs/PreferenceViewer.java (saveAll): Added.
	* prefs/LNFPreferenceViewer.java: Added.

	* prefs/PreferenceWindow.java (setupButtons): No longer creates a 
	SyntaxPreferenceViewer on startup.
	* prefs/IntPreference.java: Rearranged constants to fix ecj warning.

	* prefs/BooleanPreference.java: Moved constant declarations so that
	they're before the first use; solves ecj warning.
	* prefs/ColorPreference.java: Ditto.
	* prefs/ColorPreferenceEditor (setCurrentPref): Now takes argument
	of type ColorPreference rather than SyntaxPreference, also sets
	state of weight and style buttons based on input.
	(toggleEvent): Added cast to SyntaxPreference, see comment for more
	details.
	* prefs/SyntaxPrefList.java: Renamed to PreferenceList.java.
	* prefs/PreferenceList.java (PreferenceList): Now takes an array of
	Strings to use as names.
	* prefs/PreferenceViewer.java: Added.
	* prefs/PreferenceWindow.java (show): No longer re-calls setupButtons,
	as this was causing an Exception if the prefs window was launched
	more than once.
	* prefs/SyntaxPreference.java (setModel): Now updates tag weight and
	style.
	* prefs/SyntaxPreferenceViewer.java: Now implements PreferenceViewer.
	(showSyntaxPrefEditor): Changed to showPreferenceEditor.
	

2006-01-18  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): No longer takes a Preferences.
	(refresh): Now uses PreferenceManager.
	(toggleChild): Ditto.
	* PreferenceConstants.java: Removed.
	* PreferenceWindow.java: Moved to prefs/PreferenceManager.
	* prefs: Added.
	* SourceBuffer.java: Reformatted.
	(updatePreferences): Removed, tags are now updated automatically.
	(init): Now creates preferences for the various tags.
	* SourceViewWidget.java: Reformatted.
	(SourceViewWidget): No longer takes Preference object.
	(refresh): Now uses PreferencesManager to pull preference data.
	(drawMargin): Ditto.
	(initialize): Initializes some higher-level preferences.
	* SourceWindow.java: Reformatted.
	(SourceWindow): No longer creates preferences object.
	* prefs/BooleanPreference.java: Added.
	* prefs/ColorPreference.java: Ditto.
	* prefs/ColorPreferenceEditor.java: Ditto.
	* prefs/FryskPreference.java: Ditto.
	* prefs/IntPreference.java: Ditto.
	* prefs/PreferenceManager.java: Ditto.
	* prefs/SyntaxPrefsList.java: Ditto.
	* prefs/SyntaxPreference.java: Ditto.
	* prefs/SyntaxPreferenceViewer.java: Ditto.

2006-01-11  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWindow): Now prints out
	Exception stack trace upon glade error.

2005-12-21  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (refresh): Now correctly sets the color of the
	search results tag to the background, rather than foreground.
	* SourceViewWidget.java (scrollToLine): Fixed off-by-one error.
	* SourceWindow.java (handlButtonClicked): Now correctly returns
	for empty search targets as well as malformed input in the goto
	line box.
	(entryEvent): No longer searches on empty (or whitespace) text.

	* InlineViewer.java (refresh): Now performs adjustments for changes in
	the number of inline scopes that can be visible at any one time (fixes
	bug #2075).
	(moveDown): Renamed to moveDownPostOrder.
	(moveDownPreOrder): Added.
	(expandLowestChild): Uncommented.

	* InlineViewer.java (refresh): Added.
	(expandLowestChild): Added, commented out for now since it isn't used.
	* SourceViewWidget.java: Added child member variable of type 
	InlineViewer.
	(refresh): Now calls refresh on the inlined scopes.
	(setSubscopeAtCurrentLine): Now saves the passed InlineViewer as the
	child of this Widget so that it can be updated when preferences change.

2005-12-20  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (createEllipsis): Now adds a tooltip to the
	ellipsis that explains the concept of hidden inlined code more clearly.
	* PreferenceWindow.java (setupButtons): Now sets the value of the spinner
	for inline code levels to the value in the preferences model.
	(buttonEvent): Now saves the status of the spinbutton for number of inline
	levels into the preferences model.

	* Various javadoc additions to all files.

	* InlineBuffer.java (loadLines): Now sets the ellipsis anchor to null
	since the contents are being overwritten.
	(getLineCount): Is now conditional on the presence of the ellipsis,
	since that will add an extra line to the code being displayed.
	(getLastLine): Ditto.
	* InlineViewer.java (createEllipsis): Added.
	(moveUp): Now uses createEllipsis.
	(moveDown): Ditto.
	* SourceBuffer.java (loadFile): Now sets anchor to be null since 
	buffer contents are about to be overwritten.

	* InlineViewer.java (moveUp): Refactored to use createEllipsisAnchor in 
	InlineBuffer.java.
	(moveDown): Ditto.
	* InlineBuffer.java (createEllipsisAnchor): Added.
	* SourceViewWidget.java (setSubscopeAtCurrentLine): Refactored to use
	createAnchorAtCurrentLine method in SourceBuffer.
	(clearSubscopeAtCurrentLine): Refactored to use	clearAnchorAtCurrentLine
	in SourceBuffer.
	* SourceBuffer.java (createAnchorAtCurrentLine): Added.
	(clearAnchorAtCurrentLine): Added.

2005-12-14  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Removed initialization of IconManager.
	* SourceWindowFactory: Removed references to image paths since this is 
	now handled by IconManager.

	* SourceWindow.java (createSearchBar): Now pulls icons from stock,
	rather than from file.

2005-12-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java: Started then commented out new way of keeping track
	of the child anchors.
	* SourceWindow.java: Moved constants to IconManager.
 	(SourceWindow): Now calls IconManager to initialize the icons.
	(createActions): No longer creates icons.
	(createToolbar): Temporarily ditto, until IconManager can load these
	icons too.

2005-12-12  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceConstants.java: (Inline): Added values for the number of
	inline code levels to display and the default value for it.
	* InlineViewer.java (toggleChild): Now pulls the level of depth from the
	preferences model.
	(drawLineNumber): Needs to return (x) - 1 if we're showing ellipsis, not
	(x) + 1.

2005-12-09  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (moveUp): Implemented details.
	* InlineViewer.java (moveUp): Ditto.

	* InlineViewer.java (moveDown): Now reparents the inlined code (if it
	exists) so that gtk doesn't clear it away when we change the text.
	* SourceViewWidget.java (toggleChild): Changed to use new getSource
	method in DOMFunction.
	(setSubscopeAtCurrentLine): Checks to see if the widget has a parent,
	and if so removes it.
	* InlineBuffer.java (moveDown): Added code to create new StackLevel.

2005-12-08  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): Initializes base depth to 1.
	(setSubscopeAtCurrentLine): Now correctly has parameter type as
	SourceViewWidget, otherwise does not override superclass.
	(doSetSubscope): Added.
	(clearSubscopeAtCurrentLine): Added.
	(toggleChild): Arbitrary limit set to three levels for now, added
	debugging output.
	(removeLowestChild): Added debugging output.
	* SourceViewWidget.java: Added myContext member variable.
	(drawMargin): Now uses member myContext variable, to avoid repeated
	garbage collection of GC variables.

	* dom/: Moved to frysk-core, updated imports in .java files to
	match.

2005-11-24  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): Removed boolean hasEllipsis parameter.
	(setSubscopeAtCurrentLine): Added.
	(toggleChild): Added.
	(removeLowestChild): Added.
	(moveDown): Added.
	(moveUp): Added.
	* SourceWindowFactory.java (createSourceWindow): Added another level to
	the stack, all but the top and bottom are now inlined to test the inline
	code functionality.

2005-11-23  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (getInlineInstance): Added.
	(getCurrentLine): Removed.
	(setCurrentLine): Added.
	* SourceBuffer.java (setCurrentLine): Changed to protected,
	left gravity of end of current line mark set to false.
	* SourceViewWidget.java: Changed the TextChildAnchor to protected.	

	* InlineBuffer.java (hasInlineCode): Now uses getCurrentLine.
	(getCurrentLine): Added.
	
	* InlineBuffer.java (hasInlineCode): Now implemented.
	* PreferenceConstants.java: Added constants for variables that are out of
	scope, renamed unavailable variabels to optimized variables.
	* SourceBuffer.java: Changed unavailable variable tag to optimized
	variable tag, added tag for out of scope variables, removed inline
	code tag.
	(init): Removed initialization of inline scope tag, added creation
	of out of scope tag.
	(updatePreferences): Ditto, except for updating rather than
	initializing.
	(addVariable): Hardcoded some out of scope variable information.
	(createTags): Now looks for out of scope variable tags in DOM.
	* SourceViewWidget.java (toggleChild): Now uses constant for image
	node name.
	* SourceWindowFactory.java (createSourceWindow): Now adds info
	for inline code 2 levels deep.
	
2005-11-22  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceConstants.java: Added constants for unavailable variables.
	* SourceBuffer.java (addVaraible): Hacked some things in to simulate
	unavailable variables.
	(createTags): Creates unavailable variable tags.
	(init): Creates unavailable variable tag.

	* SourceViewWidget.java (mouseEvent): Now ignores clicks next to
	an area of inlined code, rather than causing the inlined code to
	be collapsed.

2005-11-21  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (InlineBuffer): Now takes a DOMSource instead of a
	StackLevel.
	(getVariable): Added.
	* InlineViewer.java (InlineViewer): Now takes a DOMSource instead of a 
	StackLevel.
	* SourceViewWidget.java (toggleChild): Refactored to reflect above
	change to InlineViewer constructor.
	* SourceWindowFactory.java (createSourceWindow): Fixed current line
	for example code.

	* InlineViewer.java (mouseEvent): Added, currently does not allow
	breakpoint or trace related functionality due to ambiguities
	regarding inlined code.
	* SourceViewWidget.java (mouseEvent): Now checks to make sure there is
	inline code before creating an InlineViewer.
	* SourceWindowFactory.java (createSourceWindow): Fixed 
	NullPointerException as a result of not incrementing a variable.

2005-11-17  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindowFactory.java (createSourceWindow): Moved inline code to
	first level of scope, added DOMFunctions for all the functions.

	* InlineBuffer.java (isLineExecutable): Now only returns false, since
	we are disabling the case of settting a breakpoint in disbled code
	since we're not sur what to do with it.
	(isLineBroken): Ditto.
	(toggleBreakpoint): Ditto.

	* InlineBuffer.java (isLineExecutable): Added.
	(isLineBroken): Added.
	(toggleBreakpoint): Added.
	* InlineViewer.java (drawMargin): Fixed off-by-one for line numbers.
	* SourceBuffer.java (toggleBreakpoint): Now checks to make sure line
	is executable.

	* InlineBuffer.java (createTags): Added.
	* SourceBuffer.java: Made most member variable protected.

	* SourceBuffer.java (isLineExecutable): Removed debugging output.
	(setCurrentLine): Ditto.
	(loadFile): Ditto.

	* SourceViewWidget.java (drawMargin): Now calculates the height of the
	current line taking whether or not there's inline code into
	consideration, not doing this was leading to errors in the margin after
	a block of expanded inline code.

	* InlineBuffer.java (getLastLine): Added.
	(getFirstLine): Added.
	* InlineViewer.java (drawLineNumber): Added.
	* SourceBuffer.java (getLastLine): Added.
	* SourceViewWidget.java (refresh): Now pulls the width of the drawing
	area from getLastLine rather than getLineCount, since in the case of
	inline code these two will not be the same.
	(drawMargin): Extracted out protected drawLineNumber method.

2005-11-16  Adam Jocksch  <ajocksch@redhat.com>

	* InlineBuffer.java (InlineBuffer): Removed debugging output.
	(getLineCount): Added.
	* InlineViewer.java (toggleChild): Removed.
	(load): Removed.
	(moveDown): Remvoed.
	(getScope): Removed.
	(setScope): Remvoed.
	(setSubScopeAtCurrentLine): Removed.
	(clearSubScopeAtCurrentLine): Removed.
	(drawMargin): Removed.
	* SourceBuffer.java (getLineCount): Removed boolean parameter since it
	was unused.
	* SourceViewWidget.java (mouseEvent): Now checks to see if there is
	inline code being displayed, and if there is compensates for it.
	(toggleChild): Moved the setting of expanded to before the 
	InlineInstance is added.
	(drawMargin): Fixed bug with the line numbers being off, combined two
	if blocks dealing with the current line.
	* InlineHandler.java: Removed.	

	* InlineBuffer.java: Added.
	* InlineViewer.java (InlineViewer): Now takes StackLevel and
	DOMInlineInstance.
	(toggleChild): Commented out for now.
	(moveDown): Ditto.
	(setSubScopeAtCurrentLine): Ditto.
	(drawMargin): Corrected bug where r,g, and b for a color were all being
	populated by the r component.
	* SourceBuffer.java (SourceBuffer): Created constructor that just 
	initializes, but doesn't load data.
	(getInlineInstance): Added.
	(init): Removed section that loads data.
	(loadFile): Changed to protected, extracted out loadLines function.
	(loadLines): Refactored out of loadFile.
	(createTags): Changed to protected.
	* SourceViewWidget.java (SourceViewWidget): Added constructor that takes
	an already existing SourceBuffer.
	(toggleChild): Refactored to use new InlineViewer constructor.
	(drawMargin): Executable marks not drawn on lines where the is expanded
	inline code.

2005-11-15  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget.java (toggleChild): Removed references to InlineHandler.
	* SourceWindowFactory.java (createSourceWindow): Adds inline isntance
	reference to appropriate lines in dummy DOM, changed the way that
	functions are added to the image.
	(printDOM): Added.

	* SourceWindow.java (setMyTask): Now sets the title to contain the
	proc command, the task #, and the status.

	* PreferenceConstants.java: Removed extraneous comment.
	* PreferenceWindow.java: Added comments to uncommented methods.
	* SourceBuffer.java: Commented uncommented methods.
	(init): Made private.
	(createComment): Added TODO, since nothing calls this right now.
	* SourceCodeLine.java: Removed.
	* SourceWindow.java: Commented Uncommented methods and reoganized layout.
	(setMyTask): Now puts name of task in window title, added TODO in regards
	to safeness of method.
	* SourceWindowFactory.java: Commented methods.
	(SourceWinListener): Made class private.

2005-11-14  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (InlineViewer): Added SourceWindow parameter to
	reflect refactorings in SourceViewWidget.
	* SourceBuffer.java (setScope): Clears all previous textmarks from
	the buffer before loading new info.
	* SourceViewWidget.java (SourceViewWidget): Added SourceWindow parameter.
	(mouseEvent): Added menu option for adding a trace on a variable.
	(drawMargin): Now uses Widget.getLayout instead of creating one from scratch
	* SourceWindow.java (SourceWindow): Sets the text for the variable trace
	window as well as the title for the current source.
	(populateStackBrowser): Removed title from column.
	(addVariableTrace): Added, but currently does nothing.
	(load): Updates the text of the label over the source when a new file is
	loaded.
	* SourceWindowFactory.java (createSourceWindow): Removed debugging output.
	* Variable.java (getNext): Removed.
	(setNext): Removed.
	(getPrev): Removed.
	(setPrev): Removed.
	* VariableList.java: Removed.

2005-11-09  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceWindow.java (PreferenceWindow): Fixed bug in finding glade file.
	* SourceBuffer.java (createTags): Now looks for FUNCTION_BODY tag, puts
	mark in buffer so we can jump to it.
	(setScope): Clears function vector when new scope is loaded.
	(addFunction): Adds FUNCTION_BODY tags into DOM.
	* SourceWindow.java (SourceWindow): Now takes glade path in constructor
	in order to pass it to the Preference Window.
	(populateFunctionBox): Extracted out of constructor.
	* SourceWindowFactory.java (createSourceWindow): Now passes glade path
	to the SourceWindow constructor.

	* SourceWindowFactory.java (createSourceWindow): Now marks proper lines
	as executable.

	* SourceWindowFactory.java (createSourceWindow): Now reads in all
	.cpp files, rather than relying on data in DOMTestGUIBuilder.

	* SourceWindowFactory.java: dummyPath now defaults to the source
	directory, since the user may not be running from a 'make install'

	* SourceWindowFactory.java (createSourceWindow): Now correctly removes
	window/task pair from hashmap when the window is closed.

2005-11-08  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java: Now inherits from Window.
	(getMyTask): Added.
	(setMyTask): Ditto.
	(SourceWindow): Now takes glade object instead of array of paths.
	(populateStackBrowser): Checks to make sure line isn't null before
	checking for inline code.
	* SourceWindowFactory.java (createSourceWindow): No longer recreates
	window if it already exists, as well as creating the LibGlade object
	needed by the SourceWindow.

	* SourceWindow.java: Now correctly adds "/" inbetween glade dir and
	file name.

	* SourceViewWidget.java: Removed excess import.
	
	* testfiles/test3.cpp: Added a #define.

2005-11-07  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (hasInlineCode): Added debugging output.
	* SourceViewWidget.java (refresh): Made margin wider to include inline
	instance markers
	(drawMargin): Fixed bug where margin was only appearing in shades
	of grey, also made changes to reflect above change to refresh.
	* SourceWindow.java (SourceWindow): Now sets current line, also added
	hack to get around eclipse ecj 3.1 compiler warnings.
	
	* StackLevel.java: Added comments to methods/members
	(StackLevel): Introduced new constructor that allows partial/multi
	-line "current line"s.
	(getColStart): Added.
	(setColStart): Ditto.
	(getColEnd): Ditto.
	(setColEnd): Ditto.
	(getEndLine): Ditto.
	(setEndLine): Ditto.
	(getLine): Refactored to getStartingLine.
	* SourceWindow.java: Refactored to reflect change of getLine to 
	getStartingLine in StackLevel.
	
	* SourceBuffer.java (hasInlineCode): Removed debug output.
	(init): Now automatically calls getCurrentLine.
	(setScope): Ditto.
	(setCurrentLine): Made private, now takes starting/ending
	lines/columns.
	* SourceViewWidget (setCurrentLine): Removed.
	* SourceWindow (selectionChangedEvent): Removed call to setCurrentLine
	in SourceBuffer.
	* StackLevel.java (StackLevel): Now inializes column variables.

	* testfiles/common.h: Added.
	* testfiles: Changed files so that they could all be compiled into
	an executable.

2005-11-03  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Now takes array of image paths.
	(createActions): Now looks for images in multiple directories.
	(createSearchBar): Ditto.
	* SourceWindowFactory.java: Added.
	
	* SourceWindow.java (SourceWindow): Now prints out more informative error
	message if glade file not found.

	* SourceWindowFactory.java: Now sets default value for glade and image
	paths to look in installed directory, then source directory.
	
	* SourceWindowFactory.java: Fixed default values of glade and image paths,
	typo in earlier version.

	* SourceWindow.java (createToolBar): Workaround to display tooltips
	implemented.
	
	* SourceViewWidget.java (mouseEvent): Added menu items for adding traces
	to variable and customizing actions to be taken on a breakpoint. These
	currently do nothing but serve as a reminder to implement them later.

2005-11-02  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java: Now stores StackLevel, not just encapsulated
	DOMSource.
	(setScope): Added.
	(loadFile): Now checks to see if the source has already been parsed,
	and if so does not parse it again.
	* SourceViewWidget.java (SourceViewWidget): Now takes StackLevel, excess
	constructors removed.
	(load): Instead of a new SourceBuffer being created setScope is now called
	on the existing one.
	* SourceWindow.java (SourceWindow): Refactored to reflect change to 
	SourceViewWidget constructor.
	* StackLevel.java: Added 'parsed' member variable.
	(isParsed): Added.
	(setParsed): Added.

2005-11-01  Adam Jocksch  <ajocksch@redhat.com>
	
	* InlineViewer.java (drawMargin): Changed to use prefixes for colors
	stored in preference model.
	* PreferenceConstants.java: Instead of storing three keys for r,g, and b
	values now only one prefix is stored, onto which r g or b is appended;
	also the default value is now stored as a org.gnu.gdk.Color.
	* PreferenceWindow.java (buttonEvent): Refactored out saveColorButton,
	saveWeightCheck, and saveStyleCheck methods.
	(setupButtons): Refactored out setupColorButton, setupBoldCheckBox, and
	setupItalicsCheckBox methods.
	* SourceBuffer.java: Renamed itTag to variableTag.
	(updatePreferences): Refactored out updateTagColor and updateTagStyle
	methods.
	* SourceViewWidget.java (refresh): Refactored to use prefixes in 
	PreferenceConstants.java.
	(drawMargin): Ditto.

2005-10-31  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget (mouseEvent): Changed variable display to be triggered
	by a menu, added breakpoint status to right click in margin. (bug 
	#1685, bug #1686).

	* SourceBuffer.java (createTags): Refactored to use new DOMTagTypes
	class.
	(addFunction): Ditto.
	(addVariable): Ditto.
	(addKeyword): Ditto.
	(addClass): Ditto.

2005-10-28  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java: Removed excess imports.
	(drawMargin): Removed unused variables for inline background.
	* SourceBuffer.java (addFunction): Re-implemented to use DOM.
	(addVariable): Ditto.
	(addKeyword): Ditto.
	(addClass): Ditto.
	(load): Now adds newline to buffer for lines with no text.
	(createTags): Now accepts tags with type 'function'.
	* cparser/CDTParser.java: Refactored calls to TextBuffer methods to use
	revised syntax.
	* cparser/CTagsParser.java: Ditto.
	* cparser/SimpleParser.java: Ditto.
	* testfiles/test6.cpp: Updated to sync with data in DOMTestGUIBuilder.

2005-10-27  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (isLineExecutable): Fixed off by one error.
	* SourceViewWidget.java (drawMargin): Moved compensation for off by one
	error into isLineExecutable, rather than dealing with it here.
	* SourceWindow.java: Added stop action, removed 'running' flag, changed
	run action to Action from ToggleAction.
	(createActions): Initialize stop action.
	(createMenus): Create stop action menu item.
	(createToolBar): Create stop action toolitem.
	(doRun): Now only toggles mode into 'running'.
	(doStop): Added, toggles status out of 'running'.
	

2005-10-27  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (isLineExecutable): Implimented to use the DOM.
	(isLineBroken): Ditto.
	(toggleBreakpoint): Ditto.
	(getVariable): Fixed off by one error when getting line, now returns a 
	Variable object containing information.
	* SourceViewWidget.java (drawMargin): Fixed off by one error for executable
	marks.
	* SourceWindow.java (populateStackBrowser): Changed title of side browser
	to "Stack".
	(SourceWindow): Removed reference to function combobox.

2005-10-26  Adam Jocksch  <ajocksch@redhat.com>

	* SourceBuffer.java (load): Removed extraneous newlines.
	(createTags): Fixed numerous errors with casting of DOM elements, as well
	as creation of class tags.
	* SourceViewWidget.java (load): Assigns newly created source buffer to
	member buf, stops GTK error.
	* SourceWindow.java: Added dom and stack member variables.
	(SourceViewWindow): Rearranged calls so that view is created before
	functions are parsed.
	(populateStackBrowser): Moved creation of source window to after we've
	found the bottom of the stack.
	* testfiles/test.cpp: Added '#include "common.h".
	* testfiles/test2.cpp: Ditto.
	* testfiles/test3.cpp: Ditto.
	* testfiles/test4.cpp: Ditto.
	* testfiles/test5.cpp: Ditto.
	* testfiles/test6.cpp: Ditto, changed name of function to bleh from main.
	

2005-10-26  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Commented out pending reorganization
	under the DOM.
	(moveUp): Ditto.
	(init): Ditto.
	* InlineViewer.java (load): Commented out pending reorganization under
	the DOM.
	(moveDown): Ditto.
	(setSubscopeAtCurrentLine): Ditto.
	* SourceBuffer.java: Removed unncessesary member variables.
	(SourceBuffer): Now takes a DOMSource.
	(SourceBuffer): Removed constructors that took Handles and TextTagTables.
	(init): No longer initializes Vector for lines or sets priority on the
	function tag, as well as adding call to load.
	(isLineExecutable): Reimplimented using the DOM.
	(isLineBroken): Remvoed code, needs to be reimplimented using the DOM.
	(toggleBreakpoint): Ditto.
	(getVariable): Partially reimplimented using DOM, still returns null.
	(addFunction): Commented out pending rewrite using DOM.
	(addVariable): Ditto.
	(addComment): Ditto.
	(addClass): Ditto.
	(addLiteral): Renamed to addKeyword, and Ditto.
	(getLineCount): Reimplimented to use the DOM.
	(hasInlineCode): Renamed from hasInlineLines, and Ditto.
	(load): Changed to private, reimplimented to use DOM.
	(createTags): Added.
	(toggleExpanded): Removed.
	(getNumInlinedLines): Removed.
	(SourceLineReader): Removed.
	* SourceViewWidget.java (SourceViewWidget): Now takes DOMSource.
	(load): Refactored to use DOM.
	(drawMargin): Remvoed commented out code, refactored parts to use DOM.
	* SourceWindow.java (SourceWindow): Partially reimplimented to use DOM.
	(populateStackBrowser): Ditto.
	(selectionChanged): Ditto.
	* StaticParser.java (parse): Reordered arguments for no good reason.
	* cparser/CDTParser.java: Changed references of addLiteral to addKeyword.
	(mainGui): Ditto.
	* PCLocation.java: Refactored to StackLevel.java

2005-10-25  Rick Moseley  <rmoseley@redhat.com>

	* testfiles/test6.cpp: new for testing DOM/GUI

2005-10-24  Adam Jocksch  <ajocksch@redhat.com>

	* ColorConverter.java: Added javadoc comments.
	* InlineHandler.java: Ditto.
	(moveDown): Now returns void.
	(moveUp): Ditto.
	* InlineViewer.java: Refactored to reflect above changes to moveUp and
	moveDown.
	* SourceBuffer.java: Changed back to using CDTParser, hopefully will have
	bug resolved soon.
	* SourceViewWidget.java:
	(setSubscopeAtCurrentLine): Now sets expanded to true.
	(clearSubscopeAtCurrentLine): Ditto.
	(toggleChild): Refactored to account for changes to InlineHandler.
	* SourceWindow.java: Added tips member variable.
	(SourceWindow): Initialize Tooltips.
	(createSearchBar): Changes tooltips to use member instance (jg bug
	#319415)
	* cparser/CDTParser.java (parse): Removed debug output

2005-10-20  Adam Jocksch  <ajocksch@redhat.com>

	* PCLocation.java (getInlineScope): Added.
	(getParentScope): Ditto.
	(hasInlineScope): Ditto.
	* InlineHandler.java (moveDown): Removed debugging output, refactored to
	use above refactorings to PCLocation, fixed bug with next scope being
	loaded instead of inline scope.
	(showScopes): Added.
	(moveUp): Refactored code out into showScopes, 
	* SourceViewWidget.java: Created hasInlineCode member.
	(load): Now sets hasInlineCode.
	(showMargins): Inline code mark is now only drawn if hasInlineCode is set.
	* InlineViewer.java (load): Now sets hasInlineCode.
	(moveDown): Now properly loads next inline level, not next level on stack.
	(showMargin): Inline code mark not drawn if no code present (identical to
	fix in SourceViewWidget.java).

2005-10-19  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (load): Changed formatting.
	* SourceBuffer.java (loadFile): Removed old redundant lines,
	switched back to SimpleParser due to bug #1503.
	* SourceWindow.java (createToolbar): Added toolbar.enable().
	(createSearchBar): Added call to enable tooltips.
	(doStackUp): Implemented core logic of functions, now works.
	(doStackDown): Ditto.
	(doStackBottom): Ditto.
	(selectionChangedEvent): Added code to refresh SourceViewWidget.
	* cparser/CDTParser.java: Added debug output.

2005-10-17  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceWindow.java (setupButtons): Show toolbar now defaults to false.
	
	* SourceWindow (SourceWindow): Find box is no longer shown on start,
	fixing bug #1480, toolbar is only shown according to user preference.
	(refresh): Added change to fix said bug.
	(setupStackBrowser): No longer shows find box if it is hidden.

2005-10-14  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java: Added Copyright/License information.
	
	* InlineViewer.java: Ditto.
	
	* PCLocation.java: Ditto.
	
	* PreferenceConstants.java: Ditto.
	
	* SourceBuffer.java: Ditto.
	
	* SourceWindow.java (SourceWindow): Moved code to create PCLocation out
	of constructor.
	(populateStackBrowser): Made public, now recreates the SourceViewWidget
	when stacks are refreshed.
	
	* SourceWinRunner (main): Now creates PCLocation data.

2005-10-13  Adam Jocksch  <ajocksch@redhat.com>

	* PCLocation.java: Added inlineScope and parentScope variables.
	(setNextScope): Removed.
	(setPrevScope): Removed.
	(link): Renamed to addNextScope.
	(addInlineScope): Added.
	
	* InlineHandler.java: All methods now refernece PCLocation.inlineScope over
	PCLocation.nextScope.
	(moveDown): No longer assumes existance of inlined scopes.
	
	* SourceViewWidget.java (load): No longer stays expanded when new file is 
	loaded.
	
	* SourceWindow.java: Now implements TreeSelectionListener.
	Member variable dataColumns added.
	(SourceWindow): Creation of PCLocation objects now uses refactored methods.
	(SourceWindow): Call to populateStackBrowser(PCLocation) added.
	(populateStackBrowser): Added.
	(addEvents): Adds TreeSelectionListener to stack browser.
	(selectionChangedEvent): Added.
	

2005-10-12  Adam Jocksch  <ajocksch@redhat.com>

	* Messages.java: Moved to ../common.

	* messages.properties: Ditto.

	* Updated all necessary files to reflect above refactoring.

2005-10-12  Adam Jocksch  <ajocksch@redhat.com>

	* Messages.java: Now uses PropertyResourceBundle and gets path to
	messages.properties from Config.PKGDATADIR.

2005-10-12  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Now takes an array of possible
	paths to glade files as well as a path for image files.

2005-10-11  Adam Jocksch  <ajocksch@redhat.com>

	* glade: Moved all glade files (frysk_source.glade{p},
	frysk_source_prefs.glade{p}) to ../glade.

2005-10-11  Adam Jocksch  <ajocksch@redhat.com>

	* testfiles: Added.

	* testfiels/test.cpp: Added.

	* testfiels/test2.cpp: Added.

	* testfiles/test3.cpp: Added.

	* testfiles/test4.cpp: Added.

	* testfiles/test5.cpp: Added.

2005-10-11  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (createActions): Accelerators are now added to 
	each action.
	(createMenus): Removed commented out accelerator code.
	(createToolbar): Removed unnecessary comments.

2005-10-07  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java: Removed member CurrentBottom, added firstVisible
	and lastVisible.
	(init): Changed to match above refactoring.
	(moveDown): Number of scopes visible now based on prefernce, changed
	to reflect this.
	(moveUp): Ditto.

	* InlineViewer.java (load): Added check to automatically hide ellipses.
	(moveDown): Added.
	(setSubscopeAtCurrentLine): Sets so the child does not show ellipses.

2005-10-05  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (load): Added note of how many scopes hidden to 
	ellipsis.
	(setSubscopeAtCurrentLine): Now sets expanded to be true
	(drawMargin): Fixed off by one error when ellipsis were shown.

	* PCLocation.java (getDepth): Added.

2005-10-04  Adam Jocksch  <ajocksch@redhat.com>

	* PreferenceConstants.java: Added default values for r,g,b triplets.
	
	* SourceBuffer.java (updatePreferences): Uses default values from 
	PreferenceConstants.java.
	
	* SourceViewWidget.java (refresh): Ditto.
	
	* PreferenceWindow.java (setupButtons): Ditto.

2005-10-04  Adam Jocksch  <ajocksch@redhat.com>

	* GladeConstants.java: Deleted.
	
	* SourceWindow.java: Ditto.
	
	* PreferenceWindow.java: Constants refactored back in.
	Renamed constants referring to 'Literals' to refer to 'keywords'.
	
	* glade/frysk_source_prefs.glade: Changed name of literal* widgets to
	keyword*.

2005-10-03  Adam Jocksch  <ajocksch@redhat.com>

	* GladeConstants.java: Added.
	
	* SourceWindow.java: Refactored constants to GladeConstants.java.
	
	* SourceViewWidget.java: Ditto.
	
	* PreferenceWindow.java: Ditto.
	
	* PreferenceConstants.java: Added.
	
	* SourceViewWidget.javaL Refactored constants to PreferenceConstants.java.

2005-10-03  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (launchPreferenceWindow): Now calls refresh in 
	SourceWindow.
	(refresh): Added.
	
	* PreferenceWindow.java (setupButtons): Status of "Show Toolbar" now
	updated.
	(buttonEvent): Status of "Show Toolbar" saved into prefs model.

2005-09-30  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer (drawMargin): Added code to draw margin for scopes with
	ellipsis visible.

2005-09-30  Adam Jocksch  <ajocksch@redhat.com>

	* SourceViewWidget.java (drawMargin): Changed to protected.
	(drawMargin): Fixed bug where gap for inline code in line numbers wasn't
	being obeyed (bug #1398)
	(setSubscopeAtCurrentLine): Added checks for pre-existing child anchor.
	(clearSubscopeAtCurrentLine): Nullifies old child anchor.
	(mouseEvent): Removed unecesary refresh.
	
	* InlineHandler.java (moveDown): Fixed bug where upper scope wouldn't
	change.
	(moveDown): Removed unnecesary refresh commands.
	(moveUp): Ditto.
	
	* InlineViewer.java (drawMargin): Added.
	(toggleChild): Calls now set expanded.

2005-09-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Refactored ellipsis code into 
	InlineViewer::load.
	(moveUp): Ditto.
	
	* InlineViewer (load): Added ellipsis code from InlineHandler.
	(InlineViewer): Added constructor that takes boolean flag to show
	ellipsis.

2005-09-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Extracted sections into 
	SourceViewWidget::setSubscopeAtCurrentLine.
	(moveUp): Ditto, also moved common fields out of if statements.
	(moveUp(SourceViewWidget)): Refactored parts into 
	SourceViewWidget::clearSubscopeAtCurrentLine
	
	* SourceViewWidget.java (setSubscopeAtCurrentLocation): Added.
	(clearSubscopeAtCurrentLocation): Ditto.
	
	* InlineViewer (setSubscopeAtCurrentLoction): Added.
	

2005-09-29  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveDown): Moved the ellipsis into the InlineViewer.
	(moveUp): Ditto.

2005-09-28  Adam Jocksch  <ajocksch@redhat.com>

	* InlineHandler.java (moveUp): Fixed errors keeping track of current scope.
	(moveDown): Ditto.
	(moveDown): Added ellipsis w/ tooltip when levels of code are hidden.
	
	* SourceViewWidget.java (toggleChild): Removed debugging output.
	(drawMargin): First attempt at putting a background behind the 'i' in margin.
	
	* SourceBuffer.java (setCurrentLine): Removed debugging output.
	
	* cparser/CDTParser.java (ParserCallBack): Removed debugging output.

2005-09-26  Adam Jocksch  <ajocksch@redhat.com>

	* InlineViewer.java (load): Added.

	* InlineHandler.java: Added.

	* SourceViewWidget.java (load): Removed debug output.
	Now initializes InlineHandler to deal with inlined code.
	(toggleChild): Now uses InlineHandler::toggleTopmost;
	(drawMargin): refactored to removed excess variables.
	(drawMargin): Changed sign for inlined code to 'i'.

	* SourceWindow.java (SourceWindow): Changed example text to load.

	* PCLocation.java (getInlineData): Refactored to getNextScope.

2005-09-26  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java: Commented out (for now) unused import to fix warning.

	* PCLocation.java: Added depth identifier.
	Changed next/prevScope to protected.

2005-09-26  Adam Jocksch  <ajocksch@redhat.com>

	* PCLocation.java: Added.

	* SourceBuffer.java: Changed start/endCurrentLine to TextMarks.
	(setCurrentLine): Changed to reflect above change to TextMark.
	(getCurrentLine): Ditto.

	* SourceViewWidget.java: Added member 'inlined' for inlined code.
	(SourceViewWidget):  Changed handling of mouse events in margin to 
	expand inlined code.
	(load): Added.
	(toggleChild): Added.
	(drawMargin): Commented out unused (for now) variables.
	(getHeight): Added.

	* SourceWindow.java (SourceWindow): Use PCLocation to load data into
	SourceViewWidget.

2005-09-22  Andrew Cagney  <cagney@redhat.com>

	* SourceWindow.java: Import frysk.Config, instead of
	frysk.bin.Config.

2005-09-15  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (createMenus): Added casts to fix compilation error.
	(createToolbar): Ditto.

2005-09-14  Adam Jocksch  <ajocksch@redhat.com>

	* StaticParser.java (parse): Removed public identifier to get rid of compiler warning.

	* SourceViewWidget.java: Added constants for class specifier properties.
	(drawMargin): Added colored margins for expanded inline code.
	
	* SourceBuffer.java (updatePreferences): Changed to reference new constants in SourceViewWidget.java.

2005-09-14  Adam Jocksch  <ajocksch@redhat.com>

	* SourceCodeLine.java: Added ability to have inlined code.
	(addInlinedLine): Added.
	(getInlinedLines): Ditto.
	(hasInlinedLines): Ditto.
	(isExpanded): Ditto.
	(getNumInlinedLines): Ditto.

	* SourceBuffer.java: Added Inline Code, class identifier, and Member Variable tags.
	(loadFile): Added small test of inlining code to hardcoded line.
	(loadFile): Made switch to CDTParser from SimpleParser.
	(updatePreferences): Loads values for class and inline tags.
	(addFunction): Added overloaded version that takes offset from start of file.
	(addVariable): Changed to treat variable offset as from start of file
	(addLiteral): Added overloaded version that takes offset from start of file.
	(addLiteral): Fixed typo in name of previous version.
	(addClass): Added.
	(hasIndentedLines): Added.
	(isExpanded): Added.
	(toggleExpanded): Added.
	(getNumInlinedLines): Added.
	(getLineCount): Added overloaded version that can optionally include inlined code.

	* SourceViewWidget.java: Added constants for inline code color.
	(SourceViewWidget): For MouseListener type of button now filtered at lower level.
	(SourceViewWidget): Left clicks now detected in margin, used to trigger inline expansion.
	(drawMargin): Pushed common variables to higher scope in function.
	(drawMargin): Added ability to skip over expanded inlined code.
	(drawMargin): Draws mark, color in margin if line contains inlined code.

	* SourceWindow.java (SourceWindow): Now try a second location for glade file.

	* Variable.java: Changed isGlobal to isMember.
	(isGlobal): Refactored to isMember.

	* cparser/CDTParser.java: Added.

2005-09-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Fixed typo in loading glade file.  

2005-09-13  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java (SourceWindow): Changed glade path to refer to frysk.bin.Config.GLADEPATH.

2005-09-09  Adam Jocksch  <ajocksch@redhat.com>

	* cparser/CTagsParser.java: Added comments.
	(escapeChars): Removed.
	
	* SourceViewWidget.java: Created new constants for comment, global tags
	
	* SourceBuffer.java (getNextLine): Removed extraneous variables.
	Refactored strings into constants.
	
	* SourceWindow.java (SourceWindow): Window now hidden until loading complete.
	Excess constants pruned.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/gui/srcwin/ to frysk/gui/srcwin/.

2005-09-08  Andrew Cagney  <cagney@redhat.com>

	* cparser/CDTParser.java: Delete.
	* cparser/SimpleParser.java: Ditto.
	* SourceBuffer.java: Revert switch to CDTParser.

2005-09-07  Adam Jocksch  <ajocksch@redhat.com>

	* SourceWindow.java: moved from com.redhat.fedora.frysk.gui
	* cparser/SimpleParser.java (parse): added support for bitshift and quote characters
	* cparser/CDTParser.java: Added
	* SourceBuffer.java (loadFile): changed to use CDTParser
	(addFunction): Added overloaded method to take char offset from start of file
	(addVaraible): Changed to use only character offset, not line number

2005-09-07  Adam Jocksch  <ajocksch@redhat.com>

	* cparser/SimpleParser.java: Added to repository

	* SourceBuffer.java (loadFile): Changed to use SimpleParser instead of CTagsParser

	* SourceWindow.java (createActions): Changed icon for run action to run.png

2005-09-06 Adam Jocksch <ajocksch@redhat.com>

	* cparser: removed all but CTagsParser.java

	* VariableLocation.java: changed to Variable.java
	now inherits from CodeItem

	* CodeItem.java: Added

	* StaticParser.java: Added

2005-09-01 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceWindow.java: added createActions, createMenus
	(createToolbar): toolbar now created from Action objects
	(attachEvents): removed calls to attach to menu/toolbar items
	(doRun): status of Actions now toggled
	(debuggerCommand): removed
	(menuEvent): removed
	(toolButtonEvent): removed
	removed MenuListener and ToolButtonListener interfaces

2005-08-23 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceViewWidget.java (mouseEvent): Added code to toggle breakpoint

2005-08-22 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceViewWidget.java: Added "mouseEvent"
	(initialize): Added self as a MouseEvent Listener
	
	* SourceBuffer.java (processFunction): fixed repeated parsing bug
	
	* VariableList.java: Added
	
	* VariableLocation.java: Added

2005-08-17 Adam Jocksch <ajocksch@redhat.com>
	
	* SourceBuffer.java (updatePreferences): replaced set*Color
	(SourceBuffer): Moved initialization of TextTags here from getData
	
	* PreferenceWindow.java 
	(setupButtons): added syntax highlighting options
	(buttonEvent): Saves syntax highlighting options
	
	*SourceViewWidget.java 
	(refresh): added call to SourceBuffer::updatePreferences

2005-08-18 Adam Jocksch <ajocksch@redhat.com>

	* SourceWindow.java: Added dummy methods for debugger calls
	(menuItemEvent): Added listeners to menu items

2005-07-15  Adam Jocksch <ajocksch@redhat.com>
	
	* SourceText.java 
	(SourceTest): Removed previously commented-out observer
	
2005-07-14  Adam Jocksch  <ajocksch@redhat.com>

	* SourceTest.java - added to repository, runs Source window mockup
	
	* SourceBuffer.java - Added displaying of line numbers next to lines
	
	* SourceViewWidget.java - Removed double-click/right-click add breakpoints to fix JVM crashes on quit

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
