? diffs
Index: SourceBuffer.java
===================================================================
RCS file: /notnfs/accudog/cvs/frysk-gui/com/redhat/fedora/frysk/gui/srcwin/SourceBuffer.java,v
retrieving revision 1.8
diff -p -u -r1.8 SourceBuffer.java
--- SourceBuffer.java	8 Sep 2005 21:13:21 -0000	1.8
+++ SourceBuffer.java	9 Sep 2005 02:15:13 -0000
@@ -18,7 +18,7 @@ import org.gnu.gtk.TextTagTable;
 import org.gnu.javagnome.Handle;
 import org.gnu.pango.Weight;
 
-import com.redhat.fedora.frysk.gui.srcwin.cparser.CDTParser;
+import com.redhat.fedora.frysk.gui.srcwin.cparser.SimpleParser;
 
 /**
  * This class is a wrapper around TextBuffer, it allows for extra functionality
@@ -159,7 +159,7 @@ public class SourceBuffer extends TextBu
 
 		this.varList = new VariableList(this.getLineCount());
 		
-		this.staticParser = new CDTParser();
+		this.staticParser = new SimpleParser();
 		try {
 			this.staticParser.parse(filename, this);
 		} catch (IOException e) {
@@ -505,19 +505,11 @@ public class SourceBuffer extends TextBu
 		}
 	}
 	
-	public void addFunction(String name, int charOffset, boolean declaration){
-		this.applyTag(FUNCTION_TAG, this.getIter(charOffset), this.getIter(charOffset+name.length()));
-		if(declaration){
-			this.createMark(name+"_FUNC", this.getIter(charOffset), true);
-			this.functions.add(name+"_FUNC");
-		}
-	}
-	
 	public void addVariable(Variable v){
 		if(!v.isGlobal())
-			this.applyTag(ID_TAG, this.getIter(v.getCol()), this.getIter(v.getCol()+v.getName().length()));
+			this.applyTag(ID_TAG, this.getIter(v.getLine(), v.getCol()), this.getIter(v.getLine(), v.getCol()+v.getName().length()));
 		else
-			this.applyTag("GLOBAL", this.getIter(v.getCol()), this.getIter(v.getCol()+v.getName().length()));
+			this.applyTag("GLOBAL", this.getIter(v.getLine(), v.getCol()), this.getIter(v.getLine(), v.getCol()+v.getName().length()));
 		this.varList.addVariable(v);
 	}
 	
Index: cparser/SimpleParser.java
===================================================================
RCS file: /notnfs/accudog/cvs/frysk-gui/com/redhat/fedora/frysk/gui/srcwin/cparser/SimpleParser.java,v
retrieving revision 1.2
diff -p -u -r1.2 SimpleParser.java
--- cparser/SimpleParser.java	8 Sep 2005 21:13:21 -0000	1.2
+++ cparser/SimpleParser.java	9 Sep 2005 02:15:13 -0000
@@ -178,7 +178,7 @@ class Tokenizer{
 		
 		for(int i = 0; i < target.length(); i++){
 			char c = target.charAt(i);
-			if(Character.isWhitespace(c))
+			if(Character.isWhitespace(c)){
 				if(i == 0){
 					target = target.substring(1);
 					if(c == '\n'){
@@ -194,24 +194,25 @@ class Tokenizer{
 				else{
 					return target.substring(0,i);
 				}
+			}
 			
 			if(c == ';' || c == '{' || c== '}' || c == '(' ||
 					c == ')' || c == '/' || c == '*' || c == '+' ||
 					c == '-' || c == '%' || c == '=' || c == '<' ||
-					c == '>' || c == '"'){
+					c == '>'){
 				
 				if(i == 0){
-					if(i < target.length() -1){
-						char nextChar = target.charAt(i+1);
-						if(		(c == '*' && nextChar == '/') ||
-								(c == '<' && (nextChar == '<' || nextChar == '=')) ||
-								(c == '>' && (nextChar == '>' || nextChar == '=')) ||
-								((c == '+' || c == '%' || c == '*' || c == '-' || c== '/' ||
-										c == '<' || c == '=' || c == '>') && nextChar == '=') ||
-							    (c == '/' && (nextChar == '/' || nextChar == '*'))){
-							return target.substring(0,2);
-						}
-					} 	
+					if(c == '*' && i < target.length() - 1 && target.charAt(i+1) == '/')
+						return target.substring(0,2);
+					
+					if((c == '+' || c == '%' || c == '*' || c == '-' || c== '/' ||
+							c == '<' || c == '=' || c == '>') && i < target.length() - 1 &&
+							target.charAt(i+1) == '=')
+						return target.substring(0,2);
+				
+					if(c == '/' && i < target.length() - 1 && i < target.length() - 1 && 
+							(target.charAt(i+1) == '/' || target.charAt(i+1) == '*'))
+						return target.substring(0,2);
 
 					return target.substring(0,1);
 				}
@@ -236,6 +237,6 @@ class Token{
 	}
 	
 	public String toString(){
-		return this.text+": (line "+this.lineNum+", offset "+colNum+")";
+		return this.text+"(line "+this.lineNum+", offset "+colNum+")";
 	}
 }
\ No newline at end of file
