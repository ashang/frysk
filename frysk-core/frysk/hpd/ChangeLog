2008-02-04  Tim Moore  <timoore@redhat.com>
	* BreakpointCommand.java (interpret): Print out hex address when breakpoint is hit.

2008-02-02  Rick Moseley  <rmoseley@redhat.com>

	* GoCommand.java: Fix bz #5714.
	* TestGoCommand.java(testGoCommandError()): New for above fix.

2008-02-01  Rick Moseley  <rmoseley@redhat.com>

	* GoCommand.java: Fix bz#5674.
	* AttachCommand.java: Ditto.
	* CLI.java: Ditto.
	* StartRun.java: Ditto.
	* TestGoCommand.java: New.
	* TestStartCommand.java: Increase timeout for file creation wait.
	* TestRunCommand.java: Ditto.

2008-01-29  Stan Cox  <scox@redhat.com>

	* TestSysRoot.java (testHaveSysRoot): test-sysroot now lives in
	pkglibdir.  Use sendCommandExpectPrompt.

2008-01-29  Rick Moseley  <rmoseley@redhat.com>

	* StartRun.java: Kill each proc only once(bz #5691).

2008-01-25  Rick Moseley  <rmoseley@redhat.com>

	* TestHpdTestHarness.java: Fix pattern matches.
	
	* TestHpdTestHarness.java: Change e.send to e.sendCommandExpectPrompt.

2008-01-25  Andrew Cagney  <cagney@redhat.com>

	* TestLib.java: Replace Expect with TearDownExpect.
	* TestSysRoot.java: Ditto.
	(expect): Delete.
	(tearDown()): Delete.
	* HpdTestbed.java: Extend TearDownExpect instead of Expect.

	* TestDisassemblerCommand.java: Do not use explicit timeouts.
	* TestHpdTestHarness.java: Ditto.
	* TestKillCommand.java: Ditto.
	* TestLoadCommand.java: Ditto.

2008-01-24  Nurdin Premji  <npremji@redhat.com>

	* TaskData.java (toPrint): Renamed to ...
	(printHeader): also removed boolean parameter 
	Was always set to true anyway.
	Only print header if process has more than one task. bug #5417
	Move extra println into this method, rather than after all calls to this function.
	* EvalCommands.java (eval): Updated due to TaskData.printHeader name change.
	* StackCommands.java (select): Ditto.
	(Where.interpret): Ditto. 
	
2008-01-24  Stan Cox  <scox@redhat.com>

	* AttachCommand.java (Options): New.  Add -sysroot option.
	(interpret): Set sysroot.
	* CoreCommand.java: Likewise.
	* LoadCommand.java: Likewise.
	* ListCommand.java (interpret): Remove sysroot reference except for
	"list function".
	* DbgVariables.java (DbgVariables): Remove SYSROOT.

2008-01-24  Rick Moseley  <rmoseley@redhat.com>

	* StartRun.java: Print command line for start/run.

2008-01-24  Andrew Cagney  <cagney@redhat.com>

	* HpdTestbed.java: Update; CoreFileAtSignal renamed to
	CorefileFactory.
	* TestAuxvCommand.java: Ditto.
	* TestCoreCommand.java: Ditto.

	* TestAuxvCommand.java: Replace TestLinuxCore with
	CoreFileAtSignal; use sendCommandExpectPrompt.

	* RegsCommand.java: Update; Register moved to frysk.isa.registers.
	* TestEvalCommands.java: Ditto.

	* TestCoreCommand.java: Use sendCommandExpectPrompt.

	* TestCoreCommand.java: Replace TestLinuxCore with
	CoreFileAtSignal.
	
=======
>>>>>>> frysk-core/frysk/hpd/TaskData only print task id if more than one task:frysk-core/frysk/hpd/ChangeLog
2008-01-23  Rick Moseley  <rmoseley@redhat.com>

	* TestRunCommand.java (testRunCommandParamter): New.
	* TestStartCommand.java (testStartCommandParameter): New.
	* StartRun.java: Fix bug when multiple runs the correct
	parameter list is generated.

2008-01-21  Andrew Cagney  <cagney@redhat.com>

	* TestSysRoot.java: Mark as unresolved, bug #5657.

2008-01-16  Stan Cox  <scox@redhat.com>

	* ListCommand.java (interpret): Change line marker to ->
	* TestListCommand.java (testListPC): Ditto.

2008-01-16  Andrew Cagney  <cagney@redhat.com>

	* TaskData.java: Task.getBlockers() make private; use workaround.

2008-01-15  Stan Cox  <scox@redhat.com>

	* TestSysRoot.java (testHaveSysRoot): Test sysroot is now in pkgdatadir.

2008-01-15  Andrew Cagney  <cagney@redhat.com>

	* TestSysRoot.java: Mark as unresolved, bug 5619.

2008-01-15  Rick Moseley  <rmoseley@redhat.com>

	* StartRun.java: New, consolidation of Start/RunCommand.
	* StartCommand.java: Move common code to StartRun.java.
	* RunCommand.java: Ditto.
	* TestStartCommand.java: Modify for above changes.
	* TestRunCommand.java: Ditto plus add timeout so test won't fail.
	* TestBreakpoints.java: Ditto.
	* TestListCommand.java: Ditto.
	* TestGenerateCoreCommand.java: Ditto.
	* LoadCommand.java: Improve help verbage.
	* TestLoadCommand.java: Add quit command at end of test.

2008-01-14  Mike Cvet  <mcvet@redhat.com>

	* StepInstructionCommand.java (interpret): Changed from iterating over
	taskList to iterating over ptset, fixing a bug.

2008-01-13  Stan Cox  <scox@redhat.com>

	* DbgVariables.java (DbgVariables): Make public.
	(vars): Make static final.  Add SYSROOT.
	(getSTringValue): Make static.  Return String.
	* ListCommand.java (interpret): Consider SYSROOT.
	* TestSysRoot.java: New file.

2008-01-11  Andrew Cagney  <cagney@redhat.com>

	* CLI.java (nasty(Exception)): Check for
	ArrayIndexOutOfBoundsException.

2008-01-11  Phil Muldoon  <pmuldoon@redhat.com>

	* GenerateCoreCommand.java (interpret): Fix error message text.

2008-01-11  Phil Muldoon  <pmuldoon@redhat.com>

	* TopLevelCommand.java (TopLevelCommand): Add dump command.t	
	* GenerateCoreCommand.java: New.
	* TestGenerateCoreCommand.java: New. 

2008-01-10  Phil Muldoon  <pmuldoon@redhat.com>

	* ParameterizedCommand.java (help): Print help if longCommands >0 ! >1.
	Seperate options from help text.
	 
	* TestRegs.java (testRegsCommand): Add general-regs
	* RegsCommand.java: (RegsCommand): New constructor.
	(interpret): Account for new constructor setting register
	group.
	* InfoCommand.java (InfoCommand): Add specific registers
	group names.
	
	* AuxvCommand.java (interpret): Do not println, instead 
	flush output.
	
	* TestAuxvCommand.java (testAuxVCoreCommand): Adjust order
	or live and core auxv requests. 
	

2008-01-09  Phil Muldoon  <pmuldoon@redhat.com>

	* TestAuxvCommand.java (testAuxVCoreCommand): Pass in proc to
	BuildAuxv.
	* MapsCommand.java (interpret): With with multiple processes,
	over multipe sets.
	* AuxvCommand.java (interpret): Work with multiple processes,
	over multipe sets.
	* InfoCommand.java (Help): Delete internal help
	command.

2008-01-08  Andrew Cagney  <cagney@redhat.com>

	* CoreCommand.java (getProc(LinuxCoreHost)): Delete; use
	Host.getSoleProcFIXME.

2008-01-07  Andrew Cagney  <cagney@redhat.com>

	* AttachCommand.java: Update; use Host.requestProc(ProcId,FindProc).
	* TestLib.java: Ditto.

2008-01-03  Tim Moore  <timoore@redhat.com>
    
    	* BreakpointCommand.java (interpret): Throw error if no arguments
    	are supplied.
    	* LoadCommand.java (interpret): ditto
	
2008-01-02  Rick Moseley  <rmoseley@redhat.com>

	* RunCommand.java: Run to breakpoint instead of first instruction.
	* TestRunCommand.java: New.
	* TestListCommand.java: Use HpdTestbed.start instead of HpdTestbed.run.
	* TestBreakpoints.java: Ditto.
	* TestLoadCommand.java: Ditto.

2008-01-02  Andrew Cagney  <cagney@redhat.com>

	* CoreCommand.java: Update; frysk.proc.dead.LinuxHost renamed to
	.LinuxCoreHost.

2008-01-02  Tim Moore  <timoore@redhat.com>

	* TestBreakpoints.java (testBreakOnStructMemberName): New test.

2007-12-20  Phil Muldoon  <pmuldoon@redhat.com>

	* InfoCommand.java: New. Add auxv, maps, debuginfo.
	* TopLevelCommand.java(TopLevelCommand): Add InfoCommand.
	Remove auxv, maps, debuginfo.
	* TestRegs.java (testRegsCommand): Add 'info regs'
	to test.	
	* TestMapsCommand.java (testMapsCommand): Send 'info maps'
	to expect instead of 'maps'.
	* TestAuxvCommand.java (testAuxVCoreCommand): Send 'info auxv'
	to expect instead of 'auxv'.
	* TestHelp.java (TestHelp): Remove debuginfo, add
	info to array.

2007-12-18  Rick Moseley  <rmoseley@redhat.com>

	* TestLoadCommand.java: Fix regex symbols.

2007-12-17  Rick Moseley  <rmoseley@redhat.com>

	* StartCommand.java: New.
	* TestStartCommand.java: New.
	* HpdTestbed.java (start): New method to support start
	command.
	* TopLevel.Command.java: Added start command.
	* TestLoadCommand.java: Change e.send() > e.sendCommandExpectPrompt().
	* TestPeekCommand.java: Ditto.

2007-12-17  Phil Muldoon  <pmuldoon@redhat.com>

	* TestAuxvCommand.java (testAuxVCoreCommand): Remove expect
	timeout override.
	* TestCoreCommand.java: Ditto.

2007-12-14  Andrew Cagney  <cagney@redhat.com>

	* HpdTestbed.java: Update; EofException renamed to EndOfFileException.
	* TestPreprocessor.java: Ditto.

2007-12-13  Sami Wagiaalla  <swagiaal@redhat.com>

	Moved frysk.rt.Line to frysk.scopes.SourceLocation.
	* StepNextiCommand.java: 
	* StepNextCommand.java: Updated.
	* StepInstructionCommand.java: Updated.
	* StepFinishCommand.java: Updated.
	* StepCommand.java: Updated.
	* ListCommand.java: Updated.

2007-12-13  Sami Wagiaalla  <swagiaal@redhat.com>
	
	DwarfDie.getDeclFile() now returns File.
	* ListCommand.java (interpret): Updated

2007-12-13  Rick Moseley  <rmoseley@redhat.com>

	* TestLoadCommand.java: Remove part of test no longer valid.

2007-12-13  Phil Muldoon  <pmuldoon@redhat.com>

	* AuxvCommand.java (interpret): Check for null auxv data.
	* MapsCommand.java (interpret): Check for null maps data.

2007-12-12  Rick Moseley  <rmoseley@redhat.com>

	* TestHpdTestHarness.java: New for testing bz #5480.
	* TestKillCommand.java (testLoadKill): New for bz #5482.

2007-12-11  Rick Moseley  <rmoseley@redhat.com>

	* KillCommand.java: New.
	* TopLevelCommand.java: Changes for "kill" command.
	* RunCommand.java: Ditto.
	* GoCommand.java: Added message that process is now running.
	* TestKillCommand.java: New to test "kill" command.
	* TestPeekCommand.java: Fix failing test.
	* ViewsetCommand.java: Add "\t" to align columns.

2007-12-11  Stan Cox  <scox@redhat.com>

	* EvalCommands.java (Printer.TYPE): Change to use "String toPrint()"

2007-12-11  Andrew Cagney  <cagney@redhat.com>

	* MultiLevelCommand.java (interpret(CLI,Input)): Add comment on
	why help(CLI,Input) is called.
	* TestPreprocessor.java: New.
	* CLI.java (execCommand(String)): Ignore empty lines.

	* ListCommand.java: Update; DebugInfoFrame's .getLines() replaced
	by getLine().
	* StepCommand.java: Ditto.
	* StepNextiCommand.java: Ditto.
	* StepNextCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.
	* StepFinishCommand.java: Ditto.

2007-12-10  Andrew Cagney  <cagney@redhat.com>

	* TestInput.java (check): Check out-of-range requests.
	* Input.java (parameter(int)): Fix off-by-one check of
	upper-bound.

	* TestEvalCommands.java (testFormatInteger_b()): Replace
	testFormatInteger_t().
	* CommandOption.java (FormatOption.parse(String,Object)): Change
	binary option to "b".

2007-12-07  Phil Muldoon  <pmuldoon@redhat.com>

	* CoreCommand.java: Tweak help text. 

	* AuxvCommand.java (interpret): Return nothing when
	main task cannot be found.
	* MapsCommand.java: New.
	* TestMapsCommand: New.
	* TopLevelCommand.java (TopLevelCommand): Add maps command.

	* AuxvCommand.java: Move AuxvStringBuilder from here
	to frysk.util.
	* TestAuxvCommand.java (testAuxVCoreCommand): Rewrite.
	Extract auxv from live process, generate core, test
	against fhpd represention of core auxv data.
	 

2007-12-06  Phil Muldoon  <pmuldoon@redhat.com>

	* TopLevelCommand.java(TopLevelCommand): add auxv command.
	* TestAuxvCommand.java: New.
	* AuxvCommand.java: New.

2007-12-04  Andrew Cagney  <cagney@redhat.com>

	Merge frysk.sys.Sig into frysk.sys.Signal.
	* QuitCommand.java: Update.

2007-11-29  Rick Moseley  <rmoseley@redhat.com>

	* RunCommand.java: Added code to implement the ability to run
	core files loaded with the core command with a path-to-
	executable parameter.
	* CLI.java: Ditto.
	* CoreCommand.java: Ditto.
	* TestCoreCommand.java: Test above changes.
	* LoadCommand.java: Move output of "Loaded*" message until
	after debuginfo has been retrieved.

2007-11-28  Andrew Cagney  <cagney@redhat.com>

	* RegsCommand.java: Update; Registers .getDefaultRegisterGroup
	renamed to getGeneralRegisterGroup.

2007-11-27  Teresa Thomas  <tthomas@redhat.com>
	
	* EvalCommands.java (Printer..print): Remove type printing
	for pointers.
	
2007-11-27  Tim Moore  <timoore@redhat.com>

	* CLI.java (doAttach): Wrap await call inside loop in order to
	disregard InterruptedException.
	* QuitCommand.java (interpret): ditto
	* RunCommand.java (run): ditto
	
2007-11-22  Rick Moseley  <rmoseley@redhat.com>

	* TestPeekCommand.java: Fix bz #5396; added test for when
	no params are entered for command(testPeekCommandNoParameter).

2007-11-21  Phil Muldoon  <pmuldoon@redhat.com>

	* PeekCommand.java (interpret): Check that arguments are > 0.
	
2007-11-20  Rick Moseley  <rmoseley@redhat.com>

	* PeekCommand.java: Fix bz# 5380(make peek command
	work with all types of Hosts).
	* LoadCommand.java: Ditto.
	* CLI.java; Ditto.
	* TestLoadCommand.java: Ditto.

2007-11-20  Rick Moseley  <rmoseley@redhat.com>

	* RunCommand.java: Clear loadedProcs HashMap when done.
	* TestLoadCommand.java: Add test for the above change.

2007-11-19  Rick Moseley  <rmoseley@redhat.com>

	* RunCommand.java: Fix bz# 5369; jazz up the help message.

2007-11-19  Rick Moseley  <rmoseley@redhat.com>

	* CLI.java: Fix bz #5351.
	* RunCommand.java: Ditto.
	* LoadCommand.java: Ditto.
	* AttachCommand.java: Ditto.

2007-11-17  Andrew Cagney  <cagney@redhat.com>

	* EvalCommands.java (Printer): New.
	(Options): Replace dumpTree with printer;
	(EvalCommands(String,String,String)): Add options -location,
	-type, -value, -tree, and -raw.
	* TestEvalCommands.java (testPrintLocation()): New.
	(testPrintLocationFails()): New.
	(testPrintType()): New.
	(testPrintTypeFails()): New.
	* TestPtypeCommand.java: Delete.
	* TestPlocationCommand.java: Delete.
	* PtypeCommand.java: Delete.
	* PlocationCommand.java: Delete.
	* TestExamineCommand.java: Delete.
	* ExamineCommand.java: Delete.
	* TopLevelCommand.java: Update.
	* TestHelp.java: Update.

	* Command.java (Command(String,String,String)): Replace
	Command(String,String,String,String); name dropped.
	(interpret(CLI,Input)): Make package private.
	* WhichsetsCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* StepNextCommand.java: Update.
	* TopLevelCommand.java: Update.
	* TestParameterizedCommand.java: Update.
	* StepNextiCommand.java: Update.
	* StepFinishCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepCommand.java: Update.
	* StackCommands.java: Update.
	* RunCommand.java: Update.
	* RegsCommand.java: Update.
	* QuitCommand.java: Update.
	* PtypeCommand.java: Update.
	* PlocationCommand.java: Update.
	* ListCommand.java: Update.
	* HaltCommand.java: Update.
	* GoCommand.java: Update.
	* FocusCommand.java: Update.
	* MultiLevelCommand.java: Update.
	* ParameterizedCommand.java: Update.
	* AliasCommands.java: Update.
	* AttachCommand.java: Update.
	* BreakpointCommand.java: Update.
	* DbgVariableCommands.java: Update.
	* DebuginfoCommand.java: Update.
	* DefsetCommand.java: Update.
	* DetachCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DisplayCommand.java: Update.
	* EvalCommands.java: Update.

	* Command.java (name): Delete.
	(getName()): Delete.
	* MultiLevelCommand.java (add(Command)): Delete.
	(add(Command,String)): New.
	(abbrevs): New.
	(addAbbrev): New.
	(lookup(String)): Use abbrevs.
	(complete(CLI,Input,int,List)): Use lookup(String).
	* TopLevelCommand.java: Update.

	* CommandHelp.java: Delete.
	* Command.java (getHelp()): Delete.
	(help): Delete.
	
	* TestHelp.java (topLevel): New.
	(testHelp()): Use.
	(testBlankCompletion()): New.
	(setUp()): New.

	* CLI.java (parseValue(Task,String,boolean)): Delete.
	(parseValue(Task,String)): Delete.
	(parseExpression(Task,String)): New.
	* DisassembleCommand.java: Update.
	* EvalCommands.java: Update.
	* ExamineCommand.java: Update.
	* PlocationCommand.java: Update.
	* PtypeCommand.java: Update.
	* TestPtypeCommand.java: Update.

	* CompletionFactory.java (completeExpression(CLI,Input,int,List)):
	Re-implement using
	ExpressionFactory.complete(ExprSymTab,String,List) and
	ObjectDeclarationSearchEngine.

	* TestBreakpoints.java (testHpdBreakMultiThreaded()): Mark as
	unresolved, bug 5351.

2007-11-16  Rick Moseley  <rmoseley@redhat.com>

	* AttachCommand.java: Implement load/run capability.
	* CLI.java: Ditto.
	* LoadCommand.java: Ditto.
	* RunCommand.java: Ditto.
	* TestLoadCommand: Test new load/run capability.
	
2007-11-16  Stan Cox  <scox@redhat.com>

	* TestListCommand.java (testListPC): Use sendCommandExpectPrompt.
	(testListFunction): Likewise.
	(testListReverse): Likewise.
	(testListErrors): Likewise.

2007-11-15  Stan Cox  <scox@redhat.com>
	* TestListCommand.java (testListPC): Change to use funit-quicksort.
	(testListFunction): Likewise.
	(testListReverse): Likewise.
	(testListErrors): Likewise.

2007-11-15  Andrew Cagney  <cagney@redhat.com>

	* PlocationCommand.java: Use CLI.printError(Exception).
	* EvalCommands.java: Ditto.
	* CLI.java (printError(Exception)): New.
	(nasty(Exception)): New.
	(doAttach()): Throw a RuntimeException when there
	(execCommand(String)): Pass RuntimeExceptions to printError.
	(commplete(String,int,List)): Print "nasty" exceptions.
	* Message.java (Message): Remove constructor that takes a possible
	exception cause.
	(getException): Delete.
	* CLI.java (addMessage): Delete variant that takes a possible
	exception cause.
	(flushMessages): Do not print exception cause if present.
	* TestPlocationCommand.java (testPlocationFails()): Mark as
	unresolved, 5345.

2007-11-15  Andrew Cagney  <cagney@redhat.com>

	* TestListCommand.java (testListPC()): Mark as unresolved, 5332.
	(testListFunction()): Mark as unresolved, 5333.

2007-11-14  Andrew Cagney  <cagney@redhat.com>

	* ParameterizedCommand.java (complete(CLI,Input,int,List)): New.
	(completer(CLI,Input,int,List)): New.
	* Input.java (incompleteToken(int)): New.
	(base(int)): Delete.
	(Token.absolute(int)): New.
	(start(int,int)): Delete.
	* CompletionFactory.java: Use Input.incompleteToken(int).
	(completeFocusedExpression): Delete.
	* WhichsetsCommand.java: Ditto.
	* AliasCommands.java: Update.
	* ActionPointCommands.java: Update.
	* AttachCommand.java: Update.
	* CoreCommand.java: Update.
	* DbgVariableCommands.java: Update.
	* DebuginfoCommand.java: Update.
	* DefsetCommand.java: Update.
	* DetachCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DisplayCommand.java: Update.
	* TestParameterizedCommand.java: Ditto.
	* StepNextiCommand.java: Ditto.
	* StepNextCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.
	* StepFinishCommand.java: Ditto.
	* StepCommand.java: Ditto.
	* RegsCommand.java: Ditto.
	* StackCommands.java: Ditto.
	* QuitCommand.java: Ditto.
	* PtypeCommand.java: Ditto.
	* PlocationCommand.java: Ditto.
	* PeekCommand.java: Ditto.
	* LoadCommand.java: Ditto.
	* ListCommand.java: Ditto.
	* HaltCommand.java: Ditto.
	* GoCommand.java: Update.
	* FocusCommand.java: Update.
	* ExamineCommand.java: Update.
	* EvalCommands.java: Update.
	* WhatCommand.java: Ditto.
	* ViewsetCommand.java: Ditto.
	* UndefsetCommand.java: Ditto.

	* TestParameterizedCommand.java (testShortAmbigiousOption()): New.
	(testShortUnambigiousOption()): New.
	* ParameterizedCommand.java: Allow shortened form of options.
	
	* TestCompletionFactory.java: New.
	* Input.java (base(int)): New.
	(cursor(int,int)): New.
	* Command.java (complete(CLI,Input,int,List)): Make abstract.
	* ParameterizedCommand.java (complete(CLI,Input,int,List)): Delete.
	(complete(CLI,PTSet,String,int,List)): Delete.
	* CompletionFactory.java (completeExpression(CLI,Input,int,List)):
	Replace completeExpression(CLI,PTSet,String,int,List).
	(completeFileName(CLI,Input,int,List)): Replace
	completeFileName(CLI,String,int,List); handle multiple arguments.
	* WhichsetsCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* TestParameterizedCommand.java: Update.
	* StepNextiCommand.java: Update.
	* StepNextCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepFinishCommand.java: Update.
	* StepCommand.java: Update.
	* RunCommand.java: Update.
	* StackCommands.java: Update.
	* QuitCommand.java: Update.
	* RegsCommand.java: Update.
	* PtypeCommand.java: Update.
	* PlocationCommand.java: Update.
	* PeekCommand.java: Update.
	* LoadCommand.java: Update.
	* ListCommand.java: Update.
	* HaltCommand.java: Update.
	* GoCommand.java: Update.
	* FocusCommand.java: Update.
	* EvalCommands.java: Update.
	* ExamineCommand.java: Update.
	* DisplayCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DetachCommand.java: Update.
	* CoreCommand.java: Update.
	* DefsetCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* AttachCommand.java: Update.
	* ActionPointCommands.java: Update.
	* BreakpointCommand.java: Update.
	* DbgVariableCommands.java: Update.

2007-11-14  Mark Wielaard  <mwielaard@redhat.com>

	* CLI.java (addMessage): New variant that takes a possible
	exception cause.
	(doAttach): Use new addMessage().
	(execCommand): Likewise.
	(flushMessages): Add possible exception cause if present.
	Actually flush outWriter.
	* EvalCommands.java (eval): Add possible RuntimeException cause.
	* Message.java (Message): Add constructor that takes a possible
	exception cause.
	(getException): New method.
	* PlocationCommand.java (interpret): Add possible RuntimeException
	cause.

2007-11-13  Stan Cox  <scox@redhat.com>

	* ListCommand.java (interpret): Check that symbol is a subprogram.
	Fix reversing.  

2007-11-13  Andrew Cagney  <cagney@redhat.com>

	* Input.java (getAction): Delete.
	* TestInput.java: Update.
	* TestEvalCommands.java: Rename TestPrint.java.
	* AssignCommand.java: Delete.
	* PrintCommand.java: Rename to ...
	* EvalCommands.java: ... this.  Implement "assign" as a class.
	* TopLevelCommand.java: Update.

2007-11-13  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestBreakpoints.java (testHpdBreakMultiThreadedContinue): Marked
	test as unresolved.

2007-11-12  Stan Cox  <scox@redhat.com>

	* ListCommand.java (interpret): Initialize from function PC.
	Right adjust line numbers.   

2007-11-12  Andrew Cagney  <cagney@redhat.com>

	* TestStackCommands.java (testFrame()): New.
	* StackCommands.java (Up): New.
	(Down): New.
	(Frame): New.
	* TopLevelCommand.java: Update.
	* CommandOption.java (Mangitude): Copy to ...
	* Magnitude.java: ... here.  New.
	* ListCommand.java: Update.

	* StackCommands.java: Rename FrameCommands.java.
	* TopLevelCommand.java: Update.
	* TestStackCommands.java: New.
	* TestFrameCommands.java: Delete.
	* TestWhereCommand.java: Delete.

	* HpdTestbed.java (HpdTestbed(String[])): Make private.
	(hpdTerminatingProgram(String)): New.
	* HpdCoreFileTestbed.java: Delete.
	* TestWhereCommand.java (testFhpdVirtualStackTrace()): Use.
	(testFhpdVirtualStackTraceWithScopes()): Ditto.
	
	* TestWhereCommand.java: Update; funit-inlined renamed to
	funit-stack-inlined.

2007-11-09  Andrew Cagney  <cagney@redhat.com>

	* UserHelp.java: Delete.
	* CLI.java (printUsage(String)): Delete.
	(userhelp): Delete.
	(handlers): Delete.
	(addHandler): Delete.
	
	* TestParameterizedCommand.java (testOptionWithDashArg()): New.
	(testUnknownOpt()): New.
	(testTooManyArgs(), testExtraArg(), testMissingOption()): Delete.
	* CommandOption.java (Magnitude): New.
	* ListCommand.java: Extend ParameterizedCommand.

	* ActionPointCommands.java: New.
	* DeleteCommand.java: Delete.
	* EnableCommand.java: Delete.
	* DisableCommand.java: Delete.
	* ActionsCommand.java: Delete.
	* CLI.java: Update.
	* TopLevelCommands.java: Update.
	* TestHelp.java: Update.

	* UndefsetCommand.java: Extend ParameterizedCommand.

	* DbgVariables.java (complete(String,int,List)): New.
	* DbgVariableCommands: New.
	* SetCommand.java: Delete.
	* UnsetCommand.java: Delete.
	* TopLevelCommand.java: Update.
	* CLI.java (dbgvars): Make final; update.

	* TestParameterizedCommand.java (check(...)): Add check for
	input.stringValue().
	* PrintCommand.java: Extend ParameterizedCommand.
	* CommandOption.java (FormatOption): New.

	* MultiLevelCommand.java: Handle null tokens.
	* ParameterizedCommand.java: Ditto.
	
	* Input.java: Eliminate the sentinel.
	(remove(int)): Delete.
	(removeFirst()): New.
	(removeLast()): New.
	(stringValue()): Handle truncated input.
	* ParameterizedCommand.java: Update.
	* TestInput.java (testRemoveLast()): new.

2007-11-09  Sami Wagiaalla  <swagiaal@redhat.com>

	Changed CoreFileAtSignal to return core File instead of core Proc.
	* TestWhereCommand.java: Updated.

2007-11-08  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestWhereCommand.java: Reenabled tests.
	Tests now use HpdCoreFileTestBed.
	* HpdTestbed.java (HpdTestbed): Changed t protected
	from private.
	* HpdCoreFileTestbed.java: New file.

2007-11-08  Andrew Cagney  <cagney@redhat.com>

	* FocusCommand.java: Eliminate call to CLI.printUsage.

	* ViewsetCommand.java: Extend ParameterizedCommand.
	* WhichsetsCommand.java: Eliminate call to CLI.printUsage.

	* PlocationCommand.java: Extend ParameterizedCommand.
	* PtypeCommand.java: Ditto.
	* DefsetCommand.java: Eliminate call to CLI.printUsage.
	* FrameCommands.java: Ditto.
	* SetCommand.java: Ditto.

	* WhereCommand.java: Extend ParameterizedCommand.
	* FrameCommands.java: Ditto.
	
	* CLI.java (doAttach(Task)): Delete.
	(doAttach(Proc)): Replace doAttach(int,Proc,Task).
	* RunCommand.java: Update.
	* AttachCommand.java: Update; extend ParameterizedCommand; delete
	-task option.
	
	* TestAliasCommands.java: New file.

	* AliasCommands.java: New.
	* AliasCommand.java: Delete.
	* UnaliasCommand.java: Delete.
	* ParameterizedCommand.java: Fix off-by-one error.
	* AliasCommand.java: Extend ParameterizedCommand.
	* CLI.java: Update.
	* TopLevelCommand.java: Update.

2007-11-08  Phil Muldoon  <pmuldoon@redhat.com>

	* CoreCommand.java (interpret): Remove try{} for host building.
	Let fhpd error handling print message.

2007-11-08  Andrew Cagney  <cagney@redhat.com>

	* DebuginfoCommand.java: Extend ParameterizedCommand.
	* WhichsetsCommand.java: Ditto.
	* WhatCommand.java: Ditto.
	* StepNextiCommand.java: Ditto.
	* StepNextCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.
	* StepFinishCommand.java: Ditto.
	* BreakpointCommand.java: Ditto.
	* DefsetCommand.java: Ditto.
	* DetachCommand.java: Ditto.
	* DisplayCommand.java: Ditto.
	* FocusCommand.java: Ditto.
	* GoCommand.java: Ditto.
	* HaltCommand.java: Ditto.
	* QuitCommand.java: Ditto.
	* RegsCommand.java: Ditto.
	* SetCommand.java: Ditto.
	* StepCommand.java: Ditto.

	* ParameterizedCommand.java
	(handleOption(Input,String,int,Object)): Fix off-by-one error.
	(HelpException): Delete.
	* TestParameterizedCommand.java (setUp()): Add options.
	(check(String,String[],boolean,String)):  New.
	(checkInvalid(String)): New.
	(testTooManyArgs()): New.
	(testMissingArg()): New.
	(testExtraArg()): New.
	(testMissingOption()): New.

	* CompletionFactory.java (completeFileName(CLI,String,int,List)): New.
	(completeExpression(CLI,PTSet,String,int,List)): New.	
	(completeFileName(CLI,Input,int,List)): Delete.
	* ParameterizedCommand.java (complete(CLI,Input,int,List)): New.
	(complete(CLI,PTSet,String,int,List)): New; abstract.
	* CoreCommand.java (complete(CLI,PTSet,String,int,List)): New.
	* ExamineCommand.java: Ditto.
	* DisassembleCommand.java: Ditto.
	* LoadCommand.java: Ditto.
	* PeekCommand.java: Ditto.
	* TestParameterizedCommand.java: Ditto.

2007-11-08  Phil Muldoon  <pmuldoon@redhat.com>

	* TestCoreCommand.java (testCoreCommand): Append -noexe to
	test.
	* CoreCommand.java (CoreCommand): Use CommandOption.
	Look for -noexe.
	(interpret): Rewrite using workflow.
	(getProc): New.
	(getHost): New.

2007-11-07  Andrew Cagney  <cagney@redhat.com>

	* TestParameterizedCommand.java: New.
	* CommandOption.java: New.
	* ParameterizedCommand.java: New.
	* ExamineCommand.java: Extend ParameterizedCommand.
	* PeekCommand.java: Ditto.
	* CoreCommand.java: Ditto.
	* LoadCommand.java: Ditto.
	* DisassembleCommand.java: Ditto.
	* OptionParser.java: Delete.
	* Command.java (parser): Delete.
	* TestOptionParser.java: Delete.

	* CLI.java (CLI): Do not add HelpCommand using addHandler.
	* MultiLevelCommand.java (lookup(String)): New.
	(help(CLI,Input)): New.
	(interpret(CLI,Input)): Use lookup(String).
	* TopLevelCommand.java (Help): New.
	(TopLevelCommand(DbgVariables)): Use Help to implement "help".
	* Command.java (help(CLI,Input)): New.
	* TestHelp.java: New file.
	* HelpCommand.java: Delete.

2007-11-07  Phil Muldoon  <pmuldoon@redhat.com>

	* CoreCommand.java (interpret): Check for runtime exceptions
	from LinuxHost. Abort on exception, and (nicely) report exception message.

2007-11-06  Phil Muldoon  <pmuldoon@redhat.com>

	* CoreCommand.java (interpret): Rewrite corefile model.
	Give much richer information back on corefile building.

2007-11-01  Andrew Cagney  <cagney@redhat.com>

	* Command.java (complete(CLI,Input,int,List)): Remove comment
	about off-by-one jline workaround.
	* CompletionFactory.java (complete(CLI,Input,int,List)): Update.
	* MultiLevelCommand.java (complete(CLI,Input,int,List)): Update.

	* LoadCommand.java (complete(CLI,Input,int,List)): New.
	* CompletionFactory.java (completeFileName(CLI,Input,int,List)): New.
	
	* MultiLevelCommand.java: Delete stray println calls.
	
2007-11-01  Teresa Thomas  <tthomas@redhat.com>

	* PrintCommand.java (interpret): Include types while 
	printing pointers.
	* TestPrint.java (testAddressOf): Updated.
	
2007-11-01  Andrew Cagney  <cagney@redhat.com>

	* CompletionFactory.java: New.
	* PrintCommand.java (complete(CLI,Input,int,List)): New.
	* Command.java (complete(CLI,Input,int,List)): New.
	* MultiLevelCommand.java (complete(CLI,Input,int,List)): New.
	* CLI.java (complete(CLI,Input,int,List)): Call
	topLevelCommand.complete(CLI,Input,int,List).
	
	* Input.java (tokenize(String)): Add a sentinel token.
	(size()): Adjust.
	(Input(String)): Update.
	(stringValue()): Simplify.
	(stringArrayValue()): Update.
	(accept()): Update.
	* TestInput.java: Update.

	* Input.java (Token.toString()): New.

	* Input.java (stringValue()): New.
	(getFullCommand()): Delete.
	(stringArrayValue()): Rename parameters.
	* PlocationCommand.java: Use.
	* PrintCommand.java: Use.
	* PtypeCommand.java: Use.
	* RunCommand.java: Update.

2007-10-31  Andrew Cagney  <cagney@redhat.com>

	* Input.java (getParameters()): Delete.
	(parameters()): New.
	(remove(int)): New.
	(tokenize(String)): Rewrite.
	(token(int)): New.
	* TestInput.java (testEmpty()): New.
	(testOneToken()): New.
	(testOneSpacedToken()): New.
	(testSeveralTokens()): New.
	(testDoubleQuote()): New.
	(testDoubleQuoteInToken()): New.
	(testEmptyQuote()): New.
	(testEmptyQuoteBetweenParameters()): New.
	(testEscapedQuote()): New.
	(testSetAndParameters()): New.
	(testMissingQuote()): New.
	(testMissingRightBracket()): New.
	(testMissingEscapee()): New.
	* OptionParser.java: Eliminate calls to Input.getParameters().
	* TestOptionParser.java: Ditto.
	* PlocationCommand.java: Ditto.
	* PrintCommand.java: Ditto.
	* PtypeCommand.java: Ditto.

2007-10-29  Andrew Cagney  <cagney@redhat.com>

	* Command.java (interpret(CLI,Input)): Rename parse(CLI,Input).
	* CLI.java: Update.
	* UnaliasCommand.java: Update.
	* WhichsetsCommand.java: Update.
	* WhereCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UnsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* StepNextiCommand.java: Update.
	* StepNextCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepFinishCommand.java: Update.
	* StepCommand.java: Update.
	* SetCommand.java: Update.
	* RunCommand.java: Update.
	* RegsCommand.java: Update.
	* QuitCommand.java: Update.
	* PtypeCommand.java: Update.
	* PrintCommand.java: Update.
	* PlocationCommand.java: Update.
	* PeekCommand.java: Update.
	* MultiLevelCommand.java: Update.
	* LoadCommand.java: Update.
	* ListCommand.java: Update.
	* HelpCommand.java: Update.
	* HaltCommand.java: Update.
	* GoCommand.java: Update.
	* FrameCommands.java: Update.
	* FocusCommand.java: Update.
	* ExamineCommand.java: Update.
	* EnableCommand.java: Update.
	* DisplayCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DisableCommand.java: Update.
	* DetachCommand.java: Update.
	* DeleteCommand.java: Update.
	* DefsetCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* CoreCommand.java: Update.
	* BreakpointCommand.java: Update.
	* AttachCommand.java: Update.
	* AliasCommand.java: Update.
	* ActionsCommand.java: Update.
	
	* CLI.java (execCommand(String)): Use TopLevelCommand.
	(topLevelCommand): New.
	* TopLevelCommand.java: New.
	* MultiLevelCommand.java: New.
	* TestOptionParser.java: Simplify.
	
	* Input.java (accept()): New.
	(Input(String)): Do not accept first token.
	(getParameters()): Return a List.
	(parameter(int)): New.
	(size()): New.
	* TestInput.java: New file.
	* CLI.java: Call Input.accept().
	* QuitCommand.java: Ditto.
	* StepInstructionCommand.java: Update.
	* PrintCommand.java: Update.
	* UndefsetCommand.java: Update.
	* WhatCommand.java: Update.
	* WhereCommand.java: Update.
	* WhichsetsCommand.java: Update.
	* ViewsetCommand.java: Update.
	* StepFinishCommand.java: Update.
	* UnaliasCommand.java: Update.
	* UnsetCommand.java: Update.
	* StepNextiCommand.java: Update.
	* TestOptionParser.java: Update.
	* PlocationCommand.java: Update.
	* AliasCommand.java: Update.
	* StepNextCommand.java: Update.
	* RunCommand.java: Update.
	* RegsCommand.java: Update.
	* StepCommand.java: Update.
	* PeekCommand.java: Update.
	* ActionsCommand.java: Update.
	* SetCommand.java: Update.
	* PtypeCommand.java: Update.
	* AttachCommand.java: Update.
	* BreakpointCommand.java: Update.
	* CoreCommand.java: Update.
	* DefsetCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* DeleteCommand.java: Update.
	* DetachCommand.java: Update.
	* DisableCommand.java: Update.
	* DisassembleCommand.java: Update.
	* EnableCommand.java: Update.
	* DisplayCommand.java: Update.
	* FocusCommand.java: Update.
	* ExamineCommand.java: Update.
	* GoCommand.java: Update.
	* FrameCommands.java: Update.
	* HaltCommand.java: Update.
	* HelpCommand.java: Update.
	* ListCommand.java: Update.
	* LoadCommand.java: Update.

	* OptionParser.java: Rename HpdCommandParser.java; make members
	private; use Iterator, List and LinkedList.
	(setHeader(String)): Delete.
	(setFooter(String)): Delete.
	* TestOptionParser.java: Rename TestHpdCommandParser.java.
	* DisassembleCommand.java: Update.
	(addOptions): Delete.
	* Command.java: Update.
	* CoreCommand.java: Update.
	* ExamineCommand.java: Update.
	* PeekCommand.java: Update.
	* LoadCommand.java: Update.

2007-10-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestWhereCommand.java (testFhpdVirtualStackTrace): Marked as
	unresolved(5156).
	(testFhpdVirtualStackTraceWithScopes): Ditto.

2007-10-26  Andrew Cagney  <cagney@redhat.com>

	* UserHelp.java (addHelp(String,String,String,String)): Delete.
	
	* UserHelp.java (isValidCommand(String)): Delete.
	(commandHelp): Make private.

	* Command.java (parse(CLI,Input)): Do not throw ParseException.
	* InvalidCommandException.java: New.
	* TestPeekCommand.java: Update.
	* WhichsetsCommand.java: Update.
	* WhereCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UnsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* UnaliasCommand.java: Update.
	* TestSetParser.java: Update.
	* TestHpdCommandParser.java: Update.
	* StepNextiCommand.java: Update.
	* StepNextCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepFinishCommand.java: Update.
	* StepCommand.java: Update.
	* SetNotationParser.java: Update.
	* SetCommand.java: Update.
	* RunCommand.java: Update.
	* RegsCommand.java: Update.
	* QuitCommand.java: Update.
	* PtypeCommand.java: Update.
	* PrintCommand.java: Update.
	* PlocationCommand.java: Update.
	* PeekCommand.java: Update.
	* LoadCommand.java: Update.
	* ListCommand.java: Update.
	* Input.java: Update.
	* HelpCommand.java: Update.
	* HaltCommand.java: Update.
	* GoCommand.java: Update.
	* FrameCommands.java: Update.
	* FocusCommand.java: Update.
	* ExamineCommand.java: Update.
	* EnableCommand.java: Update.
	* DisplayCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DisableCommand.java: Update.
	* DetachCommand.java: Update.
	* DeleteCommand.java: Update.
	* DefsetCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* CoreCommand.java: Update.
	* CLI.java: Update.
	* BreakpointCommand.java: Update.
	* AttachCommand.java: Update.
	* AliasCommand.java: Update.
	* ActionsCommand.java: Update.

	* Command.java (cli): Delete.
	(Command(String,CLI,CommandHelp)): Delete.
	(Command(String,String,String,String,String)): Replace
	Command(CLI,String,String,String,String).
	(parse(CLI,Input)): Replace parse(Input).
	(getCLI()): Delete.
	* TestHpdCommandParser.java: Update.
	(setUp(), tearDown()): New.
	* CLI.java: Update.
	* PeekCommand.java: Update.
	* LoadCommand.java: Update.
	* ExamineCommand.java: Update.
	* RegsCommand.java: Update.
	* DisassembleCommand.java: Update.
	* RunCommand.java: Update.
	* DisplayCommand.java: Update.
	* WhichsetsCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UnsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* UnaliasCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepCommand.java: Update.
	* SetCommand.java: Update.
	* QuitCommand.java: Update.
	* PtypeCommand.java: Update.
	* CoreCommand.java: Update.
	* PlocationCommand.java: Update.
	* StepNextiCommand.java: Update.
	* StepNextCommand.java: Update.
	* ListCommand.java: Update.
	* HaltCommand.java: Update.
	* GoCommand.java: Update.
	* FocusCommand.java: Update.
	* StepFinishCommand.java: Update.
	* EnableCommand.java: Update.
	* FrameCommands.java: Update.
	* DetachCommand.java: Update.
	* DeleteCommand.java: Update.
	* DefsetCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* AssignCommand.java: Update.
	* PrintCommand.java: Update.
	* AliasCommand.java: Update.
	* ActionsCommand.java: Update.

2007-10-25  Andrew Cagney  <cagney@redhat.com>

	* Command.java (parse(Input)): Rename, handle(Input).
	* PeekCommand.java: Update.
	* LoadCommand.java: Update.
	* ExamineCommand.java: Update.
	* RegsCommand.java: Update.
	* DisassembleCommand.java: Update.
	* CoreCommand.java: Update.
	* RunCommand.java: Update.
	* DisplayCommand.java: Update.
	* WhichsetsCommand.java: Update.
	* WhereCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UnsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* UnaliasCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepCommand.java: Update.
	* SetCommand.java: Update.
	* QuitCommand.java: Update.
	* PtypeCommand.java: Update.
	* PlocationCommand.java: Update.
	* StepNextiCommand.java: Update.
	* StepNextCommand.java: Update.
	* ListCommand.java: Update.
	* HelpCommand.java: Update.
	* HaltCommand.java: Update.
	* GoCommand.java: Update.
	* FocusCommand.java: Update.
	* StepFinishCommand.java: Update.
	* EnableCommand.java: Update.
	* FrameCommands.java: Update.
	* DisableCommand.java: Update.
	* DetachCommand.java: Update.
	* DeleteCommand.java: Update.
	* DefsetCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* BreakpointCommand.java: Update.
	* PrintCommand.java: Update.
	* AttachCommand.java: Update.
	* AliasCommand.java: Update.
	* ActionsCommand.java: Update.

	* CommandHandler.java: Delete.
	* Command.java: Rename CLIHandler.java; do not extend
	CommandHandler.
	* ActionsCommand.java: Update.
	* AliasCommand.java: Update.
	* AttachCommand.java: Update.
	* BreakpointCommand.java: Update.
	* CLI.java: Update.
	* CoreCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* DefsetCommand.java: Update.
	* DeleteCommand.java: Update.
	* DetachCommand.java: Update.
	* DetachCommand.java: Update.
	* DisableCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DisplayCommand.java: Update.
	* EnableCommand.java: Update.
	* ExamineCommand.java: Update.
	* FocusCommand.java: Update.
	* FrameCommands.java: Update.
	* GoCommand.java: Update.
	* HaltCommand.java: Update.
	* HelpCommand.java: Update.
	* ListCommand.java: Update.
	* LoadCommand.java: Update.
	* PeekCommand.java: Update.
	* PlocationCommand.java: Update.
	* PrintCommand.java: Update.
	* PtypeCommand.java: Update.
	* QuitCommand.java: Update.
	* RegsCommand.java: Update.
	* RunCommand.java: Update.
	* SetCommand.java: Update.
	* StepCommand.java: Update.
	* StepFinishCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepNextCommand.java: Update.
	* StepNextiCommand.java: Update.
	* TestHpdCommandParser.java: Update.
	* UnaliasCommand.java: Update.
	* UndefsetCommand.java: Update.
	* UnsetCommand.java: Update.
	* ViewsetCommand.java: Update.
	* WhatCommand.java: Update.
	* WhereCommand.java: Update.
	* WhichsetsCommand.java: Update.

	* Input.java: Rename Command.java.
	* CommandHandler.java: Update.
	* CLIHandler.java: Update.
	* CLI.java: Update.
	* ActionsCommand.java: Update.
	* BreakpointCommand.java: Update.
	* AttachCommand.java: Update.
	* PrintCommand.java: Update.
	* AliasCommand.java: Update.
	* DisplayCommand.java: Update.
	* DisassembleCommand.java: Update.
	* DisableCommand.java: Update.
	* DetachCommand.java: Update.
	* DeleteCommand.java: Update.
	* DefsetCommand.java: Update.
	* CoreCommand.java: Update.
	* DebuginfoCommand.java: Update.
	* WhichsetsCommand.java: Update.
	* WhereCommand.java: Update.
	* WhatCommand.java: Update.
	* ViewsetCommand.java: Update.
	* UndefsetCommand.java: Update.
	* UnsetCommand.java: Update.
	* UnaliasCommand.java: Update.
	* TestHpdCommandParser.java: Update.
	* StepNextiCommand.java: Update.
	* StepNextCommand.java: Update.
	* StepFinishCommand.java: Update.
	* StepInstructionCommand.java: Update.
	* StepCommand.java: Update.
	* SetCommand.java: Update.
	* RunCommand.java: Update.
	* RegsCommand.java: Update.
	* PtypeCommand.java: Update.
	* QuitCommand.java: Update.
	* PeekCommand.java: Update.
	* PlocationCommand.java: Update.
	* LoadCommand.java: Update.
	* ListCommand.java: Update.
	* HaltCommand.java: Update.
	* HelpCommand.java: Update.
	* GoCommand.java: Update.
	* FocusCommand.java: Update.
	* FrameCommands.java: Update.Update.

2007-10-23  Phil Muldoon  <pmuldoon@redhat.com>

	* CoreCommand.java (CoreCommand): Generate
	stack info for all threads up front.

2007-10-20  Andrew Cagney  <cagney@redhat.com>

	* CLI.java (handlers): Change to a SortedMap; make private.
	* FocusCommand.java: Update.
	
	* CLI.java (TaskInfo): Delete stackLevel.
	(getTaskStackLevel(Task)): Delete.
	(setTaskStackLevel(Task,int)): Delete.
	* FrameCommands.java: Update.
	* WhereCommand.java: Update.

2007-10-19  Andrew Cagney  <cagney@redhat.com>

	* TestWhereCommand.java (testFhpdVirtualStackTrace()): Check for
	decimal stack levels.
	(testFhpdVirtualStackTraceWithScopes()): Check in stages.

	* TestWhereCommand.java (testFhpdVirtualStackTrace()): Check for
	"inline".

2007-10-18  Rick Moseley  <rmoseley@redhat.com>

	* LoadCommand.java: Add loop to add DebugInfoFrame stuff.
	* PeekCommand.java: Remove debug stuff and correct comments.

2007-10-17  Andrew Cagney  <cagney@redhat.com>

	* AttachCommand.java: Update; use frysk.proc.FindProc.
	* TestLib.java: Ditto.

2007-10-15  Andrew Cagney  <cagney@redhat.com>

	* TestStackCommands.java: Split into ...
	* TestFrameCommands.java: New, from TestStackCommands.java.
	* TestWhereCommand.java: New, from TestStackCommands.java.
	* FrameCommands.java: Rename UpDownCommand.java.
	* CLI.java: Update.

	* TestDisplayCommand.java: Remove unused import of Config.
	
	* HpdTestbed.java (attachXXX(String)): New.
	(run(String)): New.
	(HpdTestbed(ProcessIdentifier)): Delete.
	(HpdTestbed(File)): Delete.
	* TestBreakpoints.java: Use.
	* TestDisassemblerCommand.java: Ditto.
	* TestPlocationCommand.java: Ditto.
	* TestExamineCommand.java: Ditto.
	* TestFhpdStepping.java: Ditto.
	* TestDisplayCommand.java: Ditto.

	* TestBreakpoints.java: Do not pass -cli to attach.
	* AttachCommand.java: Delete undocumented -cli option.

2007-10-14  Andrew Cagney  <cagney@redhat.com>

	* TestPrint.java (testRegister()): New.

2007-10-12  Andrew Cagney  <cagney@redhat.com>

	* CLI.java: Do not catch, throw, or ignore NameNotFoundException.
	* BreakpointCommand.java: Ditto.
	* ListCommand.java: Ditto.
	* ExamineCommand.java: Ditto.
	* DisassembleCommand.java: Ditto.
	* PlocationCommand.java: Ditto.
	* PrintCommand.java: Ditto.
	* PtypeCommand.java: Ditto.
	* WhatCommand.java: Ditto.

2007-10-11  Andrew Cagney  <cagney@redhat.com>

	* TestBreakpoints.java: Mark as unresolved; 5165.

2007-10-10  Rick Moseley  <rmoseley@redhat.com>

	* LoadCommand.java: Setup a Proc from new method in frysk.Util.

2007-10-10  Teresa Thomas  <tthomas@redhat.com>

	* TestPrint.java (testAddressOf): New.
	(testDereference): New.

2007-10-09  Mark Wielaard  <mwielaard@redhat.com>

	* TestBreakpoints.java (testHpdBreakMultiThreadedContinue): Don't
	mark unresolved bug #5082. Expect Task terminating messages.

2007-10-08  Rick Moseley  <rmoseley@redhat.com>

	* CLI.java: Add peek command.
	* PeekCommand.java: New.
	* LoadCommand.java: Attempt to wire in "load" command.
	* TestPeekCommand.java: New.

2007-10-04  Sami Wagiaalla  <swagiaal@redhat.com>

	Use DeamonBlockedAtSignal instead of StoppedTestTaskFactory.
	* TestStackCommands.java: Updated.

2007-10-02  Andrew Cagney  <cagney@redhat.com>

	* RegsCommand.java: Update; use frysk.isa.ISA.
	* TestRegs.java: Ditto.

2007-10-01  Andrew Cagney  <cagney@redhat.com>

	* RegsCommand.java: Update; use RegisterGroup.getRegisters().

2007-10-01  Tim Moore  <timoore@redhat.com>

	* TestBreakpoints.java (testHpdBreakMultiThreadedContinue): New
	test; see bug 5082.

2007-09-28  Rick Moseley  <rmoseley@redhat.com>

	* CLI.java: Add code for the "load" command.
	* LoadCommand.java: New for "load" command.
	* TestLoadCommand.java: New; test for LoadCommand.

2007-09-28  Tim Moore  <timoore@redhat.com>

	* TestBreakpoints.java (testHpdBreakMultiThreaded): New test.

2007-09-27  Andrew Cagney  <cagney@redhat.com>

	* RegsCommand.java: Replace frysk.isa.RegisterGroupFactory with
	frysk.isa.RegistersFactory.

2007-09-27  Teresa Thomas  <tthomas@redhat.com>

	* PtypeCommand.java: Comments updated.

2007-09-27  Andrew Cagney  <cagney@redhat.com>

	Move frysk.stack.Register to frysk.isa.Register.
	* RegsCommand.java: Update.

2007-09-26  Andrew Cagney  <cagney@redhat.com>

	* HpdTestbed.java (HpdTestbed): Add to TearDownProcess.

2007-09-26  Teresa Thomas  <tthomas@redhat.com>

	* TestPlocationCommand.java: New file.
	* PlocationCommand.java: New file.
	* CLI.java (CLI): PlocationCommand added.
	
	* TestPtypeCommand.java (testPtype): Renamed.
	(testPtypeFails): Renamed.

2007-09-25  Stan Cox  <scox@redhat.com>

	* PrintCommand.java (handle): Add -dump-tree option.
	* CLI.java (parseValue): Add dumpTree parameter.

2007-09-25  Teresa Thomas  <tthomas@redhat.com>

	* PtypeCommand.java: New file.
	* TestPtypeCommand.java: New file.
	* CLI.java (CLI): PtypeCommand added.

2007-09-11  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestRegs.java (testRegsCommand): Added e.close().
	(testRegsBlah): Ditto.
	fixes widget process problem.

2007-09-07  Tim Moore  <timoore@redhat.com>

	Fix for 4949 and 4950.
	* BreakpointCommand.java (CLIBreakpointObserver,
	CLIBreakpointObserver.updateHit): Don't need cli or cli.running;
	variable has gone away. Make class and updateHit() abstract.
	(handle): Output "breakpoint hit" messages from the execute()
	method of an Event in order to allow all actions to run before the
	user (or tester!) is notified.
	* CLI.java (running, isRunning): Remove; has been vestigial for
	some time.
	* TestBreakpoints.java (testHpdBreakpointInline, 
	testHpdBreakpointLibrary): Remove unresolved(), expect inlined
	function to be in the backtrace.

	* QuitCommand.java (KillRequest): event.Request class to kill
	processes in event loop to avoid stomping on in-progress
	operations.
	(QuitCommand): Initialize kill request.
	(handle): use kill request.
	* TestBreakpoints (testHpdBreakpointRunProcess): Remove
	unresolved 4914. Fix bug in test: the run command wasn't actually sent
	to fhpd.

2007-09-06  Andrew Cagney  <cagney@redhat.com>

	* TestHpdCommandParser.java (setUp, tearDown): Delete.
	* TestLib.java: Extend frysk.testbed.TestLib.
	* HpdTestbed.java: Add to TearDownExpect.

2007-09-06  Phil Muldoon  <pmuldoon@redhat.com>

	* FocusCommand.java (handle): Build debug, stack-trace and frame
	info for newly focused set.
	
	* CoreCommand.java (handle): Add coreProc to idManager.

	* CoreComamnd. java (handle): Simplify. Let manageProc build
	set. Do not use StaticPTSet. Find main task, and generate
	stack-trace.

2007-09-06  Andrew Cagney  <cagney@redhat.com>

	* TestPrint.java (testHpdClass): Delete.
	(testHpdStruct): Delete.
	(testHpdArray): Delete.
	(testHpdEnum): Delete.
	(testHpdScalar): Delete.

2007-09-06  Tim Moore  <timoore@redhat.com>
	
	* CLI.java (startAttach, finishAttach): Remove. replace with:
	(doAttach): New method that attaches process and waits until it is
	attached, as signalled by the SteppingEngine.
	(update): Signal that process is attached via a CountDownLatch
	instead of notifying threads waiting on the CLI object.
	* AttachCommand.java (update): Remove.
	(handle): Don't register object as a SteppingEngine
	observer. Instead, use cli.doAttach to perform the attach and wait
	for its completion.
	* RunCommand.java (update, handle): ditto.

	* CLI.java: Java reformatting.

2007-09-04  Andrew Cagney  <cagney@redhat.com>

	* HpdTestbed.java (HpdTestbed(int)): New.
	* RegsCommand.java: Print the valid register groups.
	* TestRegs (testRegsBlah()): New.

	* FormatOption.java: New file.
	* PrintCommand.java: Recognize "t" as binary.
	* HpdTestbed.java (sendCommandExpectPrompt): Rename
	sendExpectPrompt.
	* TestPrint.java (testFormatInteger()): New.
	(testFormatInteger_d()): New.
	(testFormatInteger_t()): New.
	(testFormatInteger_o()): New.
	(testFormatInteger_x()): New.
	(testFormatUnknown()): New.

	* TestLib.java (e): Change type to HpdTestbed.
	* HpdTestbed.java: New file.
	* TestPrint.java: Use.
	* TestBreakpoints.java: Use.
	* TestCoreCommand.java: Use.
	* TestDisassemblerCommand.java: Use.
	* TestExamineCommand.java: Use.
	* TestDisplayCommand.java: Use.
	* TestFhpdStepping.java: Use.
	* TestRegs.java: Use.
	* TestStackCommands.java: Use.

	* RegsCommand.java: Print the registers both native and in HEX.
	* TestRegs.java: Check that the first register has two values.

2007-09-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* WhereCommand.java (WhereCommand): Corrected help statements.

2007-09-04  Sami Wagiaalla  <swagiaal@redhat.com>

	* WhereCommand.java: Removed print statements.

2007-09-04  Tim Moore  <timoore@redhat.com>

	* AttachCommand.java (update): New SteppingEngine observer method.
	(handle): Synchronize with stepping engine observer to know when
	process is attached; wait until then to register with breakpoint
	manager and ID manager.

2007-09-03  Tim Moore  <timoore@redhat.com>

	Fix for bug 4914
	* CLI.java (startAttach): Don't initialize steppingEngine and
	stepping observer.
	(CLI): New constructor that takes steppingEngine argument, and a
	default version that initializes the steppingEngine.
	* RunCommand.java (updateAttach): Add this object as a stepping
	observer before calling cli.startAttach() (which registers the
	task with the SteppingEngine).
	(update, handle): Synchronize to block until the SteppingEngine
	reports that the task is attached.

	* CLI.java (startAttach, finishAttach, CLI constructor): Java
	formatting.

2007-08-31  Andrew Cagney  <cagney@redhat.com>
	
	* TestStackCommands.java (testFhpdVirtualStackTraceWithScopes):
	Mark as unresolved, bug 4985.

2007-08-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestStackCommands.java (testFhpdVirtualStackTraceWithScopes): 
	New test.
	* WhereCommand.java (handle): Added handling for -scopes.

2007-08-29  Adam Jocksch  <ajocksch@redhat.com>

	* DisplayCommand.java (handle): Now uses Value.toPrint().
	* TestDisplayCommand.java (testHpdDisplayCommands): Now uses
	funit-rt-varchange instead of hpd-c, marked unresolved 4941.

2007-08-29  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestStackCommands.java (testFhpdVirtualStackTrace): Now checks
	VirtualFrame (x.1,x.2...) numbering.

2007-08-29  Tim Moore  <timoore@redhat.com>

	* AllPTSet.java (AllPTSet constructor): take CLI argument
	(getSubsetByState): Implement
	* CLI.java (CLI constructor): Pass this to AllPTSet constructor.
	* PrintCommand.java (handle): Skip p/t set specification if any.
	* TaskData.java (toPrint): New method.
	* ViewsetCommand.java (handle): Parse any p/t set specification,
	not just named sets.
	* WhereCommand (handle): Don't print set if there's only one
	task. Don't get traceback info from tasks that aren't stopped.

2007-08-27  Stan Cox  <scox@redhat.com>

	* TestPrint.java (testHpdScalar): Use funit-scalar.
	(testHpdEnum): Use funit-enum.
	(testHpdArray): Use funit-array.
	(testHpdStruct): Use funit-struct.
	(testHpdClass): New.

2007-08-27  Andrew Cagney  <cagney@redhat.com>

	* TestPrint.java: Delete string test; handled by
	frysk.value.TestArray.testString.

2007-08-27  Tim Moore  <timoore@redhat.com>

	* ViewsetCommand.java (handle): Add pid and tid command output.

	* AllPTSet.java (getTaskData): Remove debugging cruft.
	* ViewsetCommand.java (handle): Fix various mistakes in the set
	listing.

2007-08-24  Phil Muldoon  <pmuldoon@redhat.com>

	* CoreCommand.java (handle): Build multi-threaded set.

2007-08-24  Andrew Cagney  <cagney@redhat.com>

	* DisassembleCommand.java: Replace Value.getLong with
	Value.asLong.

2007-08-23  Andrew Cagney  <cagney@redhat.com>

	* ExamineCommand.java: Replace Location.getByteBuffer() with
	Location.toByteArray().

2007-08-23  Mike Cvet  <mcvet@redhat.com>
	
	* CLI.java (SteppingObserver.update): Notify monitor and blank
	message after printing.

2007-08-22  Andrew Cagney  <cagney@redhat.com>

	* TestDisplayCommand.java (testHpdDisplayCommands): Mark as
	unresolved, bug 4951.
	* TestBreakpoints.java (testHpdBreakpointLibrary): Mark as
	unresolved, bug 4950.
	(testHpdBreakpointInline): Mark as unresolved, bug 4950.
	
	* CLI.java: Use DebugInfoStackFactory.createVirtualStackTrace.
	* CoreCommand.java: Ditto.
	* TestStackCommands.java (testFhpdVirtualStackTrace): Remove
	unresolved 4947.

2007-08-21  Andrew Cagney  <cagney@redhat.com>

	* TestStackCommands.java (testFhpdVirtualStackTrace): Moved to
	here from frysk.bindir.TestFhd.  Disable for now.  Bug 4947.

2007-08-21  Stan Cox  <scox@redhat.com>

	* PrintCommand.java (handle): Don't addMessage for NameNotFoundException.

2007-08-21  Sami Wagiaalla  <swagiaal@redhat.com>

	* WhereCommand.java (handle): Now uses DebugInfoStackFactory
	for printing.

2007-08-21  Sami Wagiaalla  <swagiaal@redhat.com>

	* WhereCommand.java (handle): Now prints richer function names,
	parameters, and full path to source file, all retrieved from
	debug infomation.

2007-08-20  Andrew Cagney  <cagney@redhat.com>

	* TestPrint.java (testHpdEnum): Fix test; ssportscar contains
	"bmw".

2007-08-16  Andrew Cagney  <cagney@redhat.com>

	* TestDisassemblerCommand.java: Check for disassembler and report
	unsupported.

2007-08-16  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (SteppingObserver.update): Check to see if the task is still
	alive before continuing - if not, print exit message.

2007-08-15  Nurdin Premji  <npremji@redhat.com>

	* CLIHandler.java: Removed unused constructor
	* ActionsCommand.java: Sun formatted.
	* AliasCommand.java: Ditto.
	* AttachCommand.java: Ditto.
	* BreakpointCommand.java: Ditto.
	* DynamicPTSet.java: Ditto.
	* UserHelp.java: Ditto.
	* CoreCommand.java: Ditto.
	* DebuginfoCommand.java: Ditto.
	* DefsetCommand.java: Ditto.
	* DeleteCommand.java: Ditto.
	* DetachCommand.java: Ditto.
	* DisableCommand.java: Ditto.
	* DisassembleCommand.java: Ditto.
	* DisplayCommand.java: Ditto.
	* EnableCommand.java: Ditto.
	* ExamineCommand.java: Ditto.
	* FocusCommand.java: Ditto.
	* GoCommand.java: Ditto.
	* HaltCommand.java: Ditto.
	* HelpCommand.java: Ditto.
	* QuitCommand.java: Ditto.
	* RegsCommand.java: Ditto.
	* RunCommand.java: Ditto.
	* SetCommand.java: Ditto.
	* StepCommand.java: Ditto.
	* StepFinishCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.
	* UnaliasCommand.java: Ditto.
	* UndefsetCommand.java: Ditto.
	* UnsetCommand.java: Ditto.
	* UpDownCommand.java: Ditto.
	* ViewsetCommand.java: Ditto.
	* WhatCommand.java: Ditto.
	* WhereCommand.java: Ditto.
	* WhichsetsCommand.java: Ditto.

	* CLI.java (UpDownHandler): Moved from here ...
	* UpDownCommand.java: ... to here. Sun formatted.

2007-08-15  Mike Cvet  <mcvet@redhat.com>

	* StepFinishCommand.java (StepFinishCommand): Added help messages.
	* StepNextiCommand.java (StepNextiCommand): Ditto.
	* StepNextCommand.java (StepNextCommand): Ditto.

2007-08-15  Nurdin Premji  <npremji@redhat.com>

	* CLI.java (CLI): Remove last references to addHandler().
	Updated QuitCommand.
	(UpDownHandler): Extend CLIHandler.
	* QuitCommand.java (QuitCommand): Take a name, so "exit" can use the 
	same handler.
	* UserHelp.java: Removed last help messages.

2007-08-14  Nurdin Premji  <npremji@redhat.com>

	* StepFinishCommand.java: Extend CLIHandler.
	* StepNextCommand.java: Ditto.
	* StepNextiCommand.java: Ditto.
	* CLI.java: Remove calls to addHandler() for above.

	* AssignCommand.java: New.
	* CLIHandler.java (CLIHandler): Add call to cli.addHandler()
	* CoreCommand.java (CoreCommand): Remove call to cli.addHandler().
	* ActionsCommand.java (ActionsCommand): Ditto.
	* TestHpdCommandParser.java (setup): Ditto.
	* DisassembleCommand.java (DisassembleCommand): Ditto.
	* ExamineCommand.java (ExamineCommand): Ditto.
	* RegsCommand.java (RegsCommand): Ditto.
	* RunCommand.java (RunCommand): Ditto.
	* AliasCommand.java (AliasCommand): Ditto.	
	* DisplayCommand.java (DisplayCommand):Ditto.
	* DefsetCommand.java (DefsetCommand): Extend CLIHandler.
	* UnsetCommand.java (UnsetCommand): Ditto.
	* SetCommand.java (SetCommand): Ditto.
	* StepInstructionCommand.java (StepInstructionCommand): Ditto.
	* HelpCommand.java (HelpCommand): Ditto.
	* ListCommand.java (ListCommand): Ditto.
	* WhereCommand.java (WhereCommand): Ditto.
	* UndefsetCommand.java (UndefsetCommand): Ditto.
	* UnaliasCommand.java (UnaliasCommand): Ditto.
	* HaltCommand.java (HaltCommand): Ditto.
	* PrintCommand.java (PrintCommand): Ditto.
	* DetachCommand.java (DetachCommand): Ditto.
	* FocusCommand.java (FocusCommand): Ditto.
	* GoCommand.java (GoCommand): Ditto.
	* QuitCommand.java (QuitCommand): Ditto.
	* BreakpointCommand.java (BreakpointCommand): Ditto.
	* ViewsetCommand.java (ViewsetCommand): Ditto.
	* WhichsetsCommand.java (WhichsetsCommand): Ditto.
	* WhatCommand.java (WhatCommand): Ditto.
	* StepCommand.java (StepCommand): Ditto.
	* DebuginfoCommand.java (DebuginfoCommand): Ditto.
	* UserHelp.java	(UserHelp): Remove help messages for above classes.
	* CLI.java (CLI): Remove calls to addHandler() for above.

	* ActionsCommand.java (ActionsCommand): Call cli.addHandler().
	* CoreCommand.java (CoreCommand): Ditto.
	* DisassembleCommand.java (DisassembleCommand): Ditto.
	* DisplayCommand.java (DisplayCommand): Ditto.
	* ExamineCommand.java (ExamineCommand): Ditto.
	* RegsCommand.java (RegsCommand): Ditto.
	* RunCommand.java (RunCommand): Ditto.
	* AliasCommand.java (AliasCommand): Extend CLIHandler.
	* AttachCommand.java (AttachCommand): Ditto.
	* UserHelp.java (UserHelp): Remove alias and attach commands.
	* CLI.java (CLI): Update, no need to call addHandler for above classes.

2007-08-14  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (CLI): Enabled next, nexti, and finish commands.

2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* TestStackCommands.java: Move test of <<print 2+2>> from here...
	* TestPrint.java (testUnattached): ... to here.
	* PrintCommand.java (handle): Simplify; always call Value.toPrint.

2007-08-13  Mike Cvet  <mcvet@redhat.com>

	* TestFhpdStepping.java: Added. Fixes #4908.
	* StepFinishCommand.java: Ditto.
	* StepNextCommand.java: Ditto.
	* StepNextiCommand.java: Ditto.
	* StepCommand.java: Fixed hex conversion bug.
	* StepInstructionCommand.java: Ditto.
	* CLI.java (CLI): Added commented-out commands for above Commands. Pending 
	resolution of #4914.

2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* DisplayCommand.java: Replace Value.getTextFIXME with
	DisplayValue.getName.
	
	* DisplayCommand.java: Replace Value.getText with
	Value.getTextFIXME.

2007-08-10  Mike Cvet  <mcvet@redhat.com>

	* TestBreakpoints.java (testHpdBreakpointRunProcess): Added. Marked
	unresolved via #4914.

2007-08-10  Stan Cox  <scox@redhat.com>

	* PrintCommand.java (getFormat): New.
	(handle): Use Format to make formatting choice.

2007-08-09  Phil Muldoon  <pmuldoon@redhat.com>

	* StaticPTSet.java (getTasks): Return correct
	ArrayList Iterator.

2007-08-09  Andrew Cagney  <cagney@redhat.com>

	* TestCoreCommand.java: Replace "funit-child" with
	SlaveOffspring.getExecutable.
	
	* TestCoreCommand.java: Replace AckDaemonProcess with
	SlaveOffspring.createDaemon.

2007-08-09  Tim Moore  <timoore@redhat.com>

	* CLI.java (proc, task, debugInfo, stackLevel): Remove.
	(startAttach, finishAttach): Don't initialize those variables
	anymore. 
	(UpDownHandler.handle): Use getTaskStackLevel, setTaskStackLevel
	methods instead of stackLevel variable.
	(parseValue): Remove version without task argument.
	(SteppingObserver.update): Change newFrame variable to frame.
	(getTask, getDebugInfo): Remove methods.
	* DebuginfoCommand.java (handle): Load DebugInfo for all tasks in
	target ptset.
	* AttachCommand.java (handle): Don't set cli proc and task
	variables.
	* CoreCommand (handle): Use per-task interface to set task
	attributes instead of the CLI slots.
	* GoCommand.java (handle): Don't set cli.running.
	* HaltCommand.java (handle): ditto

	* WhatCommand (handle): Do check for each task in target pset.

	* ExamineCommand (handle): Apply command to each task in the target
	pset.
	* PrintCommand (handle): ditto

	* DisplayCommand.java (handle): Do display for each task in target
	set.
	* ListCommand.java (handle): List each task in target set.
	* WhereCommand.java (handle): Show backtrace of each task in
	target set.

	* DisassembleCommand.java (handle): Act on all tasks in the target
	set.
	(printInstructions, SymbolPrinter): Add a task parameter.
	(SymbolPrinter.toPrint): Use it.
	* RegsCommand.java (handle): Print out the registers of all the
	tasks in the target set.

	* DetachCommand.java (handle): Act on all processes in the target
	set.
	* StepCommand.java (handle): Step all tasks in the target set.
	* StepInstructionCommand.java (handle): ditto
	* ViewsetCommand.java (handle): Print a message if the target set
	is empty.

	* CLI.java (TaskInfo, getTaskFrame, setTaskFrame,
	getTaskDebugInfo, setTaskDebugInfo, getTaskStackLevel, 
	setTaskStackLevel): New interface for tracking values that were
	global across a single task in the CLI.
	(complete): Complete across all tasks in the target set.
	(UpDownHandler.handle): Set the frame in all tasks in the target
	set. Set cli.frame and cli.stackLevel for now.
	(parseValue): Add a version that takes a task argument
	(update): Set frame and debugInfo using per-task interface.
	* BreakpointCommand.java (handle): Set breakpoints in all the
	tasks of the target ptset of command.
	* DeleteCommand (handle): ditto
	* DisableCommand (handle): ditto
	* EnableCommand (handle): ditto
	* GoCommand.java (handle): ditto
	* HaltCommand.java (handle): ditto

	* BreakpointCommand.java: Indentation fixups for Java standard and
	remove tabs.

	* AttachCommand.java (handle): Register process with
	ProcTaskIDManager.
	* CLI.java (attached): Change to integer (PID) type.
	(startAttached): Initialize attached to -1.
	(finishAttached): Wait for attached to go positive.
	(update): Set attached based on the process we get here.
	* CoreCommand.java (handle): Set attached to -1.
	* Detach.java (handle): Set attached to -1.
	* RunCommand.java (update): Don't return early if the task is
	stopped, because that's the state the task is actually in after
	being started. Register process with ProcTaskIDManager.

	* CLI.java (procSearchFinished): Remove unused variable.

	* AllPTSet.java: Complete rewrite to reference active Procs and
	Tasks via the ProcTaskIDManager.
	* CLI.java (idManager): New variable, reference to
	ProcTaskIDManager.
	(startAttach): Only initialize steppingEngine once.
	(CLI): Initialize idManager.
	(getCommandPTSet): New method.
	* TestSetCreation.java: Remove file because AllPTSet doesn't
	support creation of random proc/task numbers anymore. 
	

	* AttachCommand.java (FindProc): New local class for FindProc results.
	(handle): Use FindProc class in call to
	Manager.host.requestFindProc() and synchronize on that object, not
	the CLI object.

2007-08-07  Teresa Thomas  <tthomas@redhat.com>

	* UserHelp.java (UserHelp): User help added for 'debuginfo'.
	* CLI.java (CLI): Command 'debuginfo' added.
	* DebuginfoCommand.java (handle): Added.

2007-08-06  Stan Cox  <scox@redhat.com>
	
	* PrintCommand.java (handle): Handle ValueUavailableException and
	VariableOptimizedOutException.
	* X8664Registers.java: X8664 registers are baseTypeLong.	

2007-08-02  Andrew Cagney  <cagney@redhat.com>

	* TestExamineCommand.java: New file.
	* ExamineCommand.java: New file.
	* CLI.java: Add ExamineCommand.

	* PrintCommand.java: Use frysk.value.Format; but minimally.

2007-08-02  Nurdin Premji  <npremji@redhat.com>

	* DisassembleCommand.java (handle): Change to not truncate range of 
	addresses. Fixes bug 4880.
	* TestDisassemblerCommand.java (testDisassembleRange): Added, tests 4880.

2007-08-01  Nurdin Premji  <npremji@redhat.com>

	* TestCoreCommand.java (testCoreExeCommand): Added.
	* DisassembleCommand.java: Made options more neutral.
	
	* DisassembleCommand.java (DisassembleCommand): Fix up syntax string,
	options go at end.
	* CoreCommand.java (handle): Handle "core corefile exefile" case.

2007-07-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* WhereCommand.java: Replaced Frame with DebugInfoFrame.
	* WhatCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.
	* StepCommand.java: Ditto.
	* ListCommand.java: Ditto.
	* CoreCommand.java: Ditto.
	* CLI.java: Ditto.

2007-07-31  Nurdin Premji  <npremji@redhat.com>

	* CLIHandler.java (CLIHandler): Reflect change to HpdCommandParser.
	Add a newline character to the end of the parser help function.
	* HpdCommandParser.java (HpdCommandParser): Added output PrintStream parameter.
	(parse): Reset help tag.
	* TestHpdCommandParser.java (testHelp): Added.

	* TestHpdCommandParser.java: Added.
	* HpdCommandParser.java: Added.
	* DisassembleCommand.java: Use HpdCommandParser.
	* CLIHandler.java: Added an HpdCommandParser.

2007-07-30  Nurdin Premji  <npremji@redhat.com>

	* TestLib.java (getChild): Added.
	* TestRegs.java (testRegsCommand): Use getChild to find the isa.
	
	* RegsCommand.java: Added.
	* TestRegs.java: Added.
	* CLI.java (CLI): Added regs command.

2007-07-28  Andrew Cagney  <cagney@redhat.com>

	* TestBreakpoints.java: Use Config.getPkgLibFile.
	* TestDisassemblerCommand.java: Ditto.
	* TestDisplayCommand.java: Ditto.
	* TestPrint.java: Ditto.
	* TestStackCommands.java: Ditto.

	* TestBreakpoints.java: Use Config.getBinFile.
	* TestCoreCommand.java: Ditto.
	* TestDisassemblerCommand.java: Ditto.
	* TestDisplayCommand.java: Ditto.
	* TestPrint.java: Ditto.
	* TestStackCommands.java: Ditto.

	* TestCoreCommand.java: Use Config.getPkgDataFile.

2007-07-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* CLI.java (UpDownHandler.handle): Now passes a printSourceLibrary boolean
	to Frame.toPrint().
	* WhereCommand.java (handle): Ditto.

2007-07-27  Nurdin Premji  <npremji@redhat.com>

	* DisassembleCommand.java (InstructionParamsPrinter.toPrint): Only print
	the instruction portion of the instruction, not the address.

2007-07-27  Mike Cvet  <mcvet@redhat.com>

	* CLI.java: Updated to reference SteppingEngine in frysk.stepping.
	* DisplayCommand.java: Ditto.
	* RunCommand.java: Ditto.

2007-07-26  Nurdin Premji  <npremji@redhat.com>

	* DisassembleCommand.java (InstructionPrinter.toPrint): Removed r
	edundant public warning.

	* DisassembleCommand.java (printInstructions): Added support for printing
	the symbol name, used a decorator pattern so if symbol isn't printed,
	SymbolFactory isn't called.
	Added option to disable truncating.

2007-07-25  Nurdin Premji  <npremji@redhat.com>

	* DisassembleCommand.java (handle): Use SymbolFactory to get the proper
	symbol for explicit address.
	(printInstructions): Print a header for disassembling "Address\tInstructions"
	Print hex value of instruction when -i is passed.
	
	* CoreCommand.java (handle): Initialize frame.

2007-07-24  Andrew Cagney  <cagney@redhat.com>

	* TestPrint.java: New file.
	* TestBreakpoints.java: New file.
	* TestStackCommands.java: New file.
	* TestCoreCommand.java: New file.
	* TestDisplayCommand.java: New file.
	* TestDisassemblerCommand.java: New file.
	* TestLib.java: New file.

	Move package frysk.cli.hpd to frysk.hpd.

2007-07-24  Stan Cox  <scox@redhat.com>

	* Preprocessor.java (stripComment): Verify that line starts with #.
	* BreakpointCommand.java (handle): Change break trigger to #.

2007-07-24  Andrew Cagney  <cagney@redhat.com>

	* DisassembleCommand.java: Update; frysk.rt.Symbol moved to
	frysk.symtab.Symbol.

2007-07-23  Stan Cox  <scox@redhat.com>

	* ListCommand.java (handle): Use pc if no options given.

2007-07-23  Nurdin Premji  <npremji@redhat.com>

	* DisassembleCommand.java: Removed DisassembleSymbol class.
	 (handle): Use frame.getSymbol()

2007-07-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* CLI.java: Passed printWriter as a direct argument to Frame.
	* WhereCommand.java: Ditto.

2007-07-20  Nurdin Premji  <npremji@redhat.com>

	* CLIHandler.java (CLIHandler): Added new constructor.
	* CommandHelp.java (toPrint): Added.
	* DisassembleCommand.java: Added instructions-only option.
	(DisassembleCommand): Use new constructor,
	initialize parser
	(addOptions): Added.
	(reset): Added.

2007-07-19  Nurdin Premji  <npremji@redhat.com>

	* CLI.java (parseValue): Added.
	* DisassembleCommand.java: Remove singular references to objects,
	helps clean up imports.
	(handle): Use cli.parseValue;
	* PrintCommand.java (handle): Ditto.

	* HardList.java: Drastically simplified, extend AbstractCollection.
	* DisassembleCommand.java: Cleaned indenting.

	* HardList.java: Added.
	* DisassembleCommand.java(handle): Handle hexadecimal inputs to 
	disassemble start end.
	(printInstructions): Limit number of printed lines to 20.
	
	* CLI.java (CLI): Added a DisassembleCommand.

	* DisassembleCommand.java: Added.
	
2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* BreakpointCommand.java: Update, lib.dw merged into lib.elf.
	* ListCommand.java: Ditto.
	* PrintCommand.java: Ditto.

2007-07-16  Adam Jocksch  <ajocksch@redhat.com>

	* DeleteCommand.java (handle): Now parses the correct parameters
	as per the hpd spec.
	* DisableCommand.java (handle): Simplified the argument parsing
	logic.
	* EnableCommand.java (handle): Ditto.

2007-07-12  Stan Cox  <scox@redhat.com>

	* ListCommand.java (handle): Return if no debug_line info.
	* CLI.java (tid,pid,symtabNeedsRefresh): Remove.
	(frame): New.  Replaces DebugInfo.getCurrentFrame.  Change all callers.
	(refreshSymtab): Remove.  Remove reference from all callers.
	(UpDownHandler): Do all processing here.
	(SteppingObserver.update): Update frame.
	* AttachCommand.java (handle): Make tid and pid local.

2007-07-11  Adam Jocksch  <ajocksch@redhat.com>

	* ActionsCommand.java (handle): Now only prints out section
	headers if there's something in that section.
	* DisableCommand.java (handle): Now accepts all arguments as
	specified in the hpd spec.
	* EnableCommand.java (handle): Ditto.

	* DeleteCommand.java: Reformatted.
	(handle): Now deletes displays as well as breakpoints.

	* DisableCommand.java: Reformatted.
	(handle): Extended to disable displays as well.
	* EnableCommand.java: Reformatted.
	(handle): Extended to enable displays as well.

2007-07-10  Adam Jocksch  <ajocksch@redhat.com>

	* ActionsCommand.java: Reformatted.
	(handle): Now parses command line arguments; currently only the
	list of ids, -break, -display, -enabled, and -disabled args are
	accepted.
	* DisplayCommand.java: Reformatted.
	(handle): Now includes the id number of the display when it is
	output.

2007-07-09  Adam Jocksch  <ajocksch@redhat.com>

	* ActionsCommand.java (handle): Added comments, now prints out
	displays as well as breakpoints.

2007-07-05  Adam Jocksch  <ajocksch@redhat.com>

	* DisplayCommand.java (handle): Updated observer to reflect changes
	to frysk.rt.DisplayValueObserver.java.

2007-07-04  Adam Jocksch  <ajocksch@redhat.com>

	* DisplayCommand.java (handle): Updated observer to reflect changes
	to frysk.rt.DisplayValueObserver.java.

	* DisplayCommand.java (handle): Now uses DisplayManager.

2007-06-25  Nurdin Premji  <npremji@redhat.com>

	* CoreCommand.java (handle): Add message once core has been attached.

	* CoreCommand.java: Added.
	* CLI.java (CLI): Added a "core" command.

2007-06-25  Tim Moore  <timoore@redhat.com>

	* RunCommand.java (update): Tell the breakpoint manager to manage
	the process..
	* ActionsCommand.java (TaskComparator): Comparator for sorting
	tasks.
	(handle): Print out tasks that have a breakpoint enabled.
	* BreakpointCommand (handle): Print out status of breakpoint if it
	cannot be enabled.

2007-06-22  Adam Jocksch  <ajocksch@redhat.com>

	* DisplayCommand.java (handle): Enabled notifications to the user
	when a displayed expressions became unavailable.

	* DisplayCommand.java (handle): Now recieves events when the the value
	being displayed becomes unavailable, nothing is currently being
	displayed to the user when this occurs.

2007-06-20  Adam Jocksch  <ajocksch@redhat.com>

	* CLi.java (CLI): Added hook for DisplayCommand.
	* DisplayCommand.java: New file.

2007-06-19  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (SteppingObserver.update): Updated to expect TaskStepEngine
	parameter instead of null or Task objects.
	
	* RunCommand.java (update): Ditto. Fixes #4665.

2007-06-14  Stan Cox  <scox@redhat.com>

	* frysk/cli/hpd/PrintCommand.java (handle): Use BigInteger for hex.

2007-06-14  Tim Moore  <timoore@redhat.com>

	* BreakpointCommand.java (CLIBreakpointObserver.updateHit): Set
	cli.running to false.
	(handle): In anonymous CLIBreakpointObserver classes for
	LineBreakpoint and Function breakpoint, pass cli as argument to
	constructor and call the superclass method.
	* RunCommand.java (update): Rename "unblock" to
	"removeObserver". Tell stepping engine not to unblock this task.

2007-06-12  Teresa Thomas  <tthomas@redhat.com>

	* CLI.java (UpDownHandler): Fixed the up/down commands for call 
	stack.

2007-06-12  Tim Moore  <timoore@redhat.com>

	* RunCommand (updateAttached): Move call to
	cli.getSteppingEngine() after cli.startAttach(), because that
	initializes the stepping engine.

2007-06-11  Nurdin Premji  <npremji@redhat.com>

	* StepInstructionCommand.java (handle): Use abstract Frame rather than 
	RemoteFrame.
	* StepInstructionCommand.java (handle): Ditto.

	* CLI.java: Reflect frysk.stack package movement.
	* WhereCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.
	* StepCommand.java: Ditto.
	* ListCommand.java: Ditto.

2007-06-09  Mike Cvet  <mcvet@redhat.com>

	* CLI.java: Fixups for new dynamic SteppingEngine class.
	(steppingEngine): New field.
	(getSteppingEngine): Added.
	* ActionsCommand.java: Fixups for new dynamic SteppingEngine class.
	* BreakpointCommand.java: Ditto.
	* DeleteCommand.java: Ditto.
	* DetachCommand.java: Ditto.
	* DisableCommand.java: Ditto.
	* EnableCommand.java: Ditto.
	* GoCommand.java: Ditto.
	* HaltCommand.java: Ditto.
	* RunCommand.java: Ditto.
	* StepCommand.java: Ditto.
	* StepInstructionCommand.java: Ditto.

2007-06-08  Andrew Cagney  <cagney@redhat.com>

	* RunHandler.java: Rename this ...
	* RunCommand.java: ... to this.
	* ActionsHandler.java: Rename this ...
	* ActionsCommand.java: ... to this.
	* BreakpointHandler.java: Rename this ...
	* BreakpointCommand.java: ... to this.
	* DisableHandler.java: Rename this ...
	* DisableCommand.java: ... to this.
	* EnableHandler.java: Rename this ...
	* EnableCommand.java: ... to this.
	* DeleteHandler.java: Rename this ...
	* DeleteCommand.java: ... to this.
	* CLI.java: Update.

	* CLI.java (WhichsetsHandler): Rename this ...
	* WhichsetsCommand.java: ... to this.  New file.
	* CLI.java (UndefsetsHandler): Rename this ...
	* UndefsetsCommand.java: ... to this.  New file.
	* CLI.java (createSet, namedPTSets): Make package private.
	(DefsetHandler): Rename this ...
	* DefsetCommand.java: ... to this.  New file.
	* CLI.java (builtinPTSets): Make package private.
	(ViewsetHandler): Rename this ...
	* ViewsetCommand.java: ... to this.  New file.
	* CLI.java (targetset, handlers): Make package private.
	(FocusHandler): Rename this ...
	* FocusCommand.java: ... to this.  New file.

	* CLI.java (UnsetHandler): Rename this ...
	* UnsetCommand.java: ... to this.  New file.
	* CLI.java (SetHandler): Rename this ...
	* SetCommand.java: ... to this.  New file.

	* CLI.java (GoHandler): Rename this ...
	* GoCommand.java: ... to this.  New file.
	* CLI.java (UnaliasHandler): Rename this ...
	* UnaliasCommand.java: ... to this.  New file.

	* CLI.java (AttachHandler): Rename this ...
	* AttachCommand.java: ... to this.  New file.
	* CLI.java (aliases): Make final package private.
	(AliasHandler): Rename this ...
	* AliasCommand.java: ... to this.  New file.

2007-06-07  Andrew Cagney  <cagney@redhat.com>

	* CLI.java (DetachHandler): Rename to ...
	* DetachCommand.java: ... this.  New file.
	* CLI.java (runningProcs): Make package private and final.
	(QuitHandler): Rename to ...
	* QuitCommand.java: ... this.  New file.

	* CLI.java (HaltHandler): Rename to ...
	* HaltCommand.java: ... this.  New file.

	* CLI.java (userhelp): Make package private.
	(HelpHandler): Rename to ...
	* HelpCommand.java: ... this.  New file.

	* CLI.java (WhatHandler): Rename to ...
	* WhatCommand.java: ... this.  New file.

	* CLI.java (WhereHandler): Rename to ...
	* WhereCommand.java: ... this.  New file.

	* CLI.java (PrintHandler): Rename to ...
	* PrintCommand.java: ... this.  New file.

2007-06-07  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (StepHandler): Removed.
	(StepInstructionHandler): Removed.
	(CLI): Initialize new step command classes with CLI parameter.
	(SteppingObserver): Made package private.
	* StepInstructionCommand.java: Added.
	* StepCommand.java: Added.

2007-06-07  Andrew Cagney  <cagney@redhat.com>

	* CLI.java (addMessage): Make package private.
	(outWriter): Make package private and final.
	(ListHandler): Rename to ..
	* ListCommand.java: here.  New file.

2007-06-06  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (SteppingObserver.monitor): Added. Synchronization 
	object for stepping commands.
	(SteppingObserver.update): Now synchronizes on, and notifies from
	monitor object.
	(StepHandler.handle): Synchronizes on stepping monitor and prints
	stepping results after completion.
	(StepInstructionHandler.handle): Ditto.

2007-06-05  Mike Cvet  <mcvet@redhat.com>

	* UserHelp.java (UserHelp): Added user help for step and stepi.
	* CLI.java: Turned Hashtables into HashMaps. Fixes #3986.
	(running): Added.
	(StepHandler): Added. Handler for line stepping. Fixes #4594.
	(StepInstructionHandler): Added. Handler for instruction steping.
	Fixes #4594.
	(WhereHandler.handle): Bail immediately if the process is running.
	Fixes #4595.
	(GoHandler.handle): Sets running boolean.
	(HaltHandler.handle): Unsets running boolean.
	(CLI): Added new stepping handlers.
	(complete): Ordered the returned commands alphabetically.

2007-05-25  Tim Moore  <timoore@redhat.com>

	* CLI.java (DetachHandler.handle): Skip processes started by
	the run command without reporting an error.

2007-05-25  Stan Cox  <scox@redhat.com>

	* SymTab.java: Move to frysk.debuginfo.DebugInfo
	* ExprSymTab.java: Move to frysk.debuginfo.DebugInfoEvaluator
	
2007-05-17  Stan Cox  <scox@redhat.com>

	* SymTab.java (complete): Handle struct members.
	(get): Remove get(String s, ArrayList components).
	* ExprSymTab.java (get): Remove get(String, ArrayList).
	(ArrayList components): Handle both structs and arrays.

2007-05-16  Tim Moore  <timoore@redhat.com>

	* ActionsHandler.java: New file.
	* DeleteHandler.java: New file.
	* DisableHandler.java: New file.
	* EnableHandler.java: New file.
	* Actionpoint.java: delete.
	* ActionpointTable.java: delete.
	* FunctionBreakpointAdapter.java: delete.
	* LineBreakpointAdapter.java: delete.
	* BreakpointHandler.java (handle): Use RT BreakpointManager to
	install breakpoints.
	* RunHandler.java (update): New method for observing SteppingEngine.
	(updateAttached): Use SteppingEngine attached notice to remove the
	attached observer.

2007-05-10  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): Handle union.
	(getClassType): Likewise.

2007-05-10  Andrew Cagney  <cagney@redhat.com>

	* TestSetCreation.java: Replace references to
	frysk.proc.DummyProc and frysk.proc.DummyTask with
	frysk.proc.dummy.Proc and frysk.proc.dummy.Task.

2007-05-09  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): Remove DwarfDie from newXVariable signature.

2007-05-08  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): newXVariable signature.
	Changed to use ArrayType.get.
	* CLI.java (ListHandler): Implement -length.

2007-05-07  Tim Moore  <timoore@redhat.com>

	* RunHandler.java (updateAttached): Put the request to unblock
	this observer in an event for the Event manager.

2007-05-04  Nurdin Premji  <npremji@redhat.com>

	* ExprSymTab.java (refreshCurrentFrame): Updated for 
	frysk.rt.StackFactory.createFrame name change.
	(ExprSymTab): Ditto.

	* SymTab.java (setSubprogram): Abstract StackFrame to Frame.
	(SymTab): Ditto.
	(getCurrentFrame): Ditto.
	(setFrames): Ditto.
	(getInnerMostFrame): Ditto.
	(setCurrentFrame): Ditto.
	* CLI.java (WhereHandler.handle): Ditto.
	(UpDownHandler.handle): Ditto.
	* ExprSymTab.java (getCurrentFrame): Ditto.
	(ExprSymTab): Ditto.
	(getInnerMostFrame): Ditto.
	(setCurrentFrame): Ditto.
	
2007-05-03  Tim Moore  <timoore@redhat.com>

	* Actionpoint.java (Actionpoint): Implement BreakpointObserver.
	(Actionpoint constructor): Take cli as argument.
	(addedTo, addFailed, deletedFrom, updateHit): BreakpointObserver
	implementation.
	* BreakpointHandler.java (handle): New arguments for adapter
	constructors.
	* CLI.java (CLI): Expose apTable to package.
	(AttachHandler.handle): Don't start and stop event loop.
	(startAttach): Store away pid.
	(CLIEventLoop): Delete.
	* FunctionBreakpointAdapter.java (FunctionBreakpointAdapter
	constructor): Take cli as argument, set observer delegate.
	* LineBreakpointAdapter.java: ditto.
	* RunHandler.java (updateAttached): request unblock and Return
	BLOCK.

2007-05-02  Andrew Cagney  <cagney@redhat.com>

	* Revert 2007-05-01 Nurdin Premji <npremji@redhat.com> change.

2007-05-02  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (getArrayType): New.
	(getClassType): New.
	(navigateType): New.
	(get): Use above new methods.
	* CLI.java (PrintHandler.handle): Remove try/catch block.
	(CLI): Remove command parameter.

2007-05-01  Nurdin Premji  <npremji@redhat.com>

	* SymTab.java (setSubprogram): Switch from StackFrame to Frame.
	(SymTab): Ditto.
	(getCurrentFrame): Ditto.
	(setFrames): Ditto.
	(getInnerMostFrame): Ditto.
	(setCurrentFrame): 	Ditto.
	* CLI.java (WhereHandler.handle): Ditto.
	(UpDownHandler.handle): Ditto.
	* ExprSymTab.java (AccessDW_FORM_data.getLong): Ditto.
	(AccessDW_FORM_data.getDouble): Ditto.
	(getCurrentFrame): Ditto.
	(refreshCurrentFrame): Ditto.
	(AccessDW_FORM_data.putFloat): Ditto.
	(AccessDW_FORM_data.putDouble): Ditto.
	(AccessDW_FORM_data.getRegister): Ditto.
	(AccessDW_FORM_data.getInt): Ditto.
	(setCurrentFrame): Ditto.
	(AccessDW_FORM_data.putInt): Ditto.
	(AccessDW_FORM_data.getByte): Ditto.
	(AccessDW_FORM_data.getFloat): Ditto.
	(AccessDW_FORM_data.putShort): Ditto.
	(AccessDW_FORM_block.getBufferAddr): Ditto.
	(AccessDW_FORM_data.putLong): Ditto.
	(AccessDW_FORM_data.getShort): Ditto.
	(ExprSymTab): Ditto.
	(AccessDW_FORM_data.putByte): Ditto.
	(getInnerMostFrame): Ditto.

2007-04-20  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): Support bit fields.
	(get): Likewise.

2007-04-19  Mike Cvet  <mcvet@redhat.com>

	* CLI.java: General fixes for RunState -> SteppingEngine move.
	(steppingObserver): Renamed from runStateObserver.
	(ListHandler.handle): No-debuginfo exception fix.
	(SteppingObserver): Renamed from RunStateObserver.
	(SteppingObserver.update): Return if argument is null.
	(getRunState): Removed.
	* BreakpointHandler.java: SteppingEngine fixes.
	* FunctionBreakpointAdapter.java: Ditto.
	* LineBreakpointAdapter.java: Ditto.

2007-04-18  Tim Moore  <timoore@redhat.com>

	* BreakpointHandler.java (handle): New parameters to
	LineBreakpoint. Support function breakpoint based on symbol name.

	* CLI.java (AttachHandler.handle): Fix breakage from monitor
	lock cleanup.

2007-04-17  Tim Moore  <timoore@redhat.com>

	* CLI.java (CLIMonitor, monitor, procSearchFinished): delete
	monitor and use the cli	object itself as a lock.
	(runningProcs, getRunningProcs): New field and accessor
	(QuitHandler): Kill processes started by the run command.
	* RunHandler.java (updateAttached): Keep track of running
	processes with a ProcessTasksObserver.
	* ProcData.java (equals): New method.
	* ProcTasks.java (equals): New method.
	* StaticPTSet.java (union): New method.

2007-04-15  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (*Type): Use ArithmeticType.
	(get): Likewise.
	* CLI.java (PrintHandler.handle): Rename baseTypeByte.

2007-04-10  Andrew Cagney  <cagney@redhat.com>
	    Phil Muldoon  <pmuldoon@redhat.com>

	* ExprSymTab.java: Replace PtraceByteBuffer with
	Task.getMemory.
	
2007-04-08  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (RunStateObserver.update): Updated calls to
	RunState.getState() to getTaskState(Task).

2007-04-03  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (getDecl): Pass scopes to getDeclCU.

2007-04-02  Tim Moore  <timoore@redhat.com>

	* FunctionBreakpointAdapter.java (output): Print differently
	if function contains inline instances.

2007-03-30  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java: Handle DW_TAG_enumerator.
	(get): Handle DW_TAG_pointer_type, DW_TAG_enumeration_type, and
	DW_TAG_enumerator.
	* SymTab.java (what): Handle DW_TAG_array_type,
	DW_TAG_structure_type, and DW_TAG_enumeration.

2007-03-30  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (DetachHandler.handle): Updated call to 
	RunState.removeObserver to include Proc parameter.
	(HaltHandler.handle): Update call to RunState.stop to 
	include Task list parameter.

2007-03-29  Tim Moore  <timoore@redhat.com>

	* SymTab.java (what): Catch exception if variable file and line
	number are unknown.
	* BreakpontHandler.java (handle): Disabled debugging code.

2007-03-22  Tim Moore  <timoore@redhat.com>

	* CLI.java (RunStateObserver.update): Print out breakpoint
	information when a breakpoint is hit.
	* Actionpoint.java (getRTBreakpoint, setRTBreakpoint): New
	methods.
	* ActionpointTable.java (size): New method.
	* LineBreakpointAdapter.java : Use RTBreakpoint from superclass.
	* FunctionBreakpointAdapter.java : ditto.

2007-03-21  Tim Moore  <timoore@redhat.com>

	* BreakpointHandler.java : Class refactored from
	CLI.java. Implement breakpoints based on function names.
	* FunctionBreakpointAdapter.java : New class.
	* CLI.java (BreakpointHandler): remove.
	(refreshSymtab): Make public.
	(getActionpointTable, getPrintWriter, getTask, getSymTab): New
	getter methods to support writing command handlers outside of the
	CLI class.
	* Symtab.java (getSymbolDie): New method.

2007-03-20  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): Set name when creating arrayType/classType.
	(getAddress): New.
	(getMemory): New.
	* SymTab.java (getAddress, getMemory): Likewise.

2007-03-17  Stan Cox  <scox@redhat.com>	

	* SymTab.java (complete): Handle help request<HT>.
	(CommandHandler): Add -help to all .handle.
	* UserHelp.java (UserHelp): Improve full descriptions.

2007-03-16  Stan Cox  <scox@redhat.com>

	* SymTab.java (setSubprogram): Check for no .debug_info.
	(what): Likewise.
	(SetFrames): Set subprogram in ExprSymTab.	

2007-03-15  Stan Cox  <scox@redhat.com>

	* SymTab.java (subprogram): New.  Used to initialize dies in
	subprogram.
	(SymTab): Allocate subprogram.
	(refresh): Set subprogram.
	(setCurrentFrame): Set subprogram.
	(setSubprogram): Initialize subprogram.
	(setFrames): Set subprogram.
	* ExprSymTab.java (subprogram, setSubprogram): New.
	(getDie): Check if die is in subprogram.
	(getVariable): New.

2007-03-08  Mike Cvet  <mcvet@redhat.com>

	* Symtab.java (task): Not used, removed.
	(exprSymTab): Changed to an array. Will contain an ExprSymTab for
	each thread of a process. Fixes #4173.
	(SymTab): Changed parameter 'pid_p' to 'tid_p'. Initializes the new
	ExprSymTab array.
	(print): Moved TmpSymTab initialization inside if statement.
	Added a while loop to check through all elements of the ExprSymTab
	array for a variable. Fixes #4173.
	(setFrames): Added. Static method to be called after a step; updating
	the ExprSymTab array with fresh StackFrame values.

2007-03-07  Stan Cox  <scox@redhat.com>

	* SymTab.java (what): Use DwAtEncodings and DwTagEncodings.
	* ExprSymTab.java (getBufferAddr): Use DwarfOp and DwOpEncodings.
	(AccessDW_FORM_data.getReg): Likewise.
	(get): Use DwTagEncodings.

2007-03-07  Tim Moore  <timoore@redhat.com>

	* CLIHandler.java: New file.
	* CommandHelp.java: New file.
	* RunHandler.java: New file.
	* UserHelp.java (CommandHelp): Refactor to outer class.
	(addHelp): Add overloaded version that takes a CommandHelp object
	as an argument.
	* CLI.java (CLIMonitor): New inner class.
	(AttachHandler.handle): Always start event loop in a thread and
	use it to locate the process of interest. Properly synchronize
	with the event loop to retrieve the process. Use startAttach() and
	finishAttach(). Disable non-cli case.
	(startAttach, finishAttach): New methods refactored from
	AttachHandler.
	(DetachHandler.handle): Call requestStop on the CLI event loop
	object, not directly on Manager.eventLoop.
	(addHandler): New method.
	(CLI constructor): Add RunHandler object.
	(CLIEventLoop):Make inner class instead of static inner class.
	(CLIEventLoop.requestStop): Remove eventLoop object from CLI.
	(startEventLoop, getRunState, printUsage): New method.

2007-02-28  Stan Cox  <scox@redhat.com>

        * ExprSymTab.java (AccessDW_FORM_block.getBufferAddr):
        Add x8664 specific registers.
        (AccessDW_FORM_data.getReg): Handle x8664.
        (AccessDW_FORM_data.{getFloat,getDouble}): Cast via Float/Double.

2007-02-27  Andrew Cagney  <cagney@redhat.com>

	* CLI.java: Replace StackFrame .getSourceFile with Line
	.getFile.

2007-02-26  Andrew Cagney  <cagney@redhat.com>

	* CLI.java: Use frysk.rt.Line instead of Frame getLineNumber.

2007-02-24  Tim Moore  <timoore@redhat.com>

	* Actionpoint.java: New file.
	* ActionpointTable.java: New file.
	* LineBreakpointAdapter.java: New file.
	* Command.java (setOut, getOut): remove.
	* CLI.java (CLI): Change out PrintStream to outWriter PrintWriter.
	(apTable): New member.
	(BreakpointHandler.handle): Add breakpoint to action point table.
	(DeleteHandler.handle): Implement breakpoint deletion.
	(ActionsHandler): New class.

2007-02-21  Stan Cox  <scox@redhat.com>

	* CLI.java (CLI): Add initial command line parameter.
	(attach): Don't require executable name.

2007-02-19  Mike Cvet  <mcvet@redhat.com>

	* CLI.java (DetachHandler.handle): Updated to call 
	RunState.continueExecution().
	* CLI.java (GoHandler.handle): Ditto.

2007-02-15  Tim Moore  <timoore@redhat.com>

	* SymTab.java (refresh): New method.
	* ExprSymTab.java (refreshCurrentFrame): New method.
	* CLI.java (symtabNeedsRefresh): New member.
	(refreshSymtab): New method.
	(handle): In most handler classes, call refreshSymtab.
	(AttachHandler.handle): Add error messages.
	(RunStateObserver.update): Set symtabNeedsRefresh if necessary.

2007-02-14  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): Add offset to classType.addMember.
	(get): New for class members.
	* SymTab.java (get): Likewise.

2007-02-07  Stan Cox  <scox@redhat.com>

	* CLI.java (frysk.proc.Action, frysk.proc.TaskObserver):
	Remove unused imports.
	(DeleteBreakpointHandler): Remove params, filename, linenumber.	
	(params): remove.

2007-02-07  Tim Moore  <timoore@redhat.com>	

	* CLI.java (addMessage): New version that takes string and
	message type.
	(CLI): Reformat to GNU standards, use new addMessage convenience
	method.
	
2007-02-07  Tim Moore  <timoore@redhat.com>

	* CLI.java (attachedObserver): Remove.
	(runState, runStateObserver, AttachHandler, DetachHandler): Start
	and stop processes using RunState object.
	(BreakpointHandler, DeleteBreakpointHandler): Handlers for
	manipulating source breakpoints.
	(GoHandler, HaltHandler): Handlers for starting and stopping a
	process.
	(CLI constructor): Add new handlers to handler table.
	(RunStateObserver): New local class for interacting with RunState.
	* UserHelp.java (addHelp): Convenience function.
	(UserHelp constructor): Use it. Add help for "go" and "halt" commands.
	

2007-01-29  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (byteType,shortType,intType,floatType,doubleType): New.
	(VariableAccessor.(get*,put*): Add offset to getters and putters.
	(AccessDW_FORM_block.(get*,put*): Add offset to getters and putters.
	(AccessDW_FORM_data.(get*,put*): Add offset to getters and putters.
	(get): Use switch statements.
	(get): New for array element references.
	* CLI.java (WhereHandler.handle): Fix formatting typo.

2007-01-26  Mark Wielaard  <mark@klomp.org>

	* SymTab.java: Removed unused import DwflLine.

2007-01-26  Mark Wielaard  <mark@klomp.org>

	* CLI.java: Delete unused import lib.stdcpp.Demangler.
	* SymTab.java: Delete unused import frysk.rt.StackFactory.
	(complete): Removed unused variable result.
	(what): Removed unused variable line.
	(print): Removed unused variable intResult.

2007-01-23  Stan Cox  <scox@redhat.com>

	* CLI.java Delete unused import frysk.rt.StackFactory,
	frysk.sys.Errno, frysk.sys.Ptrace, frysk.sys.Sig, lib.dw.DwarfDie,
	lib.dw.Dwfl, lib.dw.DwflDieBias, lib.dw.DwflLine.
	(complete): Remove candidates iterator.
	(AttachedObserver): Remove unread variable stopped.

2007-01-23  Nurdin Premji  <npremji@redhat.com>

	* CLI.java (WhereHandler.handle): Changed to use
	Stackframe.toPrint method. 
	(UpDownHandler.handle): Ditto.

2007-01-23  Andrew Cagney  <cagney@redhat.com>

	* CLI.java: Delete unused import frysk.proc.TaskException.

2007-01-22  Andrew Cagney  <cagney@redhat.com>

	* CLI.java: Delete unused import java.util.Vector;

	* SymTab.java: Delete import frysk.proc.TaskException.
		
2007-01-22  Mike Cvet  <mcvet@redhat.com>

	* ExprSymTab.java (getReg): Removed erroneous frame PC
	decrement and instead call StackFrame.getAdjustedAddress().
	(getBufferAddr): Ditto.
	(getDie): Ditto.
	* SymTab.java (complete): Ditto.
	(what): Ditto.

2007-01-22  Andrew Cagney  <cagney@redhat.com>

	* ExprSymTab.java: Delete catch throwing TaskException as
	RuntimeException.
	* SymTab.java: Ditto.

2007-01-18  Tim Moore  <timoore@redhat.com>

	* ExprSymTab.java(AccessDW_FORM_block.getBufferAddr,
	AccessDW_FORM_data.getReg): Instead of using MachineType, look at
	the task's Isa.

2007-01-16  Stan Cox  <scox@redhat.com>

	* CLI.java (PrintHandler.handle): Special case baseTypeChar.

2007-01-11  Stan Cox  <scox@redhat.com>

	* CLI.java (complete): New.
	(ListHandler): New.
	* SymTab.java (complete): New.
	* UserHelp.java (list): New.	

2006-12-20  Stan Cox  <scox@redhat.com>

	* AllPTSet.java (taskSets): Use ArrayList instead of Vector.
	* CLI.java (handle): Likewise.
	* Command.java (myParameters): Likewise.
	* DynamicPTSet.java (getTasks): Likewise.
	* ExecPTSet.java (getTasks): Likewise.
	* Preprocessor.java (preprocess): Likewise.
	* ProcTasks.java (getTaskData): Likewise.
	* SetNotationParser.java (parse): Likewise.
	* StaticPTSet.java (getProcs): Likewise.
	* StatePTSet.java (getTasks): Likewise.
	* UserHelp.java (getCmdList): Likewise.
	* SymTab.java (print): Add NameNotFoundException, TmpSymTab.
	* CppSymTab.java (print): Add NameNotFoundException.

2006-12-18  Stan Cox  <scox@redhat.com>

	* SymTab.java (SymTab): Add elf and dwarf.
	(what): Handle functions.
	* CLI.java (WhereHandler): Demangle. Check usage.
	(UpDownHandler): Demangle.
	(PrintHandler): Check usage.
	(WhatHandler): Check usage.

2006-12-14  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (VariableAccessor): Add getLong/putLong/ and
	getByte/putByte.
	(AccessDW_FORM_block): Likewise.
	(AccessDW_FORM_data): Likewise.
	(put): Likewise.
	(get): Likewise.

2006-12-11  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Delete.

2006-12-06  Nurdin Premji  <npremji@redhat.com>

	* CLI.java (AttachHandler.handle): Removed unneccesary TODO:
	Autogenerated method stub.

2006-11-28  Nurdin Premji  <npremji@redhat.com>

	* CLI.java (AttachHandler.handle): Changed to use simplified
	requestFindProc.

2006-11-27  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (AccessDW_FORM_block.getBufferAddr): Change 
	getFrameBase.
	(AccessDW_FORM_data.getReg): Change getFormData.
	* CLI.java (QuitHandler.handle): Do implicit detach from quit.

2006-11-27  Nurdin Premji  <npremji@redhat.com>

	* CLI.java: Reverted to old refreshRequestXXX and reimplemented 
	FindProc interface.  foundProc method just stops eventLoop rather than 
	running everything after the runPending.

2006-11-21  Nurdin Premji  <npremji@redhat.com>

	* CLI.java: Changed to use FindProc interface.

2006-11-17  Stan Cox  <scox@redhat.com>

	* CLI.java (CLIEventLoop): New.
	(AttachedObserver): New.
	(AttachHandler.handle): Attach to process using an attach observer.

2006-11-16  Stan Cox  <scox@redhat.com>

	* CLI.java (PrintHandler.handle): Add -task.
	Rename frysk.lang to frysk.value.
	* ExprSymTab.java: Rename frysk.lang to frysk.value.
	* SymTab.java: Rename frysk.lang to frysk.value.

2006-11-14  Andrew Cagney  <cagney@redhat.com>

	* TestSetCreation.java: Use frysk.junit.TestCase.
	* TestSetParser.java: Use frysk.junit.TestCase.

2006-11-09  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (get): Add isClassType support.

2006-11-03  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (VariableAccessor.getAddr): New.
	(get): Use BaseTypes. Add isArrayType support.
	* CLI.java (PrintHandler.handle): Use BaseTypes.

2006-10-11  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (VariableAccessor): New.
	(AccessDW_FORM_block): New.
	(AccessDW_FORM_data): New.
	(put): Use VariableAccessor.
	(get): Use VariableAccessor.

2006-10-06  Mike Cvet  <mcvet@redhat.com>

	* ExprSymTab.java (ExprSymTab): New StackFrame parameter.Sets
	currentFrame to the inner most frame of the incoming stack trace 
	if non-null; generates new stack trace otherwise. Got rid of 
	innermostFrame field. Fixes #3312.
	(getBufferAddr): Checks currentFrame.getInner() null-ness instead
	of innermostFrame.
	(getDie): Ditto.
	(getInnerMostFrame): Iterates a pointer to currentFrame's innermost
	and returns it.
	* SymTab.java (SymTab): Added a new constructor with 
	an extra parameter - a StackFrame. Calls ExprSymTab with new
	StackFrame argument; null if no StackFrame was given.
	* CLI.java (AttachHandler.handle): Sends in an extra null
	argument to the new SymTab.

2006-10-03  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (getBufferAddr): Add x86regnumbers to map x86
	dwarf reg numbers to unwind reg numbers.

2006-10-02  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (getBufferAddr):  Add x86regnames to map x86
	dwarf reg numbers to unwind reg names.

2006-10-02  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (put): Check that the die has a type.
	(get): Likewise.

2006-09-29  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java (getBufferAddr): Simplify DW_AT_frame_base handling.
	(put): Handle Errno.
	* CLI.java (PrintHandler.handle): Handle missing variable.

2006-09-28  Stan Cox  <scox@redhat.com>

	* CLI.java (UpDownHandler): New.
	(WhereHandler): New.
	* SymTab.java (CppSymTab): Move from here...
	* ExprSymTab.java: to here.

2006-09-22  Stan Cox  <scox@redhat.com>

	* SymTab.java (what,print): Refactor command handling from here...
	* CLI.java (what,print): to here.

2006-09-18  Stan Cox  <scox@redhat.com>

	* SymTab.java (get): Handle float and double.
	(print): Likewise.

2006-09-12  Stan Cox  <scox@redhat.com>

	* CLI.java (proc): New.
	(task): New.
	(symtab): New.
	(AttachHandler): New.
	(DetachHandler): New.
	* hpd.java: New file for standalone execution of hpd.
	* SymTab.java (symTab): New.
	(what): Use it.
	(print): Use it.
	* UserHelp.java (UserHelp): Add print, assign, what, attach, detach.
	* PrintHandler.java: Moved to SymTab.java.

2006-08-21  Stan Cox  <scox@redhat.com>

	* PrintHandler.java (handle): Add -format and hex/octal output.

2006-07-14  Stan Cox  <scox@redhat.com>

	* Command.java (getOut, setOut): New.
	* CLI.java (execCommand): Call it.
	* PrintHandler.java (PrintHandler): Change println to getOut.

2006-07-07  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* DbgVariables.java: new
	* CLI.java: aliasing, variable setting added
	* UserHelp.java: help for the newly implemented commands
	
2006-07-05  Ivan Pantuyev  <ipantuye@redhat.com>

	* UserHelp.java: more commands
	* CLI.java: some work on set commands, new debugger internal commands
	* AllPTSet.java: fixed index out of bounds exception

2006-06-28  Ivan Pantuyev  <ipantuye@redhat.com>

	* UserHelp.java: new

2006-06-28  Ivan Pantuyev  <ipantuye@redhat.com>

	* StatePTSet.java: fixed bug

2006-06-28  Ivan Pantuyev  <ipantuye@redhat.com>

	* Message.java: new
	* ExecPTSet.java: new

2006-06-27  Ivan Pantuyev  <ipantuye@redhat.com>

	* SetNotationParser.java: fixed bug
	* TestSetParser.java: two more tests

2006-06-26  Ivan Pantuyev  <ipantuye@redhat.com>

	* ParsedSet.java: Added support for static name and exec sets
	* CLI.java: Added support for static name and exec sets, minor fixes
	* SetNotationParser.java: Conform to ParsedSet changes
	* AllPTSet.java: minor edit

2006-06-26  Ivan Pantuyev  <ipantuye@redhat.com>

	* CLI.java: remove call to System.exit()

2006-06-25  Ivan Pantuyev  <ipantuye@redhat.com>

	* CLI.java: commented out and changed the name of "main"

2006-06-21  Phil Muldoon  <pmuldoon@redhat.com>

	* StatePTSet.java: Broken HEAD build fixes.
	Fixed missing java.util import.	Declare state variable.
	(StatePTSet): Set assignment of this.state to state.
	Remove this.set = set.

2006-06-21  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* PTSet.java: changed the interface
	* AllPTSet.java: conform to PTSet changes, added getSubsetByState
	* StaticPTSet.java: conform to PTSet changes
	* DynamicPTSet.java: conform to PTSet changes
	* StatePTSet.java: new
	* SetNotationParser.java: added recognition of set by task state
	* CLI.java: Added a few variables
	* Command.java: Better tokenization
	* ProcTasks.java: Changed a function name
	* ParsedSet.java: Added TYPE_STATE
	
2006-06-16  Yao Qi  <qiyaoltc@cn.ibm.com>

	* PrintHandler.java : Remove unused imports.
	* SymTab.java : Ditto.

2006-06-15  Stan Cox  <scox@redhat.com>

	* CLI.java (WhatHandler): New.
	(QuitHandler): New.
	(HelpHandler): New.
	(CLI): New handlers for print, what, help, quit, exit.
	* PrintHandler.java: New file.
	* SymTab.java: New file.

2006-06-14  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* ParsedSet.java: new
	* SetNotationParser: returns ParsedSet now
	* TestSetCreation.java: adjusted to conform with changes to other classes
	* TestSetParser.java: adjusted to conform with changes to other classes

2006-06-12  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* AllPTSet.java: Removed from public scope
	* Command.java: Removed from public scope
	* ParseTreeNode.java: Removed from public scope
	* Preprocessor.java: Removed from public scope
	* SetNotationParser.java: Removed from public scope
	* AllPTSet.java: Removed from public scope

2006-06-12  Ivan Pantuyev  <ipantuye@redhat.com>

	* PTSet.java: new
	* DynamicPTSet.java: new
	* AllPTSet.java: implements PTSet interface, generalized subset creation
	* StaticPTSet.java: implements PTSet interface
	* TestSetCreation.java: reflect changes to AllPTSet

2006-06-09  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* ProcData.java: new
	* TaskData.java: new
	* ProcTasks.java: new
	* TestSetCreation.java: new
	* StaticPTSet.java: new
	* AllPTSet.java: changed algorithms to simpler ones, added support for new classes
	* SetNotationParser.java: removed support for "fuzzy" notations
	* TestSetParser.java: accomodated to SetNotationParser changes, more tests

2006-06-07  Ivan Pantuyev  <ipantuye@redhat.com>

	* TestSerParser.java: JUnitified it

2006-05-31  Ivan Pantuyev  <ipantuye@redhat.com>

	* ParseTreeNode.java: Changed all instance of PTNode to ParseTreeNode
	* SetParserTest.java: Changed all instance of PTNode to ParseTreeNode
	* SetNotationParse.java: Changed all instance of PTNode to ParseTreeNode
	* AllPTSet.java: Changed all instance of PTNode to ParseTreeNode

2006-06-01  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* PTNode.java: Renamed to ParseTreeNode
	* ParseTreeNode.java: New (renamed PTNode.java to it)

2006-05-30  Ivan Pantuyev  <ipantuye@redhat.com>

	* TaskSet.java: Renamed to AllPTSet.java
	* AllPTSet.java: New

2006-05-24  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* Command.java: New
	* CLI.java: Changed to use Command class instead of ParserHelper
	* CommandHandler.java: Changed to use Command class instead of ParserHelper
	* Preprocessor.java: Made to handle quote-bound compound commands

2006-05-24  Ivan Pantuyev  <ipantuye@redhat.com>

	* ParserHelper.java: Removed

2005-10-03  Andrew Cagney  <cagney@redhat.com>

	* CLI.java: Delete unused private member aliases.

2005-09-18  Andrew Cagney  <cagney@redhat.com>

	* package.html: Add a proper package title.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/cli/ to frysk/cli/.

2005-09-01  Andrew Cagney  <cagney@redhat.com>
	
	* .cvsignore: New.

2005-08-19  Ivan Pantuyev  <ipantuye@redhat.com>
	
	* doc-files/parsetree.png: New.
	* doc-files/package.html: New.

2005-08-13  Andrew Cagney  <cagney@redhat.com>

	* TaskSet.java: Delete java.util.Arrays import.

2005-08-13  Ivan Pantuyev <ipantuye@redhat.com>
	
	* CLI.java: New.
	* CommandHandler.java: New.
	* PTNode.java: New.
	* ParserHelper.java: New.
	* Preprocessor.java: New.
	* SetNotationParser.java: New.
	* SetParserTest.java: New.
	* TaskSet.java: New.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
