2006-12-04  Andrew Cagney  <cagney@redhat.com>

	* tests/TestStepping.java (testRecursiveLineStepping): Disabled,
	see bug 3646.

2006-12-03  Mike Cvet  <mcvet@redhat.com>

	* RunState.java (lineLoopCount): Removed.
	(numSteppingTasks): Removed.
	(lineCountMap): Added. Need to keep track of iterations on a Task-specific
	level.
	(setUpStep): Update lineCountMap.
	(stepIn): Updated to use lineCountMap, removed redundant lineMap putting.
	(stepCompleted): Clear out lineCountMap.
	(updateExecuted): No longer let state == STOPPED get through.
	(requestAdd): Update numRunningTasks here.
	* TestRunState.java (stepAssertions): Fixed up a couple assertions.
	* TestStepping.java: Removed debugging prints.
	(stepAssertions): Fixed assertions.
	(LockObserver.update): Cleaned up.
	

2006-12-01  Mike Cvet  <mcvet@redhat.com>

	* TestRunState.java: Cleaned up. Fixed strange compiler optimization bugs.
	(LockObserver.update): Scheduled work on the event loop.
	* TestStepping.java: Added. More complex stepping tests, with recursive
	functions.

2006-11-29  Mike Cvet  <mcvet@redhat.com>

	* RunState.java: Removed ProcBlockObserver import and constructor.
	(setUpStep): Set numSteppingTasks here.
	(stepInstruction): Ditto.
	* TestRunState.java: (testLineStepping): Re-arranged some code.
	(setUpTest): Remove call to set number of stepping Tasks.
	(stepAssertions): If DwflLine returns null, attempt to create a 
	new one. Edited some cases.

2006-11-28  Mike Cvet  <mcvet@redhat.com>

	* TestRunState.java: Removed lots of unneeded imports and variables.
	Uses new RunState interface.
	(testInstructionStepping): Cleaned up. Initialize new LockObserver.
	Enabled re: #3529.
	(testLineStepping): Ditto.
	(setUpTest): Set the task step count in the RunState.
	(stepAssertions): Fixed up some expected line numbers. Made sure to
	clean up after each step and properly re-initialize for each new step.
	(LockObserver): Added.
	(StepObserver): Removed.

2006-11-28  Nurdin Premji  <npremji@redhat.com>

	* tests/TestStackBacktrace.java (testThreadedBacktrace): Changed to use 
	simplified requestFindProc.

2006-11-23  Mike Cvet  <mcvet@redhat.com>

	* RunState.java (setUpStep): If the DwflLine returned is null, perform
	an instruction step. Handles line stepping within frames without debug
	info. Temporary fix for #3575.
	* StackFrame.java (frameToString): Renamed from toString().

2006-11-22  Mike Cvet  <mcvet@redhat.com>

	* RunState.java (state): Added. State representation of this RunState.
	(updateExecuted): Added Javadoc. Handle all state transitions here, 
	instead of in inferior windows. Only notifyObservers when all Tasks
	have been blocked.
	(getProc): Added.
	(notifyStopped): Ditto.
	(runCompleted): Ditto.
	(setState): Ditto.
	(getState): Ditto.
	(executeTasks): Update state and removed returning ints.
	(stepOver): Update state.
	(stepCompleted): Ditto.
	(setUpStepOut): Ditto.
	(stop): Ditto.
	(setUpStep): Ditto.
	(stepInstruction): Ditto.
	(run): Ditto.
	(requestAdd): Added Javadoc.
	(addedTo): Ditto.
	(setTaskStepCount): Ditto.
	(notifyNotBlocked): Ditto.
	(blockTask): Ditto.
	(deletedFrom): Ditto.
	(getNumTasks): Ditto.
	(decNumRunningTasks): Ditto.
	(setProc): Ditto.
	(requestAddObservers): Ditto.
	(getNumObservers): Ditto.
	(removeObserver): Ditto.
	(getNumRunningTasks): Ditto.
	(addFailed): Ditto.
	(setNumRunningTasks): Ditto.

	(breakpoint): Added. TaskObserver.Code object used as a breakpoint on
	StackFrame return addresses for stepping.
	(lastFrame): Added. Last StackFrame on the top of the stack before the
	last step-out or step-over.
	(setUpStepOver): Added. Sets up breakpoint and lastFrame, then
	performs an instruction step on the Task.
	(stepOver): Build a new, shortened, stacktrace and use the frames to
	compare the innermost StackFrame to the previous one represented by 
	lastFrame. Singlestep if they are the same, otherwise run the task.
	(finishStepOver): Added.
	(cleanUpBreakPoint): Added.
	(setUpStepOut): Set up breakpoint on outer frame, set lastFrame and 
	instruction step the Task.
	(updateExecuted): Added functionality to switch for a new state.
	(Breakpoint): Added. New class to implement TaskObserver.Code.

2006-11-21  Nurdin Premji  <npremji@redhat.com>

	* tests/TestStackBacktrace.java: Changed to use new FindProc interface.	

2006-11-20  Mike Cvet  <mcvet@redhat.com>

	* StateModel.java: Refactored to RunState.java.
	* RunState.java: Refactored from StateModel.java.
	(pbo): Removed. ProcBlockObserver is no longer used.
	(stateProc): Added. The Proc this RunState is responsible for.
	(tasks): Added. LinkedList of Tasks belonging to stateProc.
	(numRunningTasks): Number of Tasks belonging to stateProc in the
	unblocked state.
	(RunState): Removed reference to ProcBlockObserver. This class 
	now extends Observable and implements TaskObserver.Instruction 
	directly. Fixes #3538.
	(getNumRunningTasks): Added.
	(setNumRunningTasks): Added.
	(getNumObservers): Added. Returns the number of Observers in this
	Observable's Observer list.
	(removeObserver): Added. Calls deleteObserver() with the additional 
	stipulation of releasing all Tasks if there are no more Observers
	watching them.
	(setProc): Added. Sets stateProc and tasks, and blocks all tasks from
	the incoming Proc.
	(updateExecuted): Added. Callback for TaskObserver.Instruction. Notify
	all watching observers that a task has been re-blocked.
	(addedTo): Added. Callback for TaskObserver.Instruction.
	(deletedFrom): Ditto.
	(addFailed): Ditto.
	(requestAdd): Schedules this Observer to be added to all Tasks.
	(requestAddObservers): Adds this InstructionObserver to the incoming Task.
	(blockTask): Schedules this InstructionObserver to be added to all
	incoming Tasks.
	(getNumTasks): Added.
	* tests/TestStateModel: Refactored to TestRunState.
	* tests/TestRunState: Refactored from TestStateModel. Updated to use 
	RunState.
	
2006-11-16  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStateModel.java (testInstructionStepping): Updated for
	broken 3529.
	(testLineStepping): Ditto.
	(stepAssertions): Lots of updates for new funit-rt-stepper code.

2006-11-15  Mike Cvet  <mcvet@redhat.com>

	* StackFrame.java (cfa): Added. Cannonical frame address.
	(getCFA): Added.
	
	* StackFrame.cxx (initialize): Added code to initialize the cfa.

2006-11-14  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (testBackTrace): Cleaned up.
	* tests/TestStateModel.java (testInstructionStepping): Added.
	(stepAssertions): Added assertions for instruction stepping. 
	Fixed to avoid race conditions.

2006-11-13  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStateModel.java: Added.

2006-11-12  Mike Cvet  <mcvet@redhat.com>

	* StateModel.java (StateModel): Added. Handles SourceWindow and HPD 
	stop/continue/stepping. Addresses #3510.
	(stepIn): Moved over from SourceWindow.
	(stepOver): Ditto.
	(lineMap): Ditto.
	(stepCompleted): Ditto.
	(run): Ditto.
	(runningTasks): Ditto. 
	(executeTasks): Ditto.
	(stepOut): Ditto.
	(stop): Ditto.
	(setUpStep): Ditto.
	(lineLoopCount): Ditto.
	(dwflMap): Ditto.
	(pbo): Ditto.
	(stepInstruction): Ditto.

2006-10-31  Mike Cvet  <mcvet@redhat.com>

	* StackFrame.java (toPrint): Added. Returns a neat string representing this
	StackFrame suitable for displaying backtraces in the SourceWindow or other
	utilities.

2006-10-31  Tim Moore  <timoore@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Use ULong for
	address comparisons.

2006-10-26  Nurdin Premji  <npremji@redhat.com>

	* tests/TestStackBacktrace.java (testThreadedBacktrace): Changed to run the eventLoop, 
	not create a new one. Fixes bug causing tests after this to fail.
	(handleTask): Changed to stop eventLoop on completion. 

2006-10-26  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Fixed << broken >> number
	to correct bug.
	(frameAssertions): Added some regex to catch what appears to be new 
	clone function name in FC6.

2006-10-12  Andrew Cagney  <cagney@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace)
	(testThreadedBacktrace): Use frysk.junit.Paths.getExecPrefix.

2006-10-11  Stan Cox  <scox@redhat.com>

	* StackFrame.java (setReg): New.
	* cni/StackFrame.cxx (set_reg): New.

2006-10-05  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Added a brokenXXX
	call in regards to #3259.

2006-10-04  Mike Cvet  <mcvet@redhat.com>

	* StackFrame.java (getTask): Refactored from getMyTask().
	(getDwflLine): Added.
	(StackFrame): Uses task instead of myTask.
	(getDOMFunction): Refactored from getFunction (confused with 
	getMethod).
	(setDOMFunction): Refactored from setFunction 

2006-10-02  Mike Cvet  <mcvet@redhat.com>

	* TestStackBacktrace.java (testBacktrace): Enabled test 
	for x86_64, updated brokenXXX call to PPC/64 #3277.
	(testThreadedBacktrace): Ditto.
	(frameAssertions): Changed expected system call names for 
	a couple x86_64 frames.

2006-09-28  Stan Cox  <scox@redhat.com>

	* StackFrame.java (getReg): New.
	* cni/StackFrame.cxx (get_reg): New.

2006-09-25  Alexandre Oliva  <aoliva@redhat.com>

	* StackCallbacks.java: Do not import lib.unwind.RegisterX86.
	(accessMem): Implement according to Isa-specified word size.
	(accessReg, writeReg, accessFpreg, writeFpreg): Do not use
	RegisterX86 directly.

2006-09-22  Mark Wielaard  <mark@klomp.org>

	(testThreadedBacktrace): Disabled. Bug #2936.

2006-09-21  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (StackTasksObserver): Added.
	(handleTask): Added - grabs stack information from incoming Tasks.
	(frameAssertions): Added, runs assertions on stack information
	from all three threads.
	(testThreadedBacktrace): Added, runs a multithreaded test program,
	collecting stack information from all threads and running assertions
	on it.

2006-09-20  Tom Tromey  <tromey@redhat.com>

	* StackFrame.java (toString): Pad address to task's word size.

2006-09-20  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Expanded test.

2006-09-20  Tom Tromey  <tromey@redhat.com>

	* StackFrame.java (toString): New method.
	(StackFrame): Don't initialize sourceFile if file is not known.
	(startOffset): Renamed.
	(getStartOffset): Likewise.
	(setFunction): Javadoc fixes.
	(getFunction): Likewise.
	(getData): Likewise.
	(getMethodName): Likewise.
	(getSourceFile): Likewise.
	(getLineNumber): Likewise.
	(getColumn): Likewise.
	(getAddress): Likewise.
	(getMyTask): Likewise.
	(getUnwindData): Likewise.
	(getInner): Likewise.
	(getOuter): Likewise.
	(getIsSignalFrame): Likewise.

2006-09-19  Mike Cvet  <mcvet@redhat.com>

	* StackFrame.java (StackFrame): Added new constructor, taking an 
	inner StackFrame as an argument. Old constructor calls this one,
	with null. Added check to see if this StackFrame is the innermost
	or a signal frame. Added Javadoc.
	(setIsSignalFrame): Added.
	(getIsSignalFrame): Added.
	* StackFactory.java (createStackFrame): Calls new StackFrame 
	constructor (above). Initializes the current frame's inner frame
	through constructor call.

2006-09-18  Mike Cvet  <mcvet@redhat.com>

	* StackFrame.java (StackFrame): Added variables and initializations
	for start and end lines and offsets, as well as getters and setters.
	(setFunction): Added.
	(setData): Ditto.
	(getFunction): Ditto.
	(getData): Ditto.

2006-09-16  Alexandre Oliva  <aoliva@redhat.com>

	* StackCallbacks.java (findProcInfo, putUnwindInfo,
	getDynInfoListAddr, getProcName, populate_procinfo,
	populate_procinfo_nounwind, free_proc_info): Remove, obsolete.
	(getPid): New.
	* cni/StackCallbacks.cxx: Delete.

2006-09-15  Andrew Cagney  <cagney@redhat.com>

	* StackCallbacks.java: Use java.util.logging.Logger, instead of
	frysk.proc.Host.logger.  Pass "this" to logger, use {0} et.al.

2006-09-11  Mark Wielaard  <mark@klomp.org>

	* tests/TestStackBacktrace.java (testBacktrace): Disabled when
	MachineType is not IA32.

2006-09-08  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Commented out
	output since now the test runs and works.

2006-09-08	Alexandre Oliva  <aoliva@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Remove
	expected failure marker.

2006-08-17  Yao Qi  <qiyaoltc@cn.ibm.com>

	* StackCallbacks.java (getProcName): Check the null pointer.
	(getProcOffset): Ditto.

2006-08-14  Mike Cvet  <mcvet@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): TaskCreatedObserver
	now extends TaskObserverBase.

2006-08-07  Tim Moore  <timoore@redhat.com>

	* StackCallbacks.java (StackCallbacks): change Task.TaskException
	to TaskException.
	* StackFactory.java (createStackFrame): ditto.
	* tests/TestStackBacktrace.java (testBacktrace): ditto.

2006-07-28  Adam Jocksch  <ajocksch@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Now passes the signal
	to send as a parameter to funit-rt-looper.c.

	* tests/looper2.c: Made significant changes to prevent race conditions,
	moved to frysk.pkglibexecdir.
	* tests/TestStackBacktrace.java (testBacktrace): Changed exec path to
	reflect above move, test is still disabled.

2006-07-27  Adam Jocksch  <ajocksch@redhat.com>

	* StackCallbacks.java (findProcInfo): Added additional checks and 
	logging information upon failure.

	* tests/looper2.c (baz): Moved the call to kill inside the busy-wait to
	prevent a race condition.
	(main): Removed arg check since this is being run in a deterministic
	way.

2006-07-26  Adam Jocksch  <ajocksch@redhat.com>

	* tests/TestStackBacktrace.java (testBacktrace): Removed debugging output
	and re-disabled.

	* StackCallbacks.java (findProcInfo): Now creates a scratch elf object,
	temporary measure only.
	* StackFrame.java (getInner): Added.
	(getOuter): Added.
	* TestLib.java: Moved to tests.
	* TestStackBacktrace.java: Ditto.
	* tests: Added.
	* cni/TestLib.cxx: Moved to tests/cni.
	* tests/looper2.c: Added.

2006-07-25  Adam Jocksch  <ajocksch@redhat.com>

	* StackCallbacks.java (findProcInfo): Refactored to use
	DwflDieBias, now searched for .debug_frame elf section and
	passes that in to populate_procinfo.
	(getProcName): Refactored to use DwflDieBias.
	(getProcOffset): Ditto.
	(populate_procinfo): Now takes a ElfData object.
	* cni/StackCallbacks.cxx (populate_procinfo): Now copies out the
	contents of the provided ElfData and passes that to libunwind.

2006-07-24  Adam Jocksch  <ajocksch@redhat.com>

	* StackCallbacks.java (build_procinfo_nounwind): Added.
	(findProcInfo): Refactored to reflect interface change, also calls
	build_procinfo_nounwind.
	(getProcName): Now correctly returns either the procedure
	name or "".
	(getProcOffset): Now implemented.
	* StackFactory.java (createStackFrame): Refactored to reflect change
	in StackFrame constructor.
	* StackFrame.java (StackFrame): Now takes a Task object.
	(getMethodName): Added.
	(getSourceFile): Added.
	(getLineNumber): Added.
	(getColumn): Added.
	(getAddress): Added.
	(getMyTask): Added.
	(getUnwindData): Added.
	(initialize): Added.
	* TestLib.java: Added.
	* TestStackBacktrace.java (testBacktrace): Added printouts for stack
	information, test is still disabled.
	* cni/StackCallbacks.cxx (build_procinfo): Renamed to populate_procinfo.
	(populate_procinfo_nounwind): Added.
	(free_procinfo): No longer frees struct.
	* cni/TestLib.cxx: Added.
	* cni/StackFrame.cxx: Added.

2006-07-20  Tim Moore  <timmore@redhat.com>

	* StackCallbacks.java (StackCallbacks): Handle TaskException.
	* StackFactory.java (createStackFrame): Throw TaskException.
	* TestStackBacktrace.java (testBacktrace): ditto.

2006-07-17  Andrew Cagney  <cagney@redhat.com>

	* TestStackBacktrace.java: Pass bug number to brokenXXX call.

2005-07-17  Adam Jocksch  <ajocksch@redhat.com>

	* StackCallbacks.java (free_proc_info): Added.
	(putUnwindInfo): Now calls free_proc_info.
	* cni.StackCallbacks.cxx (free_proc_info): Added.

	* TestStackBacktrace.java (testBacktrace): Re-commented Maps test.

	* StackCallbacks.java (getProcName): Implemented.

2005-07-14  Adam Jocksch  <ajocksch@redhat.com>

	* StackCallbacks.java (findProcInfo): Now returns incomplete 
	proc_info struct.
	(accessMem): Reorganized comments to make more sense.
	* TestStackBacktrace.java (testBacktrace): Added commented out
	code for MapsBuilder testing, for debugging purposes.

	* StackCallbacks.java (findProcInfo): Started gathering necessary
	information to buidl the struct.
	(build_procinfo): Added.
	* cni/StackCallbacks.java (build_procinfo): Added, takes the data
	gathered and creates the proc_info struct.

2005-07-14  Mark Wielaard  <mark@klomp.org>

	* TestStackBacktrace.java: Removed unused Level and Host imports.

2005-07-13  Adam Jocksch  <ajocksch@redhat.com>

	* StackCallbacks.java: Improved logging information and reformatted
	to GNU formatting.
	* TestStackBacktrace.java (testBacktrace): Added commented out logging
	level.

	* StackCallbacks.java: Added preamble.
	(findProcInfo): Added logging.
	(getDynInfoListAddr): Ditto.
	(accessMem): Ditto.
	(writeMem): Ditto.
	(accessReg): Ditto, now fetches register contents.
	(accessFpReg): Ditto.
	(writeReg): Added logging.
	(accessFpReg): Ditto.
	(getProcName): Ditto.
	(getProcOffset): Ditto.
	* StackFactory.java: Added preamble.
	* StackFrame.java: Ditto.
	* TestStackBacktrace.java: Ditto.
	* cni/StackBacktrace.cxx: Ditto.
	
2005-07-12  Adam Jocksch  <ajocksch@redhat.com>

	* TestStackBacktrace.java (testBacktrace): Now uses brokenXXX.

	* StackCallbacks.java: Added.
	* StackFactory.java: Added.
	* StackFrame.java: Added.
	* TestStackBacktrace.java: Added.
	* cni/StackCallbacks.cxx: Added.
