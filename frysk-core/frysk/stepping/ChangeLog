2007-10-14  Andrew Cagney  <cagney@redhat.com>

	* TestStepping.java: Use assertEquals.

2007-09-28  Tim Moore  <timoore@redhat.com>

	* SteppingEngine.java: (SteppingObserver.updateExecuted): Always
	notify observers if a task hits the instruction observer.

2007-09-03  Tim Moore  <timoore@redhat.com>

	* SteppingEngine.java (addProcAux): Refactor common code into
	helper method.
	(init, addProc): Use it.

2007-08-23  Andrew Cagney  <cagney@redhat.com>

	* TestSteppingEngine.java: Mark as unresolvedOffUtrace, bug 4956.

2007-08-23  Mike Cvet  <mcvet@redhat.com>
	
	* SteppingEngine.java (ThreadLifeObservable): Also implements 
	TaskObserver.Terminated.
	(ThreadLifeObservable.updateTerminated): Added.
	(ThreadLifeObservable.updateTerminating): Added some logic to above
	method.
	(init): Add ThreadLifeObservable as a Terminated observer too.
	(addProc): Ditto.
	(detachProc): Remove ThreadLifeObservable as a Terminated observer.
	(SteppingObserver.updateExecuted): Only clean task data structures
	if the thread has terminated, as opposed to terminating.
	* StepTerminatedState.java (terminating): Added. 
	(StepTerminatedState): Added - takes a boolean
	(isTerminating): Added.
	* TaskStepEngine.java (isTerminating): Added.
	
	* TestSteppingEngine.java (testStepIntoMissingThread): Added. Tests a step
	into a thread which has terminated.

2007-08-20  Mike Cvet  <mcvet@redhat.com>

	* SteppingEngine.java: Added some more comments.
	(frameIdentifier): Redundant, removed.
	
	* TestSteppingEngine.java: Added comments.
	* TestStepping.java: Ditto.
	
	* State.java: Formatted.
	* InstructionStepState.java: Ditto.
	* LineStepState.java: Ditto.
	* NextInstructionStepState.java: Ditto.
	* NextInstructionStepTestState.java: Ditto.
	* RunningState.java: Ditto.
	* StepAdvanceState.java: Ditto.
	* StepOutState.java: Ditto.
	* StepOverState.java: Ditto.
	* StoppedState.java: Ditto.
	* StepTerminatedState.java: Ditto.
	* TestStepping.java: Ditto.
	* TestSteppingEngine.java: Ditto.
	* TaskStepEngine.java: Ditto.

2007-08-16  Mike Cvet  <mcvet@redhat.com>

	* State.java (isAlive): Added. Informs calling TaskStepEngine 
	whether or not the stepping task has terminated.
	* InstructionStepState.java (isAlive): Ditto.
	* LineStepState.java (isAlive): Ditto.
	* NextInstructionStepState.java (isAlive): Ditto.
	* NextInstructionStepTestState.java (isAlive): Ditto.
	* RunningState.java (isAlive): Ditto.
	* StepAdvanceState.java (isAlive): Ditto.
	* StepOutState.java (isAlive): Ditto.
	* StepOverState.java (isAlive): Ditto.
	* StoppedState.java (isAlive): Ditto.
	* StepTerminatedState.java: Added.
	* TaskStepEngine.java (message): Added - termination message for
	stepping tasks.
	(isAlive): Added.
	(getMessage): Added.
	(setMessage): Added.
	* SteppingEngine.java (ThreadLifeObservable.updateTerminating): Update
	the state of the stepping task as terminated and set a message.
	(SteppingObserver.updateExecuted): Check to see if the task has
	terminated before performing any operations on it.

2007-08-14  Mike Cvet  <mcvet@redhat.com>

	* SteppingEngine.java (removeBreakpoint): Make sure to reference the 
	breakpoint pulled out of the map, instead of static field variable.

2007-08-13  Mike Cvet  <mcvet@redhat.com>

	* TaskStepEngine.java (handleUpdate): Fixed bug which caused intermittent
	testcase failures.
	* StepOverTestState.java (handleUpdate): Ensure to remove breakpoint
	after all cases.
	* SteppingEngine.java (stepOut): Add breakpoint to breakpointMap.
	(removeBreakpoint): Only remove if it is contained in the map field.
	(SteppingBreakpoint.addedTo): Don't destroy the saved stepping state
	upon breakpoint addition.

2007-08-02  Mike Cvet  <mcvet@redhat.com>

	* TestStepping.java (testLineStepFunctionCall): Changed to use
	funit-iftester.S. Addresses #4883.
	(testLineStepIfStatementPass): Ditto.
	(testLineStepIfStatementFail): Ditto.
	(testLineStepFunctionReturn): Ditto.

	* TestSteppingEngine.java (testInstructionStepping): Now uses
	funit-stepping-asm.S. Updated required tokens and core
	requirements for test. Fixes #4883.
	(testInstructionSteppingList): Ditto.
	(testLineStepping): Ditto.
	(testLineSteppingList): Ditto.
	(testStepOver): Ditto.
	(testInstructionNext): Ditto.
	(testStepOut): Ditto.
	(testStepAdvance): Ditto.
	(testBreakpointing): Ditto.
	
	* TestStepping.java (testASMFramelessFunctionCall): New frameless
	function test.
	(testASMFramelessFunctionReturn): Ditto.

2007-08-01  Andrew Cagney  <cagney@redhat.com>

	* TestSteppingEngine.java (testInstructionStepping): Use
	SynchronizedOffspring.
	(testLineSteppingList): Ditto.
	(testInstructionSteppingList): Ditto.
	(testLineStepping): Ditto.
	(testStepOver): Ditto.
	(testInstructionNext): Ditto.
	(testStepOut): Ditto.
	(testStepAdvance): Ditto.
	(testBreakpointing): Ditto.
	(initTask): Change process parameter type to Offspring.
	* TestStepping.java (testLineStepFunctionCall): Ditto.
	(testLineStepIfStatementPass): Ditto.
	(testLineStepIfStatementFail): Ditto.
	(testLineStepFunctionReturn): Ditto.
	(testStepSigLongJmp): Ditto.
	(testStepGoto): Ditto.
	(testStepSigRaise): Ditto.
	(initTask): Change process parameter type to Offspring.

2007-08-01  Mike Cvet  <mcvet@redhat.com>

	* TestStepping.java (testASMFramelessFunctionStepOver): Added.
	(testASMFramelessFunctionStepOut): Added.
	* StepOverTestState.java (handleUpdate): Added logic for handling special
	case of landing in frameless function.

2007-07-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestSteppingEngine.java: Organized imports.
	* TestStepping.java: Replaced more Frames with DebugInfoFrames.
	
2007-07-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* SteppingEngine.java: Replaced Frame with DebugInfoFrame.
	* TestSteppingEngine.java: Ditto.
	* TestStepping.java: Ditto.	

2007-07-31  Mike Cvet  <mcvet@redhat.com>

	* TestStepping.java: Cleaned up.
	(AttachedObserver): Removed.
	(testFramelessFunctionEntry): New test. Tests stepping by an instruction 
	into a frameless function.
	* TestSteppingEngine.java: Cleaned up.
	(AttachedObserver): Removed.

2007-07-30  Mike Cvet  <mcvet@redhat.com>

	* TestSteppingEngine.java: Re-written from scratch. Fixes #4867.

2007-07-28  Andrew Cagney  <cagney@redhat.com>

	* TestStepping.java: Use Config.getPkgLibFile, and
	DaemonBlockedAtEntry(File).

2006-07-27  Mike Cvet  <mcvet@redhat.com>

	* InstructionStepState.java: Moved here from frysk.rt
	* LineStepState.java: Ditto.
	* NextInstructionStepState.java: Ditto.
	* NextInstructionStepTestState.java: Ditto.
	* RunningState.java: Ditto.
	* State.java: Ditto.
	* StepAdvanceState.java: Ditto.
	* StepOutState.java: Ditto.
	* StepOverState.java: Ditto.
	* SteppingEngine.java: Ditto.
	* StoppedState.java: Ditto.
	* TaskStepEngine.java: Ditto.
	* TestSteppingEngine.java: Ditto.
	* TestStepping.java: New file. Fixes #4853.
	
	* TestStepping.java: Marked a couple of tests as broken, via 4855.
	
	* TestStepping.java (testStepSigLongJmp): Enabled test.
	
	* SteppingEngine.java (SteppingBreakpoint.addedTo): Make a call to
	continueForStepping() to ensure the Task runs.
	* TestStepping.java (testASMFunctionStepOut): Enabled test, fixed #4855.
	* TestStepping.java (testASMFunctionStepOver): Ditto.
