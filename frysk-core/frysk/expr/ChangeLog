2007-11-17  Andrew Cagney  <cagney@redhat.com>

	* CompletionException.java (getMessage()): New.
	* TestCompletion.java (testOneCompletion()): New.
	(testTwoCompletions()): New.
	(testNoCompletions()): Replace testNothingToDo().
	(complete(String,String[],int)): New.
	* DetailedAST.java: New.
	* ExprSymTab.java (complete(String,List)): New.
	* ScratchSymTab.java (complete(String,List)): New.

	* TestCompletion.java: New.
	* ExpressionFactory.java: New.

2007-11-16  Andrew Cagney  <cagney@redhat.com>

	* TabException.java: Delete.
	* CExpr.g (bTabPressed): Delete.
	(tab_expression): Delete.
	(primary_expression): Fold into scope_expression; when IDENT_TAB
	throw IncompleteIdentifierException.
	(IDENT_TAB): Rename TAB.
	* CompletionException.java: New.
	* IncompleteTokenException.java: New.
	* IncompleteIdentifierException.java: New.
	* IncompleteMemberException.java: New.

2007-11-15  Andrew Cagney  <cagney@redhat.com>

	* TestArithmetics.java (eval(String)): Do not set setASTNodeClass.
	* TestVariables.java (eval(String)): Ditto.

2007-11-15  Teresa Thomas  <tthomas@redhat.com>
	
	* CExprEvaluator.g: Update.

2007-11-15  Andrew Cagney  <cagney@redhat.com>

	* CExpr.g (tid_expression): Delete.
	(TAB_IDENT): Fold into TAB.
	
	* CExpr.g (options): Delete ASTLabelType.
	* CExprEvaluator.g (options): Ditto.
	* ExprAST.java: Delete.
	
2007-11-14  Andrew Cagney  <cagney@redhat.com>

	* CExprAnnotator.g: Delete.

2007-11-14  Teresa Thomas  <tthomas@redhat.com>
	
	* CExprEvaluator.g: Give task memory to 
	all logical operators.

2007-11-13  Teresa Thomas  <tthomas@redhat.com>

	* CExprEvaluator.g: Update.
	
2007-11-09  Teresa Thomas  <tthomas@redhat.com>
	
	* CExprEvaluator.g: Update evaluator to
	use Arithmetic Unit.
	
2007-11-08  Teresa Thomas  <tthomas@redhat.com>

	* ScratchSymTab.java (getWordSize): Return word size 
	of frysk proc's architecture.

2007-11-06  Teresa Thomas  <tthomas@redhat.com>
	
	* CExprEvaluator.g (STAR): Use Arithmetic Unit.
	(TIMESEQUAL): Ditto.
	(DIVIDE): Ditto.
	(DIVIDEEQUAL): Ditto.
	(MOD): Ditto.
	(MODEQUAL): Ditto.
	
2007-11-06  Teresa Thomas  <tthomas@redhat.com>
	
	* CExprEvaluator.g (MINUS): Use Arithmetic Unit.
	(MINUSEQUAL): Ditto.
	
2007-11-05  Teresa Thomas  <tthomas@redhat.com>

	* CExprEvaluator.g (INDEX): Update.
	
	* TestbedSymTab.java (getValueFIXME): Delete.

2007-11-05  Teresa Thomas  <tthomas@redhat.com>
	* CExprEvaluator.g (PLUS): Use getALU.
	(PLUSEQUAL): Use getALU.
	* ScratchSymTab.java (getWordSize): Return bogus 
	word size when no task attached.
    
2007-10-29  Teresa Thomas  <tthomas@redhat.com>

    * CExprEvaluator.g (REFERENCE): Delete.
    * CExpr.g (REFERENCE): Delete.
    (SUBSCRIPT): Delete.
	* ScratchSymTab.java (getValueFIXME): Delete.
	* ExprSymTab.java (getValueFIXME): Delete.

2007-10-26  Teresa Thomas  <tthomas@redhat.com>

	* CExprEvaluator.g (INDEX): New.
	* CExpr.g (INDEX): New.
	
2007-10-26  Sami Wagiaalla  <swagiaal@redhat.com>

	Changed return type	from Variable to ObjectDeclaration
	* CExprAnnotator.g: Updated.

2007-10-26  Sami Wagiaalla  <swagiaal@redhat.com>

	* ExprSymTab.java (getVariable): Changed return type
	from Variable to ObjectDeclaration
	* TestbedSymTab.java: Updated.
	* ScratchSymTab.java: Updated.

2007-10-19  Teresa Thomas  <tthomas@redhat.com>

	* ScratchSymTab.java (getWordSize): New.
	* ExprSymTab.java (getWordSize): New.
	* TestbedSymTab.java (getWordSize): New.
	* CExprEvaluator.g (ADDRESS_OF): Updated; Use getWordSize
	(SIZEOF): New.
	* CExprAnnotator.g (POINTERTO): Removed.
	* CExpr.g: Simplified; Operator precedence redefined, 
	expressions renamed, SIZEOF added, fixed bug with parenthesis.
	

2007-10-17  Andrew Cagney  <cagney@redhat.com>

	* TestbedSymTab.java: Add a simple symbol table.
	* TestVariables.java: New.

	* TestArithmetics.java: New.
	* TestbedSymTab.java: New.
	* ScratchSymTab.java: New.

2007-10-16  Andrew Cagney  <cagney@redhat.com>

	* Completer.g: Delete for now; workaround makefile race.

2007-10-16  Teresa Thomas  <tthomas@redhat.com>

	* CExprAnnotator.g (POINTERTO): Add.
	* CExpr.g (POINTERTO): Implement using MEMBER and
	MEMORY operations.
	
2007-10-12  Andrew Cagney  <cagney@redhat.com>

	* ExprSymTab.java (getValue(String)): Do not throw
	NameNotFoundException.
	(getVariable(String)): Ditto.
	(getValueFIXME(String)): Ditto.
	* CExprEvaluator.g: Ditto; ditto for OperationNotDefinedException
	and InvalidOperatorException.
	* CExprAnnotator.g: Ditto.

	* Completer.g: Delete unused variables.

2007-10-12  Teresa Thomas  <tthomas@redhat.com>

	* CExprAnnotator.g (MEMBER): Add.
	
2007-10-12  Andrew Cagney  <cagney@redhat.com>

	* Completer.g: New file.

2007-10-12  Teresa Thomas  <tthomas@redhat.com>

	* CExpr.g: Add MEMBER. 
	(DOT): Use MEMBER instead of REFERENCE.
	(astDotExpr): Delete.
	(AMPERSAND): Use postfix_expression.
	(STAR): Ditto.
	* CExprEvaluator.g (MEMBER): Implement.

2007-10-12  Sami Wagiaalla  <swagiaal@redhat.com>

	Moved Variable.java from frysk.scope to frysk.value
	* ExprSymTab.java: Updated.

2007-10-12  Andrew Cagney  <cagney@redhat.com>

	* TabException.java: Extend RuntimeException; make package
	private.
	* CExpr.g: Remove all explict throws of TabException.

2007-10-11  Teresa Thomas  <tthomas@redhat.com>

	* CExprAnnotator.g (MEMORY): Use expr.
	(ADDRESS_OF): Use expr.
	* ExprSymTab.java (getMemoryFIXME): Deleted.
	
2007-10-10  Teresa Thomas  <tthomas@redhat.com>
	
	* CExprEvaluator.g (MEMORY): Refactor, Use dereference.

	* ExprSymTab.java (taskMemory): New.

2007-10-09  Andrew Cagney  <cagney@redhat.com>

	* CExprEvaluator.g (CExprEvaluator(ExprSymTab)): Replace
	CExprEvaluator(int,ExprSymTab).
	* CExprAnnotator.g: Use ExprSymTab.getType(Variable).
	(CExprAnnotator(ExprSymTab)): Replace
	CExprAnnotator(Frame,ExprSymTab).
	* ExprSymTab.java (order()): New.
	(getTask()): Delete.
	(getType(Varable)): New.
	(getMemoryFIXME(String)): Rename getMemory(String).
	(getValueFIXME(String)): Rename getValue(String).
	
2007-10-09  Teresa Thomas  <tthomas@redhat.com>

	* CExprEvaluator.g (ADDRESS_OF): Use getTask.
	* ExprSymTab.java (getOrder): Deleted. 
	(getTask): New.
	
	* ExprSymTab.java (getAddress): Deleted. 

2007-10-04  Sami Wagiaalla  <swagiaal@redhat.com>

	Moved scope structures to frysk.scopes.
	* ExprSymTab.java: Updated.
	* CExprAnnotator.g: Ditto.
	
2007-10-03  Teresa Thomas  <tthomas@redhat.com>

	* ExprSymTab.java (getOrder): New.
	* CExprEvaluator.g (ADDRESS_OF): Use addressOf.

2007-09-25  Stan Cox  <scox@redhat.com>

	* ExprSymTab.java: Rename from CppSymTab.java.
	* ExprAST.java: New.
	* CExprAnnotator.g: New.
	* CExpr.g: Use ExprAST.java.
	* CExprEvaluator.g: Likewise.

2007-09-24  Andrew Cagney  <cagney@redhat.com>

	* CppParser.sed: Delete.

2007-09-17  Stan Cox  <scox@redhat.com>

	* CExpr.g: Rename from cpp.g.
	* CExprEvaluator.g: Moved TreeParser from cpp.g.

2007-09-06  Andrew Cagney  <cagney@redhat.com>

	* CppSymTab.java (get(String)): Replace get(DebugInfoFrame,String).
	(get(ArrayList)): Replace get(DebugInfoFrame,ArrayList).
	(getAddress(String)): Replace getAddress(DebugInfoFrame,String).
	(getMemory(String)): Replace getMemory(DebugInfoFrame,String).
	* cpp.g: Update.

2007-09-05  Andrew Cagney  <cagney@redhat.com>

	* CppSymTab.java (put(DebugInfoFrame,String,Value)): Delete.
	(putUndefined()): Delete.
	* cpp.g: Remove putUndefined calls.

2007-08-30  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Remove calls to Value.getTextFIXME.

2007-08-29  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Remove references to Type.getTypeIdFIXME.

2007-08-28  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Replace Type.assign with Value.assign.  Do not cast
	parameter to Type.createValue.

2007-08-23  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Replace ArithmeticType Value factory calls with calls to
	ArithmeticType.createValue.

2007-08-19  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Replace IntegerType with SignedType and UnsignedType.

2007-08-15  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Replace Type.getName with Type.toPrint.

	* cpp.g: Use IntegerType and FloatingPointType.

	* cpp.g: Type.getTypeId renamed to Type.getTypeIdFIXME.

2007-08-15  Stan Cox  <scox@redhat.com>

	* cpp.g (variable): Support array[x:y] and array@n.

2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Replace Value.getText with Value.getTextFIXME.

2007-08-10  Stan Cox  <scox@redhat.com>

	* cpp.g (IDENT): Allow leading '$'.

2007-07-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* cpp.g: Replaced Frame with DebugInfoFrame.
	* CppSymTab.java: Ditto.

2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Update, lib.dw and lib.elf merged into lib.dwfl.

2007-07-12  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser): Add Frame parameter.  Change all callers.

2007-06-19  Stan Cox  <scox@redhat.com>

	* cpp.g (unary_expression): Add TILDE and NOT.
	(expr): Likewise.

2007-06-14  Stan Cox  <scox@redhat.com>

	* cpp.g (expr): Use long for OCTALINT, DECIMALINT, HEXADECIMALINT.

2007-06-12  Andrew Cagney  <cagney@redhat.com>

	* CppLexer.sed: Delete.
	* CppParserTokenTypes.sed: Delete.
	* CppTreeParser.sed: Delete.
	* CppTreeParserTokenTypes.sed: Delete.

2007-06-11  Andrew Cagney  <cagney@redhat.com>

	* cpp.g (references): Delete unused "s1".
	(expr): Delete unused "s2".

2007-06-07  Andrew Cagney  <cagney@redhat.com>

	* CppParserTokenTypes.sed: Empty.
	* CppTreeParser.sed: Ditto.
	* CppTreeParserTokenTypes.sed: Ditto.
	* CppLexer.sed: Ditto.
	* CppParser.sed: Ditto; except for workaround of GCJ bug.

2007-06-06  Andrew Cagney  <cagney@redhat.com>

	* cpp.g: Replace wildcard with explict imports.

2007-05-17  Stan Cox  <scox@redhat.com>

	* cpp.g (pm_expression): Handle class member tab completion.
	(variable): Chain as REFERENCE instead of separate ARRAY_REF/CLASS_REF.
	(CppTreeParser): Remove exprlist. Add references, subscript_or_member.
	* CppSymTab.java: Remove get(String s, ArrayList components).

2007-05-08  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser): newXVariable signature.

2007-04-15  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser): Use ArithmeticType.

2007-03-20  Stan Cox  <scox@redhat.com>

	* CppSymTab.java (getAddress): New.
	(getMemory): New.
	* cpp.g (imaginaryTokenDefinitions): Add ADDRESS_OF and MEMORY.
	(expr): Likewise.

2007-02-14  Stan Cox  <scox@redhat.com>

	* cpp.g (CppParser.DOT): Handle class members.
	(CppLexer.NUM): Rewritten.
	(CppTreeParser.CLASS_REF): New.
	* CppSymTab.java (get): New for class members.
	* RunCppParser.java (SymTab.get): Likewise.
	* RunCppTreeParser.java (rctpsymTab.get): Likewise.

2007-01-29  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser.expr): Add identifier and exprlist.
	* RunCppTreeParser.java (rctpsymTab.get): New offset method.
	* RunCppParser.java (SymTab.get): New.
	* CppSymTab.java (get): New.

2007-01-26  Mark Wielaard  <mark@klomp.org>

	* RunCppParser.java: Removed unused import FileArgumentCallback.
	(SymTab.put): Remove unused variable lCandidates.
	(main): Removed unused variable runParser and symTab.

2007-01-26  Mark Wielaard  <mark@klomp.org>

	* RunCppTreeParser.java (rctpsymTab): Mark as static class. Don't
	mark variable symTab as static.
	* cpp.g: Call all static newXVariable() methods through class type.
	(sInputExpression): Uncomment because unused.

2006-12-20  Stan Cox  <scox@redhat.com>

	* cpp.g (expr): Add NameNotFoundException.

2006-12-11  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Delete.

2006-12-06  Nurdin Premji  <npremji@redhat.com>

	* RunCppTreeParser.java: Added (C).
	* CppSymTab.java: Ditto.

2006-12-01  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser.expr): Add builtin types to CAST

2006-11-20  Andrew Cagney  <cagney@redhat.com>

	* RunCppParser.java (SymTab): Rename .symTab; nest within
	RunCppParser class.

2006-11-16  Stan Cox  <scox@redhat.com>

	* RunCppParser.java: Rename frysk.lang to frysk.value.
	* RunCppTreeParser.java: Rename frysk.lang to frysk.value.

2006-11-15  Stan Cox  <scox@redhat.com>

	* RunCppParser.java (put): Don't add duplicate symbols.
	(ParserCompletor): Tab complete using symTab entries.

2006-11-03  Stan Cox  <scox@redhat.com>

	* CppSymTab.java (putUndefined): New.
	* RunCppParser.java (putUndefined): New.
	* RunCppTreeParser.java (putUndefined): New.
	* cpp.g (CppTreeParser): Use putUndefined.  Add BaseTypes.

2006-09-29  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser): Don't create "convenience" variables.

2006-09-27  Nurdin Premji  <npremji@redhat.com>

	* RunCppParser.java: Changed to use getopt command line parser.

2006-09-18  Stan Cox  <scox@redhat.com>

	* RunCppParser.java (main): Handle float and double.
	* cpp.g (NUM): Likewise.
	(CAST): Likewise.

2006-09-12  Stan Cox  <scox@redhat.com>

	* CppSymTab.java: New file.
	* RunCppTreeParser.java (rctpsymTab): Use CppSymTab.
	* RunCppParser.java (symtab): Use CppSymTab.
	* cpp.g (CppTreeParser): Use CppSymTab.

2006-08-21  Stan Cox  <scox@redhat.com>

	* cpp.g (CppTreeParser): Add HEXADECIMALINT and OCTALINT.

2006-08-11  Stan Cox  <scox@redhat.com>

	* cpp.g (CppParser): Add CAST, FUNC_CALL, unary_expression, 
	unary_expression_no_incdec, primitive_type.
	(CppTreeParser): Add MINUSMINUS, PLUSPLUS, CAST, FUNC_CALL.	
	* CppLexer.sed: Update.
	* CppParser.sed: Update.
	* CppTreeParser.sed: Update.
	
2006-08-04  Stan Cox  <scox@redhat.com>

	* CppTreeParser.sed: Rewrite.
	* CppParser.sed: Rewrite.
	* cpp.g: Reformat.  Eliminate non-determinism.
	* RunCppParser.java (main): Add verboseOption.
	
2006-07-25  Adam Jocksch  <ajocksch@redhat.com>

	* cpp.g: Reverted to version 1.10, changes generate ecj unused variable
	warnings.

2006-07-27  Stan Cox  <scox@redhat.com>

	* cpp.g: Reformat using emacs antlr-mode style.

2006-07-26  Stan Cox <scox@redhat.com>

	* cpp.g (signed_pm_expression): New, for eliminating non-determinism.
	(variable): Likewise.
	(expr): Handle unary negation.
	* CppTreeParser.sed: Eliminate warnings in antlr generated file.
	* CppParser.sed: Eliminate warnings in antlr generated file.
	
2006-06-16  Yao Qi  <qiyaoltc@cn.ibm.com>

	* TabException.java : Change class TabException to public.

2005-11-28  Andrew Cagney  <cagney@redhat.com>

	* Makefile.inc: Delete, handled by Makefile.gen.sh.

2005-11-25  Andrew Cagney  <cagney@redhat.com>

	* Makefile.inc (ANTLR): Define.  Use.

2005-11-14  Tarun Khanna  <tkhanna@redhat.com>

	* CppParser.sed: made the commenting out of unused variables more
	generic.
	* CppTreeParser.sed: made the commenting out of unused variables more
	generic.

2005-11-07  Tarun Khanna  <tkhanna@redhat.com>

	* RunCppParser.java: commented out code to remove warnings.
	* RunCppTreeParser.java: commented out code to remove warnings.

2005-11-07  Tarun Khanna  <tkhanna@redhat.com>

	* CppTreeParser.sed: Patched to fix ecj errors..

2005-11-03  Tarun Khanna  <tkhanna@redhat.com>

	* RunCppLexer.java: Removed code that was not needed anymore.
	* cpp.g:  Removed some code because it was not needed anymore.
	* RunCppTreeParser.java:  New file to test the expression evaluator.

2005-11-01  Jeff Johnston  <jjohnstn@redhat.com>

	* CppLexer.sed: Modify offsets where needed so resultant code
	will compile with more stringent compiler.
	* CppParser.sed: Ditto.
	* CppTreeParser.sed: Ditto.

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* cpp.g:  Augmented the grammar. Now it handles all predefined binary
	operations.

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* RunCppParser.java:  Modified, to add some exceptions and error
	handling code.
	* cpp.g:  Augmented the grammar to handle more operations

2005-10-19  Tarun Khanna  <tkhanna@redhat.com>

	* CppLexer.sed: Added some more comment patterns.
	* CppParser.sed:  Same..
	* CppParserTokenTypes.sed:  Same..
	* CppTreeParserTokenTypes.sed:	Same...
	* RunCppParser.java:  Added a minor symbol table support.
	* cpp.g:  Added some more rules to the evaluator and 
	symbol table support.

2005-10-18  Tarun Khanna  <tkhanna@redhat.com>

	* cpp.g:  Added expression evaluator (tree walker). 
	* Makefile.inc:	Added commands to generate new expression evaluator
	source files.(CppParserTokenTypes.java, CppParserTokenTypes.java, 
	CppTreeParser.java).
	* CppTreeParser.sed:  New sed file for commenting extra imports in 
	CppTreeParser.java.
	* CppLexer.sed:	Modified to adjust changes in cpp.g.
	* CppTreeParserTokenTypes.sed:	New sed file.
	* CppParserTokenTypes.sed: New sed file.
	* RunCppParser.java:  Added the expression evaluator code.

2005-10-03  Andrew Cagney  <cagney@redhat.com>

	* Makefile.inc (frysk/expr/CppParser.java)
	(frysk/expr/CppLexer.java): Move sed commands to separate file.
	* CppParser.sed, CppLexer.sed: New files.
	* RunCppParser.java: Delete unused local "t".

2005-09-10  Andrew Cagney  <cagney@redhat.com>

	* Makefile.inc: New file.
	* TabException.java: Re-indent
	* cpp.g, RunCppLexer.java: Delete unnecessary imports.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/expr/ to frysk/expr/.

2005-09-01  Andrew Cagney  <cagney@redhat.com>
	
	* .cvsignore: Add.

2005-08-31  Tarun Khanna  <tkhanna@redhat.com>Orders

	* cpp.g: Minor modifications to add custom exception handling in
	case of parsing errors.
	* RunCppParser.java: Cleaned up the code to handle exceptions
	correctly.
	* RunCppParser.java: Added custom exception handling to handle
	parsing errors generated due to incorrect expressions entered by
	the users.

2005-08-23  Tarun Khanna  <tkhanna@redhat.com>

	* RunCppParser: Minor modifications to reflect the change of file
	name.
	* RunCppLexer: Ditto

2005-08-19  Andrew Cagney  <cagney@redhat.com>

	* TestCppParser.java: Rename to ...
	* RunCppParser.java: ... this.
	* TestCppLexer.java: Rename to ...
	* RunCppLexer.java: ... this.

2005-08-18  Tarun Khanna  <tkhanna@.redhat.com>

	* com/redhat/fedora/frysk/expr: New Directory that contains the
	code for C++ expression parser.
	* cpp.g: New file that contains the grammar for parsing c++
	expressions.
	* TestCppParser.java: New file to test the C++ expression parser.
	* TestCppLexer.java: New file to test the Lexer for C++
	expressions.
	* TabException.java: New file that contains the class definition
	for Tab Exception.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
