2007-05-07  Tim Moore  <timoore@redhat.com>

	* WaitEventLoop.java (signalBuilder.signal): Print signal name
	when logging.

2007-05-03  Andrew Cagney  <cagney@redhat.com>

	* WaitEventLoop.java: Make package-private.
	* PollEventLoop.java: Make package-private.
	* SignalEvent.java (getSig): Make public.

2007-04-19  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java (ExecuteRequest): Replace Request class.
	(execute): Call request.request.
	(serializeExecuteRequests): Delete.

2007-04-18  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java (isCurrentThread): If TID is -1, set the thread
	using updateTid.

	* Request.java (isEventLoopThread): New.
	(request): Make protected, assert that this isn't the event-loop
	thread and the object is locked.
	* EventLoopTestBed.java (EventRequest): Update.

2007-04-17  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: If the "tid" changes throw a RuntimeException.

	* EventLoop.java (tid): Initialize as -1.
	(updateTid): New.
	(wakeupBlockedEventLoop): New.
	(wakeupIfBlocked): Call wakeupBlockedEventLoop.
	(runPending, runPolling, run): Call updateTid.
	
2007-04-16  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java (start): New; synchronize with event-loop thread
	before returning.  Mark thread as daemon.
	(run, running): Provide synchronization.
	(runEventLoop): Make private, do not set tid.

	* Request.java: New.
	* EventLoop.java (isCurrentThread): New; use.
	* EventLoopTestBed.java (Request, testRequest, testManyRequests)
	(testRequestThrow, testRequestImmediate): Replace with ...
	(EventRequest, RunnableEvent, RunnableExecuteEvent)
	(RunnableRequestEvent, verifyRunnableEvent, testExecuteRunnable)
	(testRequestRunnable, verifyMany, testManyExecutes)
	(testmanyRequests, Throw, verifyThrow, testExecuteThrow)
	(testRequestThrow, Immediate, verifyImmediate)
	(testExecuteImmediate, testRequestImmediate): ... these.

2007-04-15  Andrew Cagney  <cagney@redhat.com>

	* EventLoopTestBed.java (testRequest, testManyRequests)
	(testRequestThrow, testRequestImmediate): New.

	* EventLoop.java (EventLoop): Add constructor.
	(signalEmpty, signalAdd, block): Add abstract methods.
	* PollEventLoop.java, WaitEventLoop.java: Refactor common code
	into EventLoop.java.

2007-04-04  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java (add(WaitBuilder): New.
	* PollEventLoop.java (add(WaitBuilder)): Implement.
	* WaitEventLoop.java (add(WaitBuilder)): Clean up.
	
	* EventLoopTestBed.java (tearDown): New, drain any signals.
	(testCountDownTimersAndSignals): Remove use of Itimer.real.
	* TestWaitEventLoop.java: New.
	* WaitEventLoop.java: New.

	* TestEventLoop.java: Delete.  Mostly copied to ...
	* EventLoopTestBed.java: ... here.  New file.
	* TestPollEventLoop.java: New file.
	
2007-04-03  Andrew Cagney  <cagney@redhat.com>

	* PollEventLoop.java: Replace frysk.sys.Poll.Observer with
	frysk.sys.PollBuilder.

2007-04-02  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Refactor Poll code into PollEventLoop.java.
	* PollEventLoop.java: New file.
	* TestSigChild.java: Use PollEventLoop.
	* TestEventLoop.java: Ditto.

2007-03-28  Mark Wielaard  <mark@klomp.org>

	* TimerEvent.java (logger): Use frysk.event for getLogger().

2007-02-24  Tim Moore  <timoore@redhat.com>

	* EventLoop.java (runEventLoop): Add some logging.

2007-01-10  Nurdin Premji  <npremji@redhat.com>

	* EventLoop.java (EventLoop): Use Logger.getLogger instead of EventLogger.get.
	EventLogger.get should only be called to set up the logger(s).

2006-12-11  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Delete.

2006-12-06  Nurdin Premji  <npremji@redhat.com>

	* TestSigChild.java: Ditto.
	* RequestStopEvent.java: Added (C).	

2006-11-14  Andrew Cagney  <cagney@redhat.com>

	* TestSigChild.java: Use frysk.junit.TestCase.
	* TestEventLoop.java: Ditto.

2006-10-02  Nurdin Premji  <npremji@redhat.com>

	* RequestEventLoopStop.java: Added, seems to be a common event.
	* EventLoop (add): Added more detail to log, include event.
	* TestEventLoop.java (DidExecute): Added toString.
	(testScheduleBeforeRun) use RequestEventLoopStop Event.	

2006-09-11  Andrew Cagney  <cagney@redhat.com>

	* TimerEvent.java: Pass just "frysk" to getLogger, work-around.

2006-08-16  Andrew Cagney  <cagney@redhat.com>

	* TimerEvent.java: Specify "frysk.event" as the logger, delete
	unused import of frysk.Config.

2006-05-25  Stan Cox  <scox@redhat.com>

	* EventLoop.java (wakeupIfBlocked): Change to FINEST.
	(add): Change to FINEST.
	(remove): Change to FINEST.
	(checkForTimerEvents): Change to FINEST.
	(processSignal): Change to FINEST.
	* TimerEvent.java: Change to FINEST.
	(reSchedule): Change to FINEST.


2006-03-14  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Update; frysk.sys.Poll simplified, member
	SignalSet deleted, Fds parameter removed.

2006-03-12  Andrew Cagney  <cagney@redhat.com>

	* SignalEvent.java (toString): Add.
	* EventLoop.java: Update log messages.
	* PollEvent.java (toString): Ditto.

2006-03-09  Andrew Cagney  <cagney@redhat.com>

	* TestEventLoop.java: Update calls to Signal.tkill, int signum arg
	replaced with Sig arg.

	* EventLoop.java (pollObserver): Update Poll.Observer.signal, now
	takes a Sig.
	(processSignal): Simplify.
	
	* Signal.java: Delete.
	* SignalEvent.java (sig, getSig): Add, use Sig instead of int for
	signal.
	* EventLoop.java (add SignalEvent, remove SignalEvent)
	(processSignal SignalEvent): Update.
	* TestEventLoop.java: Update.

	frysk.sys.Sig.MEMBER renamed to frysk.sys.Sig._MEMBER.
	* TestEventLoop.java: Update.
	* TestSigChild.java: Update.

2006-02-10  Andrew Cagney  <cagney@redhat.com>

	* TestSigChild.java: New.

2006-01-30  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Instead of frysk.Config, import
	frysk.EventLogger.

2005-11-26  Andrew Cagney  <cagney@redhat.com>

	* SignalEvent.java: Specify frysk.event.Signal, work around GCJ
	bug.

2005-11-16  Stan Cox  <scox@scox.rdu.redhat.com>

	* Signal.java (Signal): Add logger.
	(getSignal,Signal): Add logging.
	* TimerEvent.java (TimerEvent): Add logger.
	(TimerEvent,reSchedule) Add logging.

2005-11-14  Stan Cox  <scox@scox.rdu.redhat.com>

	* EventLoop.java (EventLoop): Move logger setup to Config.EventLogger.

2005-11-04  Stan Cox  <scox@redhat.com>

	* EventLoop.java (EventLoop): Add logger.
	(wakeupIfBlocked,add,remove,checkForTimerEvents,processSignal)
	(runEventLoop,requestStop,runPending) Add logging.

2005-10-08  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Extend Thread.  Set .tid in .runEventLoop.  Wrap
	.runEventLoop code in a try.finally to ensure that on return
	.isGoingToBlock is clear.

	* TestEventLoop.java: Add SleepThread to testAsync.

	* TestEventLoop.java: Add testAsync, and helper classes
	EventThread, TimerThread, and SignalThread.
	* EventLoop.java: Add private .tid, .isGoingToBlock,
	.wakeupIfBlocked.  In constructor, add Sig.IO to the signal set.
	Instead of synchronised .timerEvents, .pendingEvents, and
	.signalHandlers, make the accessor methods synchronised.  Add
	.wakeupIfBlocked calls, and updates to .isGoingToBlock where
	needed.

	* EventLoop.java: Add .remove, and .runEventLoop.  Rewrite
	.runPending, .runPolling, and .run to use .runEventLoop.  Replace
	.millisecondsToNextTimer with getTimerEventMillisecondTimeout.
	Relocate .requestStop, and .checForTimerEvents.

	* TestEventLoop.java: Use Tid.get, add .eventTid replacing Pid.get
	calls.

2005-10-07  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Make pendingEvents a synchronizedList.  Rename
	.appendEvent to .add.  Add method .addToPending.
	* TestEventLoop.java: Update.
	
	* Signal.java: New.
	* SignalEvent.java: Extend Signal.java.
	* EventLoop.java: Update.  Make .signalHandlers a Map.  Rename
	.addHandler to .add.
	* TestEventLoop.java: Update.

	* TimerEvent.java: Add .getTimeMillis, modify .reSchedule so that
	it returns true if a re-schedule is required.  Rename .value to
	.timeMillis, and .period to .periodMills, make private.
	* EventLoop.java: Update.  Make .timerEvents a SortedMap, rename
	.addTimerEvent to .add,
	* TestEventLoop.java: Update.
	
2005-09-27  Andrew Cagney  <cagney@redhat.com>

	* Event.java, EventLoop.java, PollEvent.java, SignalEvent.java:
	More comment changes.

2005-09-18  Andrew Cagney  <cagney@redhat.com>

	* package.html: New file.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/event/ to frysk/event/.

2005-08-22  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Rename TimerEvent's "removeEvent" to "remove".
	For "runPolling", remove the timer event.
	* TestEventLoop.java: Update.
	
	* TestEventLoop.java: Add "testSignalHandler".
	* SignalEvent.java: Add "hashCode" and "equals", remove
	"compareTo".
	* EventLoop.java: Add "remove" for SignalEvent.  Rename
	"addSignalEvent" to "addHandler", handle duplicate handlers.
	Rename "signalEvents" to "signalHandlers".  Add "processSignal".

2005-08-14  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Fix comments.
	
	* TestEventLoop.java: Fix race condition in "testEventLoop", add
	"testScheduleBeforeRun", simplify other tests.
	
	* EventLoop.java: Replace "stop" with "requestStop".  In "run",
	process pending events first.
	
2005-08-10  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Add public methods "runPolling" and
	"runPending", update to use "run".

2005-08-08  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java, TestEventLoop.java: Add removeEvent for timer
	events, test.

	* Event.java, EventLoop.java, SignalEvent.java,
	TestEventLoop.java, TimerEvent.java: Add support for periodic
	timers to TimerEvent, test.

	* EventLoop.java: On creation, clear Poll's SignalSet.
	* TestEventLoop.java: Convert to junit.

2005-08-05  Andrew Cagney  <cagney@redhat.com>
	
	* .cvsignore: New.
	* EventLoop.java: Fix ECJ build errors.

2005-07-27  Andrew Cagney  <cagney@redhat.com>

	* EventLoop.java: Update to use the static Poll.SignalSet methods.

2005-07-21  Andrew Cagney  <cagney@redhat.com>

	* Event.java: New file.
	* EventLoop.java: New file.
	* PollEvent.java: New file.
	* SignalEvent.java: New file.
	* TestEventLoop.java: New file.
	* TimerEvent.java: New file.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
