2007-07-27  Andrew Cagney  <cagney@redhat.com>

	* TestCorefileByteBuffer.java: Use Config.getPkgDataFile.

2007-07-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Now passes a
	printSourceLibrary to StacktraceAction.
	From previous refactoring the test was mistakingly comparing a
	string to itself; fixed.

2007-07-24  Andrew Cagney  <cagney@redhat.com>

	* TestCorefileByteBuffer.java: Update; frysk.proc.TestLib moved to
	frysk.testbed.TestLib.
	* TestLinuxCore.java: Ditto.

2007-07-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestLinuxCore.java: Used a StringWriter wrapped in a 
	PrintWriter to print stack traces.

2007-07-17  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxTaskMemory): Remove hasIsa
	test. 

2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Update, lib.dw and lib.elf merged into
	lib.dwfl.
	* CorefileByteBuffer.java: Ditto.
	* LinuxHost.java: Ditto.
	* LinuxProc.java: Ditto.
	* LinuxTask.java: Ditto.
	* SOLibMapBuilder.java: Ditto.
	* TestCorefileByteBuffer.java: Ditto.

2007-07-16  Phil Muldoon  <pmuldoon@redhat.com>

	* TestCorefileByteBuffer.java(testCorefileByteBufferSlice):
	Refactor to use more complex test-core-x86.
	(testCoreFileByteBufferPeek): Ditto.
	(testCoreFileByteBufferMapOverrun): Ditto.
	(testCoreFileByteBufferMapUnderrun): Ditto.
	(testCoreFileByteBufferSequentialGet): Ditto.
	(testCoreFileByteBufferPeekArray): Ditto.
	(testCoreFileByteBufferPoke): Ditto.
	

2007-07-16  Mark Wielaard  <mwielaard@redhat.com>

	* TestLinuxCore.java (testInsertedBreakpoint): New method.
	(getFunctionEntryAddress): New private method.
	(CodeObserver): New static helper class.
	(AttachedObserver): Likewise.


2007-07-13  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxHostPopulation): Refactored
	to use test-core-x86.
	(testLinuxProcPopulation): Ditto.
	(testLinuxProcAuxV): Ditto.
	(testLinuxTaskMemory): Ditto.
	(testLinuxTaskPopulation): Ditto. Rewritten to test multiple
	threads.
	

2007-07-02  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxTask.java (LinuxTask): Take FP Register data as a 
	parameter.
	(sendrecRegisterBanks): Rewrite to either present a blank
	page or actual register data.
	* LinuxProc.java (sendRefresh):Account for two different
	optimizations in floating point note data.
	* TestLinuxCore.java (testLinuxCoreFileMaps) Remove runPending()
	and requestRefresh calls.
	(testLinuxCoreFileStackTrace): Ditto.
	(testLinuxHostPopulation): Ditto.
	(testLinuxProcPopulation): Ditto.
	(testLinuxProcAuxV): Ditto.
	(testLinuxTaskMemory): Ditto.
	

2007-06-25  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (sendrecExe): If a constructed filename
	is available, use that instead of args[0].

2007-06-22  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (sendRefresh): Gate refreshes depending
	on whether a refresh has happned in the past.
	(LinuxHost): Do an initial refresh in the constructor.

2007-06-20  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (LinuxProc): Look in <pwd>, then other
	common locations for exe before giving up.
	(LinuxProc): Append new path to exe.

2007-06-19  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Remove
	x86_64 broken case.
	* LinuxProc.java (constructEnhancedMapMetadata): Tighten
	vDSO check.Tighten map range checking.
	(getLinkmapAddress): Account for alignment on x86_64 platforms.
	* LinuxTask.java (sendrecRegisterBanks): Pedantically set
	wordSize, ignoring inherited wordSize.

2007-06-18  Andrew Cagney  <cagney@redhat.com>

	* Rename package frysk.proc.corefile to frysk.proc.dead.

2007-06-15  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileMaps): Rewrite
	to account for out-of-order and  permRead = false maps.
	(findCoreMap): New.

2007-06-13  Phil Muldoon  <pmuldoon@redhat.com>

	* MapAddressHeader.java: New.
	* LinkmapBuilder.java: New.
	* SOLibMapBuilder.java: New.

	* CorefileByteBuffer.java (MapAddress): Delete. Use
	MapAddressHeader instead.
	(CorefileByteBuffer): Add a parameter to take meta data.
	Do not attempt to construct own meta data.
	Set Endian and Word size for data read from elf header.	
	(CorefileByteBuffer(File)): Build own meta data.
	(peek): Rewrite. Navigate provided meta data to find the peek 
	offset and the file name of that offset.
	(buildElfMaps): Rewrite using MapAddressHeader.
	(isFileSane): Simplify. Check for null on backing
	corefile.
	(findMetaData): New. Consolidate all meta data look-ups
	here.
	(checkCorefileAddress): New. Answer whether this data is in the
	core file, or whether the buffer has to revert to the solib.
	(convertAddresstoOffset): Use MapAddressHeader.
	(openCoreFileElf): New.
	(closeCoreFileElf): New.
	(setEndianWordSize): New. Set word and endian size for buffer
	from the core file elf header.

	* LinuxHost.java (LinuxHost): Add backing exe and core file
	references.
	(LinuxHost): New constructor that takes an exe path.

	* LinuxProc.java (LinuxProc): Add backing exe reference.
	Add metaData[] store and boolean to indicate meta data built.
	Derive executable name from corefile is unspecified.
	(getCommand): Deleted. Unused.
	(sendrecExe): Rewrite to derive exe and full path from
	sendrecCmdLine.
	(getMemory): Check if meta data is built. If not, build it.
	(sendrecMaps): Implement. Build meta data if needed, and
	refactor data into MemoryMap format.
	(constructMetaData): New.Bake either basic or rich meta
	data.
	(constructBasicMapMetaData): New. Bake basic meta data only from
	the core file.
	(constructEnhandedMapMetaData): New. Bake rich meta data from
	the basic meta data and the solibs found in the backing exe's
	linkmap.
	(isExeProvided): New. Return whether exe backing is provided.
	(getDynamicSegmentAddress): New. Return tuple of core file
	dynamic segment address and size.
	(getExeDynamicSegmentAddress): New. Get backing exe dynamic segment's
	address.
	(getLinkmapAddress): New. Get the address of the linkmap table, as
	derived from the dynamic segment.
	(getExeEntryPoint): New. Return the  backing exe's entry point.
	(getExeInterpreterAddress): New. Return the address of the backing
	exe's interpreter.
	(getExeInterpreterName): New. Return the name of the backing
	exe's interpreter.
	(getCorefileEntryPoint): New. Return the entry point of the
	backing core file.
	(getCorefileVDSOAddress): New. Return the address of the VDSO
	segment in this corefile.
	(openElf): New. Helper function to open elf files.
	(DynamicSegmentTuple): New. Private class to hold dynamic segment
	location information.
	(Linkmap): New. Private class to hold the linkmap table
	information.

	* LinuxProcState.java (handleTaskDetachCompleted, handleDetach):
	Handle detach requests.

	* TestLinuxCore.java (testLinuxCoreFileMaps): New.
	(testLinuxCoreFileStackTrace): New.
	(giveMeAProc): New.
	(ConstructCore): New.
	

2007-05-23  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (sendRefresh):  Ignore refreshAll for now.
	Always refresh all. Will rework when refresh refactor
	is complete.
	* TestLinuxCore.java: Replace requestRefreshXXX(true) 
	with requestRefreshXXX();

	* TestLinuxCore.java: Got lost in refactor.
	Rescued and refactored.

2007-05-22  Phil Muldoon  <pmuldoon@redhat.com>

	* CorefileByteBuffer.java (finalize): Remove.
	(isFileOpen): Remove.
	(peek): Rewrite to use StatelessFile.
	(isFileSane): Test for object creation.
	(openFile): Rewrite. Use StatlessFile.
	(CorefileByteBuffer): Switch order of file open
	and elf address offset table creation.
	* TestCorefileByteBuffer (testCoreFileByteBufferMapOverrun): Move
	overrun location.

2007-05-18  Andrew Cagney  <cagney@redhat.com>

	* LinuxProc.java (sendRefresh): Make public.

	* LinuxTask.java (sendContinue, sendStepInstruction, sendStop)
	(sendSetOptions, sendAttach, sendDetach, sendSyscallContinue)
	(startTracingSyscalls, stopTracingSyscalls): Delete.

2007-05-15  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (sendrecMaps): New method. Implement.

2007-05-15  Andrew Cagney  <cagney@redhat.com>

	* LinuxProcState.java: Make all handlers public matching
	frysk.proc.ProcState.

2007-05-10  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Moved to here from frysk.proc.
	* LinuxHost.java: Moved to here from frysk.proc.
	* LinuxHostState.java: Moved to here from frysk.proc.
	* LinuxProc.java: Moved to here from frysk.proc.
	* LinuxProcState.java: Moved to here from frysk.proc.
	* LinuxTask.java: Moved to here from frysk.proc.
	* LinuxTaskState.java: Moved to here from frysk.proc.

2007-04-17  Phil Muldoon  <pmuldoon@redhat.com>

	* CorefileByteBuffer.java (subBuffer): New.
	* TestCorefileByteBuffer.java (testCoreFileByteBufferMapOverrun):
	New
	(testCoreFileByteBufferMapUnderrun): New.
	(testCoreFileByteBufferPeek) Add some different segment peeks().
	(testCoreFileByteBufferSequentialGet): Removed, test replaced by..
	(testCorefileByteBufferSlice): New. 

2007-04-16  Phil Muldoon  <pmuldoon@redhat.com>

	* TestCorefileByteBuffer.java (testCoreFileByteBufferPoke):
	Rewrite expected fail test to conform with JUnit 3.8.2 FAQ.
	(testCoreFileByteBufferSequentialGet): Ditto.

2007-04-13  Phil Muldoon  <pmuldoon@redhat.com>

	* corefile/: Created.
	* TestCorefileByteBuffer.java: New.
	* CorefileByteBuffer.java: New.


Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:

