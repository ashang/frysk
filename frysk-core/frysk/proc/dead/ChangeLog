2008-01-03  Andrew Cagney  <cagney@redhat.com>

	* LinuxExeProcState.java: Delete.
	* LinuxExeTaskState.java: Delete.

	* DeadTask.java (requestAddInstructionObserver(TaskObserver.Instruction)): New.
	(requestDeleteInstructionObserver(TaskObserver.Instruction)): New.

2008-01-03  Phil Muldoon  <pmuldoon@redhat.com>

	* TestCoreRegs.java (testFloatingRegisters): Enable.
	(testVectorRegisters): Enable.

2008-01-02  Andrew Cagney  <cagney@redhat.com>

	* LinuxCoreHost.java: Rename LinuxHost.java.
	* LinuxCoreProc.java: Rename LinuxProc.java.
	* LinuxCoreTask.java: Rename LinuxTask.java.
	* TestLinuxCore.java: Update.

	* DeadTask.java (set(TaskState)): Delete.
	
	* LinuxTaskState.java: Delete.
	* DeadTask.java: Update.
	* LinuxExeTask.java: Update.
	* LinuxTask.java: Update.

	* DeadTask.java (requestUnblock, requestAddClonedObserver)
	(requestAddForkedObserver, requestAddTerminatedObserver): Ignore
	requests.

	* DeadTask.java (oldState, newState): Delete.
	(getState()): Delete; replace with exception.
	(oldState()): Delete; replace with exception.

	* DeadProc.java (setStateFIXME(ProcState)): Delete.
	* LinuxProc.java (getInitialState(boolean)): Delete.
	* LinuxExeProc.java (getInitialState(boolean)): Delete.
	* LinuxProcState.java: Delete.

	* DeadProc.java (oldState, newState): Delete.
	(getStateFIXME()): Simplify.
	(oldState()): Delete.
	(InstructionAction): Delete; replace with panic.
	(BreakpointAction): Ditto.
	(SyscallAction): Ditto.
	
	* LinuxProcState.java (handleDetach(Proc,boolean)): Delete.
	(handleTaskDetachCompleted(Proc,Task)): Delete.
	(handleRemoval(Proc)): Delete.
	(handleRefresh(Proc)): Delete.
	(handleDeleteObservation(Proc,Observation)): Delete.
	* DeadProc.java: Simplify.
	
	* LinuxProcState.java (handleAddObservation(Proc,Observation)): Delete.
	* DeadProc.java (handleAddObservation(TaskObservation)): Delete.
	
	* DeadProc.java (getStateFIXME()): New.
	(handleAddObservation(TaskObservation)): New.
	(oldState()): New.
	(performDetach()): New.
	(performRemoval()): New.
	(performTaskAttachCompleted(Task)): New.
	(performTaskDetachCompleted(Task)): New.
	(performTaskDetachCompleted(Task,Task)): New.
	(requestAddCodeObserver(Task,TaskObservable,TaskObserver.Code,long)): New.
	(requestAddInstructionObserver(Task,TaskObservable,TaskObserver.Instruction)): New.
	(requestAddObserver(Task,TaskObservable,TaskObserver)): New.
	(requestAddSyscallObserver(Task,TaskObservable,TaskObserver)): New.
	(requestDeleteCodeObserver(Task,TaskObservable,TaskObserver.Code,long)): New.
	(requestDeleteInstructionObserver(Task,TaskObservable,TaskObserver.Instruction)): New.
	(requestDeleteObserver(Task,TaskObservable,TaskObserver)): New.
	(requestDeleteSyscallObserver(Task,TaskObservable,TaskObserver)): New.
	(requestRefresh()): New.
	(setStateFIXME(ProcState)): New.

	* DeadTask.java (requestUnblock(TaskObserver)): New.
	(requestAddClonedObserver(TaskObserver.Cloned)): New.
	(requestDeleteClonedObserver(TaskObserver.Cloned)): New.
	(requestAddAttachedObserver(TaskObserver.Attached)): New.
	(requestDeleteAttachedObserver(TaskObserver.Attached)): New.
	(requestAddForkedObserver(TaskObserver.Forked)): New.
	(requestDeleteForkedObserver(TaskObserver.Forked)): New.
	(requestAddTerminatedObserver(TaskObserver.Terminated)): New.
	(requestDeleteTerminatedObserver(TaskObserver.Terminated)): New.
	(requestAddTerminatingObserver(TaskObserver.Terminating)): New.
	(requestDeleteTerminatingObserver(TaskObserver.Terminating)): New.
	(requestAddExecedObserver(TaskObserver.Execed)): New.
	(requestDeleteExecedObserver(TaskObserver.Execed)): New.
	(requestAddSyscallsObserver(TaskObserver.Syscalls)): New.
	(requestDeleteSyscallsObserver(TaskObserver.Syscalls)): New.
	(requestAddSignaledObserver(TaskObserver.Signaled)): New.
	(requestDeleteSignaledObserver(TaskObserver.Signaled)): New.
	(requestAddCodeObserver(TaskObserver.Code)): New.
	(requestDeleteCodeObserver(TaskObserver.Code)): New.

	* DeadTask.java (handleAddObservation(TaskObservation)): New.
	(handleDeleteObservation(TaskObservation)): New.
	(performContinue()): New.
	(performRemoval()): New.
	(performAttach()): New.
	(performDetach(boolean)): New.
	(newState): New.
	(oldState): New.
	(getState()): New.
	(set(TaskState)): New.
	(oldState()): New.
	(handleUnblock(TaskObserver)): New.
	(getStateFIXME()): New.

2007-12-20  Andrew Cagney  <cagney@redhat.com>

	* LinuxTask.java (sendrecRegisterBuffersFIXME()): Delete.
	* LinuxExeTask.java (sendrecRegisterBuffersFIXME()): Delete.
	(sendrecRegisterBanks()): Update.

	* CorefileRegisterBanksFactory.java: Update; RegisterBankArrayMap
	renamed to BankArrayRegisterMap.
	
	BankRegisterMap renamed to RegisterBankArrayMap.
	* CorefileRegisterBanksFactory.java: Update.

2007-12-19  cagney  <cagney@redhat.com>

	Bank register code moved to frysk.bank.
	* LinuxExeTask.java: Update.
	* CorefileRegisterBank.java: Update.
	* LinuxExeTask.java: Update.

2007-11-29  Andrew Cagney  <cagney@redhat.com>

	* TestCoreRegs.java (testFloatRegisters())
	(testVectorRegisters()): New; mark as unresolved.
	
	* TestCoreRegs.java: New.

2007-11-29  Phil Muldoon  <pmuldoon@redhat.com>

	* CorefileByteBuffer.java (peek): Tweak error message
	on peek() at illegal address.

2007-11-26  Sami Wagiaalla  <swagiaal@redhat.com>

	Added a boolean for printing source	libraries to Frame.toPrint().
	* TestLinuxCore.java: Updated, and disabled printing of libraries.

2007-11-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestLinuxCore.java: Updated.

2007-11-23  Mark Wielaard  <mwielaard@redhat.com>

	* LinuxExeTask.java (bankBuffers): New final field.
	(LinuxExeTask): Setup bankBuffers and explicitly set pc.
	(sendrecRegisterBanks): Use cached bankBuffers.

2007-11-19  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testInsertedBreakpoint): Pass executable
	name to corefile LinuxHost .
	
	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Rename
	variables, document test case, check for empty stacktraces.	

	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Pass
	executable location to LinuxHost. Fix 5352. Remove unresolved.
	Fix 11-15 indention oops.


2007-11-17  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileStackTrace()): Mark as
	unresolved, bug 5353.

2007-11-15  pmuldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Use DaemonBlockedAtSignal.
	Create live map first, then core.

2007-11-08  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (LinuxHost): Check for null Elf Header

	* LinuxHost.java (LinuxHost): Check in exe is set to
	null.
	

2007-11-07  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (LinuxHost): Create up front ET_CORE check in
	constructor.

2007-11-06  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (LinuxProc): Do not search for exe beyond pwd.
	* LinuxHost.java (LinuxHost): Build a CorefileStatus.
	(getStatus): New.
	(DeconstructCoreFile.update): Build status from Proc.
	* CorefileStatus.java: New

2007-10-18  Rick Moseley  <rmoseley@redhat.com>

	* LinuxExeHost.java: Add DeconstructExeFile class and update
	method.
	* LinuxExeProc.java: Pass ElfData to the constructor; add 
	sendrecISA method; change MapAddressHeader to MemoryMap in
	buildMetaData.
	* LinuxExeTask.java: Merger my changes with changes below; return
	info instead of null for sendrecISA and sendrecIsa.
	* ExeByteBuffer.java: Change MapAddressHeader to MemoryMap.

2007-10-17  Andrew Cagney  <cagney@redhat.com>

	* DeadHost.java: New.
	* DeadProc.java: New.
	* DeadTask.java: New.
	* LinuxExeTask.java: Extend DeadTask.
	* LinuxExeProc.java: Extend DeadProc.
	* LinuxExeHost.java: Extend DeadHost.
	* LinuxHost.java: Extend DeadHost.
	* LinuxProc.java: Extend DeadProc.
	* LinuxTask.java: Extend DeadTask.

	* LinuxHost.java: Update; import frysk.proc.FindProc.
	* LinuxExeHost.java: Ditto.

2007-10-16  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxTask.java (sendrecRegisterBuffersFIXME): Delete contents,
	Return simulateRegisterBanks().
	(simulateRegisterBanks): New.
	(sendrecRegisterBanks): Return contents of simulateRegisterBanks.

2007-10-14  Andrew Cagney  <cagney@redhat.com>

	* LinuxTask.java: Update; Use ISA.order() and ISA.wordSize().

2007-10-12  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Update; Use Task.getRegister and
	Task.getBankRegisterByName.

	* LinuxExeTask.java (sendrecRegisterBanks()): Implement.
	* LinuxTask.java (sendrecRegisterBanks()): Ditto.

	* CorefileRegisterBanksFactory.java: New.

	* LinuxExeTask.java: Update; renamed sendrecRegisterBanks() to
	sendrecRegisterBuffersFIXME.
	* LinuxTask.java: Ditto.

2007-10-10  Rick Moseley  <rmoseley@redhat.com>

	* LinuxExeProc.java: Return correct state and instantiate
	LinuxExeTask with a non-null initial state.

2007-10-08  Rick Moseley  <rmoseley@redhat.com>

	* LinuxExeProc.java: Make sure executable is registered
	with CLI properly.

2007-10-08  Mark Wielaard  <mwielaard@redhat.com>

	* TestLinuxCore.java (Symbol): New static helper class.
	(getFunctionEntryAddress): Use Dwfl directly instead of
	constructing Elf and Dwarf objects directly.
	
2007-10-02  Andrew Cagney  <cagney@redhat.com>

	* LinuxProc.java (sendrecISA()): Add.
	* LinuxTask.java (sendrecISA()): Add.
	* LinuxExeTask.java (sendrecISA()): Add.

2007-09-28  Rick Moseley  <rmoseley@redhat.com>

	* TestLinuxExe.java: Remove unused/commented out code.

2007-09-21  Rick Moseley <rmoseley@redhat.com>

	* ExeByteBuffer.java: New.
	* LinuxExeHost.java: New.
	* LinuxExeProc.java: New.
	* LinuxExeProcState.java: New.
	* LinuxExeTask.java: New.
	* LinuxExeTaskState.java: New.
	* TestLinuxExe.java: New.

2007-08-30  Phil Muldoon  <pmuldoon@redhat.com>

	* LinkmapBuilder.java (getString): Rewrite. Simplify.
	
	* LinkmapBuilder.java: Reformat file.
	

2007-08-28  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (constructEnhancedMapMetadata): Pass in base address
	from linkmap.
	* LinkmapBuilder.java (getString): New. Construct filename from address.
	(construct): Move linkmap lib string construction to getString.
	* SOLibMapBuilder.java (construct): Pass in new base_address.
	If base_address + vaddr = 0, discard mapping.
	(openElf): Sanity check the file.

2007-08-28  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (getLinkmapAddress): Do not call getMemory(). Create
	own temporary instance of CorefileByteBuffer.
	(constructEnhancedMapMetadata): Ditto.

2007-08-24  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (constructEnhancedMapMetadata): Remove vdso
	labelling from here to ...
	(constructBasicMapMetadata): .... Here.
	* ChangeLog. Fix typos and email for last entry.

2007-08-17  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (LinuxProc): If user sets exeFile to null,
	do not attempt to locate exe. Do not create two Files for
	one exe.
	* LinuxHost.java (LinuxHost): Check if user intentionally set
	exeFile to null, rather than accepting null as default value.

2007-08-10  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestLinuxCore.java: Added virtualFrames boolean argument
	to StackTraceActions.

2007-08-09  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Use frysk.testbed.LegacyOffspring for now.

2007-08-09  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxTask.java: (sendrecRegisterBanks): Export
	xfpregisters.
	* LinuxProc.java (sendRefresh): And in xfpreg support.

2007-08-09  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Replace DetachedAckProcess with
	SlaveOffspring.createChild.
	
2007-08-08  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Replace frysk.testbed.TestLib.AckProcess
	with frysk.testbed.SlaveOffspring.

2007-08-02  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (LinuxHost): New private constructor. Take
	an boolean, doRefresh. Set other public constructors to use this.

2007-07-31  Mark Wielaard  <mwielaard@redhat.com>

	* TestLinuxCore.java (testLinuxTaskPopulation): Change "elf" to
	"elflags".

2007-07-28  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Use Config.getPkgDataFile.

2007-07-27  Andrew Cagney  <cagney@redhat.com>

	* TestCorefileByteBuffer.java: Use Config.getPkgDataFile.

2007-07-27  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Now passes a
	printSourceLibrary to StacktraceAction.
	From previous refactoring the test was mistakingly comparing a
	string to itself; fixed.

2007-07-24  Andrew Cagney  <cagney@redhat.com>

	* TestCorefileByteBuffer.java: Update; frysk.proc.TestLib moved to
	frysk.testbed.TestLib.
	* TestLinuxCore.java: Ditto.

2007-07-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* TestLinuxCore.java: Used a StringWriter wrapped in a 
	PrintWriter to print stack traces.

2007-07-17  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxTaskMemory): Remove hasIsa
	test. 

2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Update, lib.dw and lib.elf merged into
	lib.dwfl.
	* CorefileByteBuffer.java: Ditto.
	* LinuxHost.java: Ditto.
	* LinuxProc.java: Ditto.
	* LinuxTask.java: Ditto.
	* SOLibMapBuilder.java: Ditto.
	* TestCorefileByteBuffer.java: Ditto.

2007-07-16  Phil Muldoon  <pmuldoon@redhat.com>

	* TestCorefileByteBuffer.java(testCorefileByteBufferSlice):
	Refactor to use more complex test-core-x86.
	(testCoreFileByteBufferPeek): Ditto.
	(testCoreFileByteBufferMapOverrun): Ditto.
	(testCoreFileByteBufferMapUnderrun): Ditto.
	(testCoreFileByteBufferSequentialGet): Ditto.
	(testCoreFileByteBufferPeekArray): Ditto.
	(testCoreFileByteBufferPoke): Ditto.
	

2007-07-16  Mark Wielaard  <mwielaard@redhat.com>

	* TestLinuxCore.java (testInsertedBreakpoint): New method.
	(getFunctionEntryAddress): New private method.
	(CodeObserver): New static helper class.
	(AttachedObserver): Likewise.


2007-07-13  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxHostPopulation): Refactored
	to use test-core-x86.
	(testLinuxProcPopulation): Ditto.
	(testLinuxProcAuxV): Ditto.
	(testLinuxTaskMemory): Ditto.
	(testLinuxTaskPopulation): Ditto. Rewritten to test multiple
	threads.
	

2007-07-02  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxTask.java (LinuxTask): Take FP Register data as a 
	parameter.
	(sendrecRegisterBanks): Rewrite to either present a blank
	page or actual register data.
	* LinuxProc.java (sendRefresh):Account for two different
	optimizations in floating point note data.
	* TestLinuxCore.java (testLinuxCoreFileMaps) Remove runPending()
	and requestRefresh calls.
	(testLinuxCoreFileStackTrace): Ditto.
	(testLinuxHostPopulation): Ditto.
	(testLinuxProcPopulation): Ditto.
	(testLinuxProcAuxV): Ditto.
	(testLinuxTaskMemory): Ditto.
	

2007-06-25  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (sendrecExe): If a constructed filename
	is available, use that instead of args[0].

2007-06-22  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (sendRefresh): Gate refreshes depending
	on whether a refresh has happned in the past.
	(LinuxHost): Do an initial refresh in the constructor.

2007-06-20  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (LinuxProc): Look in <pwd>, then other
	common locations for exe before giving up.
	(LinuxProc): Append new path to exe.

2007-06-19  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileStackTrace): Remove
	x86_64 broken case.
	* LinuxProc.java (constructEnhancedMapMetadata): Tighten
	vDSO check.Tighten map range checking.
	(getLinkmapAddress): Account for alignment on x86_64 platforms.
	* LinuxTask.java (sendrecRegisterBanks): Pedantically set
	wordSize, ignoring inherited wordSize.

2007-06-18  Andrew Cagney  <cagney@redhat.com>

	* Rename package frysk.proc.corefile to frysk.proc.dead.

2007-06-15  Phil Muldoon  <pmuldoon@redhat.com>

	* TestLinuxCore.java (testLinuxCoreFileMaps): Rewrite
	to account for out-of-order and  permRead = false maps.
	(findCoreMap): New.

2007-06-13  Phil Muldoon  <pmuldoon@redhat.com>

	* MapAddressHeader.java: New.
	* LinkmapBuilder.java: New.
	* SOLibMapBuilder.java: New.

	* CorefileByteBuffer.java (MapAddress): Delete. Use
	MapAddressHeader instead.
	(CorefileByteBuffer): Add a parameter to take meta data.
	Do not attempt to construct own meta data.
	Set Endian and Word size for data read from elf header.	
	(CorefileByteBuffer(File)): Build own meta data.
	(peek): Rewrite. Navigate provided meta data to find the peek 
	offset and the file name of that offset.
	(buildElfMaps): Rewrite using MapAddressHeader.
	(isFileSane): Simplify. Check for null on backing
	corefile.
	(findMetaData): New. Consolidate all meta data look-ups
	here.
	(checkCorefileAddress): New. Answer whether this data is in the
	core file, or whether the buffer has to revert to the solib.
	(convertAddresstoOffset): Use MapAddressHeader.
	(openCoreFileElf): New.
	(closeCoreFileElf): New.
	(setEndianWordSize): New. Set word and endian size for buffer
	from the core file elf header.

	* LinuxHost.java (LinuxHost): Add backing exe and core file
	references.
	(LinuxHost): New constructor that takes an exe path.

	* LinuxProc.java (LinuxProc): Add backing exe reference.
	Add metaData[] store and boolean to indicate meta data built.
	Derive executable name from corefile is unspecified.
	(getCommand): Deleted. Unused.
	(sendrecExe): Rewrite to derive exe and full path from
	sendrecCmdLine.
	(getMemory): Check if meta data is built. If not, build it.
	(sendrecMaps): Implement. Build meta data if needed, and
	refactor data into MemoryMap format.
	(constructMetaData): New.Bake either basic or rich meta
	data.
	(constructBasicMapMetaData): New. Bake basic meta data only from
	the core file.
	(constructEnhandedMapMetaData): New. Bake rich meta data from
	the basic meta data and the solibs found in the backing exe's
	linkmap.
	(isExeProvided): New. Return whether exe backing is provided.
	(getDynamicSegmentAddress): New. Return tuple of core file
	dynamic segment address and size.
	(getExeDynamicSegmentAddress): New. Get backing exe dynamic segment's
	address.
	(getLinkmapAddress): New. Get the address of the linkmap table, as
	derived from the dynamic segment.
	(getExeEntryPoint): New. Return the  backing exe's entry point.
	(getExeInterpreterAddress): New. Return the address of the backing
	exe's interpreter.
	(getExeInterpreterName): New. Return the name of the backing
	exe's interpreter.
	(getCorefileEntryPoint): New. Return the entry point of the
	backing core file.
	(getCorefileVDSOAddress): New. Return the address of the VDSO
	segment in this corefile.
	(openElf): New. Helper function to open elf files.
	(DynamicSegmentTuple): New. Private class to hold dynamic segment
	location information.
	(Linkmap): New. Private class to hold the linkmap table
	information.

	* LinuxProcState.java (handleTaskDetachCompleted, handleDetach):
	Handle detach requests.

	* TestLinuxCore.java (testLinuxCoreFileMaps): New.
	(testLinuxCoreFileStackTrace): New.
	(giveMeAProc): New.
	(ConstructCore): New.
	

2007-05-23  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxHost.java (sendRefresh):  Ignore refreshAll for now.
	Always refresh all. Will rework when refresh refactor
	is complete.
	* TestLinuxCore.java: Replace requestRefreshXXX(true) 
	with requestRefreshXXX();

	* TestLinuxCore.java: Got lost in refactor.
	Rescued and refactored.

2007-05-22  Phil Muldoon  <pmuldoon@redhat.com>

	* CorefileByteBuffer.java (finalize): Remove.
	(isFileOpen): Remove.
	(peek): Rewrite to use StatelessFile.
	(isFileSane): Test for object creation.
	(openFile): Rewrite. Use StatlessFile.
	(CorefileByteBuffer): Switch order of file open
	and elf address offset table creation.
	* TestCorefileByteBuffer (testCoreFileByteBufferMapOverrun): Move
	overrun location.

2007-05-18  Andrew Cagney  <cagney@redhat.com>

	* LinuxProc.java (sendRefresh): Make public.

	* LinuxTask.java (sendContinue, sendStepInstruction, sendStop)
	(sendSetOptions, sendAttach, sendDetach, sendSyscallContinue)
	(startTracingSyscalls, stopTracingSyscalls): Delete.

2007-05-15  Phil Muldoon  <pmuldoon@redhat.com>

	* LinuxProc.java (sendrecMaps): New method. Implement.

2007-05-15  Andrew Cagney  <cagney@redhat.com>

	* LinuxProcState.java: Make all handlers public matching
	frysk.proc.ProcState.

2007-05-10  Andrew Cagney  <cagney@redhat.com>

	* TestLinuxCore.java: Moved to here from frysk.proc.
	* LinuxHost.java: Moved to here from frysk.proc.
	* LinuxHostState.java: Moved to here from frysk.proc.
	* LinuxProc.java: Moved to here from frysk.proc.
	* LinuxProcState.java: Moved to here from frysk.proc.
	* LinuxTask.java: Moved to here from frysk.proc.
	* LinuxTaskState.java: Moved to here from frysk.proc.

2007-04-17  Phil Muldoon  <pmuldoon@redhat.com>

	* CorefileByteBuffer.java (subBuffer): New.
	* TestCorefileByteBuffer.java (testCoreFileByteBufferMapOverrun):
	New
	(testCoreFileByteBufferMapUnderrun): New.
	(testCoreFileByteBufferPeek) Add some different segment peeks().
	(testCoreFileByteBufferSequentialGet): Removed, test replaced by..
	(testCorefileByteBufferSlice): New. 

2007-04-16  Phil Muldoon  <pmuldoon@redhat.com>

	* TestCorefileByteBuffer.java (testCoreFileByteBufferPoke):
	Rewrite expected fail test to conform with JUnit 3.8.2 FAQ.
	(testCoreFileByteBufferSequentialGet): Ditto.

2007-04-13  Phil Muldoon  <pmuldoon@redhat.com>

	* corefile/: Created.
	* TestCorefileByteBuffer.java: New.
	* CorefileByteBuffer.java: New.


Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:

