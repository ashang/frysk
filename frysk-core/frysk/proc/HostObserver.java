// This file is part of the program FRYSK.
//
// Copyright 2006, Red Hat Inc.
//
// FRYSK is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// FRYSK is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with FRYSK; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
// 
// In addition, as a special exception, Red Hat, Inc. gives You the
// additional right to link the code of FRYSK with code not covered
// under the GNU General Public License ("Non-GPL Code") and to
// distribute linked combinations including the two, subject to the
// limitations in this paragraph. Non-GPL Code permitted under this
// exception must only link to the code of FRYSK through those well
// defined interfaces identified in the file named EXCEPTION found in
// the source code files (the "Approved Interfaces"). The files of
// Non-GPL Code may instantiate templates or use macros or inline
// functions from the Approved Interfaces without causing the
// resulting work to be covered by the GNU General Public
// License. Only Red Hat, Inc. may make changes or additions to the
// list of Approved Interfaces. You must obey the GNU General Public
// License in all respects for all of the FRYSK code and other code
// used in conjunction with FRYSK except the Non-GPL Code covered by
// this exception. If you modify this file, you may extend this
// exception to your version of the file, but you are not obligated to
// do so. If you do not wish to provide this exception without
// modification, you must delete this exception statement from your
// version and license this file solely under the GPL without
// exception.

package frysk.proc;

/**
 * Observable events generated by a Host.
 */

public interface HostObserver
    extends Observer
{
    /**
     * Notify any observers that a refresh (or synchronize) operation
     * is being performed.
     *
     * Frysk tracks un-attached processes by occasionally refreshing
     * its model from <tt>/proc</tt>.  This notifies the the observer
     * of both the start and end of such an operation.  Observers may
     * want to disable gui refresh during the refresh period.
     *
     * XXX: This is a draft interface, and currently is not
     * implemented.
     */
    public interface Refresh
	extends HostObserver
    {
	/**
	 * A synchronize operation is starting.
	 */
	void notifyStart ();
	/**
	 * A synchyronize operation is ending.
	 */
	void notifyEnd ();
	/**
	 * This observer's prefered sync rate.  Of course, if other
	 * observers request a shorter refresh rate, that will instead
	 * be used.
	 */
	long refreshRate ();
	/**
	 * Should the Task database also be refreshed (Strongly
	 * recommended against; very expensive).
	 */
	boolean refreskTaskDb ();
    }

    /**
     * Notify any observers of changes to both the Proc and Task
     * databases.
     *
     * The Host maintaints databases of all known Host and Task
     * objects.  These databases are updated as tasks and processes
     * are discovered or lost; be it through a refresh or more direct
     * tracking of a task.
     *
     * XXX: This is a draft interface, and currently is not
     * implemented.
     */
    public interface Db
	extends HostObserver
    {
	/**
	 * A Process has been added to the database.
	 */
	void notifyProcAdded (Proc proc);
	/**
	 * A process has been removed from the database.
	 */
	void notifyProcRemoved (Proc proc);
	/**
	 * A Task has been added to the database.
	 */
	void notifyTaskAdded (Task task);
	/**
	 * A Task has been removed from the database.
	 */
	void notifyTaskRemoved (Task task);
    }
}
