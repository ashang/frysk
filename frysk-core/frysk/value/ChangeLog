2007-11-07  Teresa Thomas  <tthomas@redhat.com>

	* FloatingPointUnit.java (multiply): New.
	(divide): New.
	(mod): New.		
	* IntegerUnit.java (multiply): New.
	(divide): New.
	(mod): New.	
	* ArithmeticUnit.java (divide): New.
	(multiply): New.
	(timesEqual): New.
	(divideEqual): New.	
	(mod): New.	
	(modEqual): New..		
	* ArithmeticType.java (multiply): Delete.
	(timesEqual): Delete.
	(divide): Delete.
	(divideEqual): Delete.
	(mod): Delete
	(modEqual): Delete.
	* TypeDecorator.java (multiply): Delete.
	(timesEqual): Delete.
	(divide): Delete.
	(divideEqual): Delete.
	(mod): Delete.
	(modEqual): Delete.	
	* Type.java (multiply): Delete.
	(timesEqual): Delete.
	(divide): Delete.	
	(divideEqual): Delete.	
	(mod): Delete.	
	(modEqual): Delete.	
	* TestValue.java: Updated.

2007-11-06  Teresa Thomas  <tthomas@redhat.com>

	* InvalidOperatorException.java 
	(InvalidOperatorException(Type, Type, String)): New.
	
	* ArithmeticUnit.java (subtract): New.
	(minusEqual): New.	
	* AddressUnit.java (subtract): New.
	* IntegerUnit.java (subtract): New.
	* FloatingPointUnit.java (subtract): New.	
	* Type.java (subtract): Delete.
	(minusEqual): Delete.
	* ArithmeticType.java (subtract): Delete.
	(minusEqual): Delete.	
	* TypeDecorator.java (subtract): Delete.
	(minusEqual): Delete.
	* TestValue.java: Updated.	

	* IntegerType.java: Double dispatch for ALU simplified.
	* ArrayType.java: Ditto.
	* PointerType.java: Ditto.
	* FloatingPointType.java: Ditto.	
	* Type.java: Updated.

2007-11-05  Sami Wagiaalla  <swagiaal@redhat.com>

	* CompositeType.java (add): Added javadoc.

2007-11-05  Teresa Thomas  <tthomas@redhat.com>

	* Type.java (index): Task memory added to parameter list.
	* PointerType.java (index): New.
	* TypeDecorator.java (index): Updated.
	* TestArray.java (testIndexOneD): Updated.
	(testIndexTwoD): Updated.
	* TestPointer.java (testCharPointerIndex): New test.
	* ArrayType.java (dereference): Comments added.

2007-11-05  Teresa Thomas  <tthomas@redhat.com>

	* TestValue.java: Update.
	* ArithmeticUnit.java (plusEqual): New.
	* ArithmeticType.java (add): Delete.
	(plusEqual): Delete.
	* Type.java (add): Delete.
	(plusEqual): Delete.	
	* TestArray.java (testAdd): New test.
	* AddressUnit.java (AddressUnit(ArrayType, int wordSize)): New. 
	(addArray): New.
	* ArrayType.java (getALU): Give wordSize to ALU.
	* FloatingPointType.java (getALU): Ditto.
	* IntegerType.java (getALU): Ditto.
	* PointerType.java (getALU): Ditto.
	* Type.java (getALU): Ditto.	
	* TypeDecorator.java (add): Delete.
	(plusEqual): Delete.

	* ByteBufferLocation.java (offset): New.
	(ByteBufferLocation): Updated.
	(getAddress): Implemented.

2007-11-05  Stan Cox  <scox@redhat.com>

	* Value.java (asLong): Get type via gettUltimateType.
	(asBigInteger): Likewise.
	(doubleValue): Likewise.

2007-11-02  Stan Cox  <scox@redhat.com>

	* CompositeType.java: Fix inheritance whitespace display.

2007-11-02  Teresa Thomas  <tthomas@redhat.com>

	* FloatingPointUnit.java: Ctors	redefined.
	* IntegerUnit.java (IntegerUnit): Parameter types
	changed.
	* AddressUnit.java (AddressUnit): Ditto.
	* IntegerType.java (getALU(IntegerType)): Updated. 
	* FloatingPointType.java (getALU(IntegerType)): Updated.	

2007-11-01  Teresa Thomas  <tthomas@redhat.com>

	* ArrayType.java (get): Delete.
	* TestArray.java (testArrayOfArrayOfNumber): Delete.

2007-11-01  Teresa Thomas  <tthomas@redhat.com>
	* IntegerUnit.java: New file.
	* FloatingPointUnit.java: New file.
	* AddressUnit.java: New file.
	* ArithmeticUnit.java: New file.	
	* ArithmeticType.java (add): Use getALU.
	* Type.java (getALU(Type)): New.
	(getALU(IntegerType)): New. 
	(getALU(FloatingPointType)): New.
	* IntegerType.java (getALU(Type)): New.
	(getALU(IntegerType)): New. 
	(getALU(FloatingPointType)): New.
	(getALU(PointerType)): New.    
	* FloatingPointType.java (getALU(Type)): New.
	(getALU(IntegerType)): New. 
	(getALU(FloatingPointType)): New.
	* PointerType.java: (getALU(Type)): New.
	(getALU(IntegerType)): New. 
	(getALU(FloatingPointType)): New.
	(getALU(PointerType)): New.     
	(add): Delete.

2007-11-01  Stan Cox  <scox@redhat.com>

	* CompositeType.java (toPrint): Fix merge snafu.

2007-10-31  Stan Cox  <scox@redhat.com>

	* TypeDecorator.java (toPrint): Handle PointerType.
	* PointerType.java toPrint(String, PrintWriter): New.
	* ArrayType.java toPrint(String, PrintWriter): New.
	* CompositeType.java toPrint(int, PrintWriter): New.
	* Type.java getName: Make public.

2007-10-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* CompositeType.java: Moved getValue inside the Member class.

2007-10-31  Sami Wagiaalla  <swagiaal@redhat.com>

	* CompositeType.java (get): Deleted.

2007-10-29  Teresa Thomas  <tthomas@redhat.com>

	* PointerType.java (add): New.

2007-10-26  Teresa Thomas  <tthomas@redhat.com>

	* TestArray.java (testIndexOneD): New.
	(testIndexTwoD): New.
	* ArrayType.java (index): New.
	* Type.java (index): New.
	* TypeDecorator.java (index): New.	

2007-10-19  Teresa Thomas  <tthomas@redhat.com>

	* Type.java (addressOf): wordSize added to parameter
	list.
	* TypeDecorator.java (addressOf): Updated.

2007-10-17  Andrew Cagney  <cagney@redhat.com>

	* CompositeType.java: Make public.
	(CompositeType(String,int)): Make package-local.

2007-10-17  Sami Wagiaalla  <swagiaal@redhat.com>

	* StandardTypes.java: Changed the size of VOIDPTR64B_T and
	VOIDPTR64L_T from 4 to 8.

2007-10-16  Sami Wagiaalla  <swagiaal@redhat.com>

	* EnumType.java (toPrint): Now uses value.asBigInteger().toString()
	instead of value.toString().
	* Value.java (asBigInteger): New function.

2007-10-16  Teresa Thomas  <tthomas@redhat.com>

	* TypeDecorator.java (member): Rename v to var1.

2007-10-15  Teresa Thomas  <tthomas@redhat.com>

	* Type.java (dereference): Remove implementation; throw
	exception.
	* PointerType.java (dereference): Implement here.

2007-10-15  Sami Wagiaalla  <swagiaal@redhat.com>

	* Constant.java: New.
	* EnumType.java (Member.Member): Constructor now takes
	a Type and a Value.
	(Member.getType): New.
	(Member.getValue): New.
	(getMemberByName): Now returns ObjectDeclaration.

2007-10-12  Teresa Thomas  <tthomas@redhat.com>

	* TypeDecorator.java (member): New.
	* CompositeType.java (member): New.
	* Type.java (member): New.
	* TestComposite.java (testMember): New.

2007-10-11  Sami Wagiaalla  <swagiaal@toner.toronto.redhat.com>

	* ObjectDeclaration.java: New file.

2007-10-10  Teresa Thomas  <tthomas@redhat.com>

	* TypeDecorator.java (dereference): New.
	* Type.java (dereference): New.

2007-10-09  Andrew Cagney  <cagney@redhat.com>

	* EnumType.java (getMemberByName(String)): Change return type to
	CxxObject; note that frysk.value should not depend on
	frysk.scopes.

2007-10-09  Sami Wagiaalla  <swagiaal@redhat.com>

	* EnumType.java (Member): Now implements CxxObject.
	(getMemberByName): New function.

2007-10-05  Andrew Cagney  <cagney@redhat.com>

	* StandardTypes.java (OrderMap): New.
	(INT8B_T, INT8L_T, int8_t, int8_t()): New.
	(INT16B_T, INT16L_T, int16_t, int16_t()): New.
	(INT32B_T, INT32L_T, int32_t, int32_t()): New.
	(INT64B_T, INT64L_T, int64_t, int64_t()): New.
	(INT128B_T, INT128L_T, int128_t, int128_t()): New.
	(UINT8B_T, UINT8L_T, uint8_t, uint8_t()): New.
	(UINT16B_T, UINT16L_T, uint16_t, uint16_t()): New.
	(UINT32B_T, UINT32L_T, uint32_t, uint32_t()): New.
	(UINT64B_T, UINT64L_T, uint64_t, uint64_t()): New.
	(UINT128B_T, UINT128L_T, uint128_t, uint128_t()): New.
	(FLOAT32B_T, FLOAT32L_T, float32_t, float32_t()): New.
	(FLOAT64B_T, FLOAT64L_T, float64_t, float64_t()): New.
	(FLOAT80B_T, FLOAT80L_T, float80_t, float80_t()): New.
	(VOIDPTR32B_T, VOIDPTR32L_T, voidptr32_t, voidptr32_t()): New.
	(VOIDPTR64B_T, VOIDPTR64L_T, voidptr64_t, voidptr64_t()): New.

2007-10-03  Andrew Cagney  <cagney@redhat.com>

	* ConfoundedType.java: Rename to ...
	* GccStructOrClassType.java: ... this.
	* CompositeType.java (members()): New.
	(isClassLike()): Delete; moved to GccStructOrClassType.
	(Member): Make protected.
	* TestComposite.java: Update.

2007-10-03  Teresa Thomas  <tthomas@redhat.com>

	* TypeDecorator.java (addressOf): New.
	* Type.java (addressOf): New.
	* ByteBufferLocation.java (getAddress): New.
	* Location.java (getAddress): New.

2007-10-02  Andrew Cagney  <cagney@redhat.com>

	* StandardTypes.java: Parameterize with ByteOrder, not ISA.

2007-09-26  Teresa Thomas  <tthomas@redhat.com>

	* ByteBufferLocation.java (toPrint): New.
	* Location.java (toPrint): New.

2007-09-21  Andrew Cagney  <cagney@redhat.com>

	* CharType.java (createValue(BigInteger)): Delete.
	(createValue(long)): Delete.
	* PointerType.java (createValue(long)): Delete.

2007-09-11  Teresa Thomas  <tthomas@redhat.com>

	* Location.java (get): Visibility changed to public.
	(put): Ditto.

2007-09-10  Stan Cox  <scox@redhat.com>

	* CharType.java (createValue): New.
	* PointerType.java (createValue): New.

2007-09-06  Andrew Cagney  <cagney@redhat.com>

	* TestEnum.java (testPrintAnonEnumType): New.
	(testPrintEmptyEnumType): New.
	* EnumType.java (EnumType(String,ByteOrder,int)): Replace
	EnumType(ByteOrder,int).
	(toPrint(PrintWriter)): Print the enum's name, when known.
	* TestIntegerType.java: Update.

	* TestComposite.java (testAnonType): New.
	
	* TestComposite.java (testUnionType): New.
	(testClassType): New.
	(testStructType): New.
	(testConfoundedClassType): New.
	(testConfoundedStructType): New.
	* Access.mkenum: New.
	* CompositeType.java (toPrint(PrintWriter): Include the class,
	type, or union prefix.
	(addMember): Change "access" parameter's type to Access.

2007-09-06  Teresa Thomas  <tthomas@redhat.com>

	* Piece.java: Removed.
	* MemoryPiece.java: Removed.
	* RegisterPiece.java: Removed.
	* UnavailablePiece.java: Removed.

2007-09-06  Andrew Cagney  <cagney@redhat.com>

	* TestCompositeType.java: Rename TestClass.java.
	* CompositeType.java: New; based on old ClassType.java.
	* ClassType.java: Re-write.
	* StructType.java: New.
	* UnionType.java: New.

	* Type.java (size): Make private.
	* ArrayType.java: Update.
	* SignedType.java: Update.
	* UnsignedType.java: Update.
	* ClassType.java (setSize(int)): Delete.
	(ClassType(String,int)): Replace ClassType(String).
	* TestClass.java: Update.

2007-09-05  Andrew Cagney  <cagney@redhat.com>

	* Type.java(order(), order): Delete.
	(Type(String,int)): Replace Type(String,ByteOrder,int)).
	* ArithmeticType.java (order, order()): New.
	* ArrayType.java: Update.
	* ClassType.java (ClassType(String)): Replace
	ClassType(String,ByteOrder).
	* FunctionType.java (FunctionType(String,Type)): Replace
	FunctionType(String,ByteOrder,Type)).
	* TypeDecorator.java: Update.
	(order()): Delete.
	* TestClass.java: Update.
	* UnknownType.java: Update.
	* VoidType.java: Update.
	
	* ByteBufferLocation.java (ByteBufferLocation(ByteBuffer)): Delete.

	* ClassType.java (setInheritance): Delete.
	(inheritance): Delete.
	(Member): Add field inheritance.
	(addInheritance(String,Type,long,int)): New.
	(add(String,Type,long,int,int,int,boolean)): New.

2007-09-04  Andrew Cagney  <cagney@redhat.com>

	* Value.java (toPrint(PrintWriter,Format)): New.
	
	* Value.java (Value(Type,ByteBuffer)): Delete.
	(Value(Type)): Use ScratchLocation.
	* Location.java: Make abstract.
	(slice(long,long)): Make protected abstract.
	(getByte(long)): Make protected abstract.
	(putByte(long,byte)): Make protected abstract.
	(size()): New; abstract.
	* ByteBufferLocation.java: New.
	* ScratchLocation.java: New.
	* ArithmeticType.java: Update.
	* PointerType.java: Update.
	* TestArray.java: Update.
	* TestClass.java: Update.
	* TestEnum.java: Update.
	* TestFloatingPoint.java: Update.
	* TestFormat.java: Update.
	* TestIntegerType.java: Update.
	* TestLocation.java: Update.
	* TestPointer.java: Update.

2007-08-31  Andrew Cagney  <cagney@redhat.com>

	* BooleanType.java: New.
	* TestIntegerType.java (testGetBooleanNonZero): New.
	(testGetBooleanZero): New..
	(testPutBooleanNonZero): New.
	(testPutBooleanZero): New.

	* IntegerTypeDecorator.java: New.
	* PointerType.java: Extend IntegerTypeDecorator.
	(getBigInteger(Location)): Delete.
	(putBigInteger(Location, BigInteger)): Delete.
	(add(Value,Value)): Delete.
	(subtract(Value,Value)): Delete.
	(clone(IntegerType)): New.
	(toPrint): Check for CharType.
	* EnumType.java: Extend IntegerTypeDecorator.
	(EnumType(ByteOrder,int,SortedMap)): Delete.
	(getBigInteger(Location)): Delete.
	(putBigInteger(Location, BigInteger)): Delete.
	(pack(int,int)): Delete.
	(clone(IntegerType)): New.
	* CharType.java: New; extend IntegerTypeDecorator.
	* TestIntegerType.java (testGetSignedChar): New.
	(testGetUnsignedChar): New.
	(testPutSignedPositiveChar): New.
	(testPutSignedNegativeChar): New.
	(testPutUnsignedPositiveChar): New.
	(testPutUnsignedNegativeChar): New.
	(testPackedSignedChar): New.
	(testPackedUnsignedChar): new.
	(testCharToPrint): New.	
	* ArrayType.java (toPrint): Check for CharType.
	* TestArray.java (testString()): Create a CharType array.
	* TestPointer.java: New.
	* StandardTypes.java (byteLittleEndianType)
	(byteBigEndianType): Construct a CharType.

2007-08-31  Teresa Thomas  <tthomas@redhat.com>

	* Location.java (get): Use getByte.
	(put): Use putByte.

2007-08-31  Andrew Cagney  <cagney@redhat.com>

	* Type.java (setTypedefFIXME(boolean)): Rename setTypedef.

	* Type.java (Type(int,ByteOrder,int,String,boolean)): Delete.
	(Type(int,ByteOrder,int,String)): Delete.
	(Type(String,ByteOrder,int)): New.
	* ArithmeticType.java: Ditto.
	* ArrayType.java: Ditto.
	* ClassType.java: Ditto.
	* TypeDecorator.java: Ditto.
	* UnknownType.java: Ditto.
	* VoidType.java: Ditto.
	* FloatingPointType.java: Ditto.
	* IntegerType.java: Ditto.
	* UnsignedType.java: Ditto.
	* EnumType.java: Ditto.
	* PointerType.java: Ditto.
	* SignedType.java: Ditto.
	* TestClass.java: Update.
	* TestIntegerType.java: Update.
	* TestFormat.java: Update.
	* StandardTypes.java: Update.
	* TestDecoratorTypes.java: Update.
	* TestValue.java: Update.

	* TestValue.java: Make all fields private.
	(longBEUnsignedType): Delete.
	(intBEUnsignedType): Delete.
	(shortBEUnsignedType): Delete.
	(byteBEUnsignedType): Delete.
	(floatBEType): Delete.
	(doubleBEType): Delete.
	(longUnsignedType): Delete.
	(intUnsignedType): Delete.
	(shortUnsignedType): Delete.
	(byteUnsignedType): Delete.	
	
	* Type.java (toString): Dump more detail.
	(name, isTypedef): Make private.
	(order): Replace endian.
	(getEndian): Delete.
	* ArithmeticType.java: Update.
	* ArrayType.java: Update.
	* ClassType.java: Update.
	* EnumType.java: Update.
	* FloatingPointType.java: Update.
	* Format.java: Update.
	* FunctionType.java: Update.
	* IntegerType.java: Update.
	* PointerType.java: Update.
	* SignedType.java: Update.
	* TypeDecorator.java: Update.
	* UnknownType.java: Update.
	* UnsignedType.java: Update.

2007-08-30  Andrew Cagney  <cagney@redhat.com>

	* Type.java (Type(int,ByteOrder,int)): Delete.
	(order()): New.

	* ArithmeticType.java (createValueFIXME(String,float)): Delete.
	(createValueFIXME(String,double)): Delete.
	(createValueFIXME(String,long)): Delete.
	
	* Value.java (Value(Type,String,ByteBuffer)): Delete.
	(Value(Type,ByteBuffer)): New.
	
	* Value.java (Value(Type,String)): Delete.
	(Value(Type)): New.

	* Value.java (Value(Type,String,Location)): Delete.
	(Value(Type,Location)): Simplify.
	* ArithmeticType.java: Update.
	* ArrayType.java: Update.
	* ClassType.java: Update.
	* TestArray.java: Update.
	* TestClass.java: Update.
	
	* EnumType.java (newEnumValue(Type,String)): Delete.

2007-08-30  Adam Jocksch  <ajocksch@redhat.com>

	* Value.java (getTextFIXME(), textFIXME): Removed.

2007-08-30  Andrew Cagney  <cagney@redhat.com>

	* Value.java (getTextFIXME(), textFIXME): Restore; revert previous
	change.

	* Value.java (getTextFIXME()): Delete.
	(textFIXME): Delete.
	* ArrayType.java: Update.

	* Type.java (getTypeIdFIXME()): Delete.
	(typeId): Delete.
	* TypeDecorator.java: Update.
	* SignedType.java: Update.
	* UnsignedType.java: Update.

	* TestDecoratorTypes.java (testUltimateType): New.
	* ArithmeticType.java (returnType(Value,Value)): New.
	(add(Value,Value)): Simplify.
	(subtract(Value,Value)): Simplify.
	(multiply(Value,Value)): Simplify.
	(divide(Value,Value)): Simplify.
	(mod(Value,Value)): Simplify.
	(shiftLeft(Value,Value)): Simplify.
	(shiftRight(Value,Value)): Simplify.
	(lessThan(Value,Value)): Simplify.
	(greaterThan(Value,Value)): Simplify.
	(lessThanOrEqualTo(Value,Value)): Simplify.
	(greaterThanOrEqualTo(Value,Value)): Simplify.
	(equal(Value,Value)): Simplify.
	(notEqual(Value,Value)): Simplify.
	(bitWiseAnd(Value,Value)): Simplify.
	(bitWiseOr(Value,Value)): Simplify.
	(bitWiseXor(Value,Value)): Simplify.
	(bitWiseComplement(Value)): Simplify.
	(logicalAnd(Value,Value)): Simplify.
	(logicalOr(Value,Value)): Simplify.
	(logicalNegation(Value)): Simplify.
	(assign(Value,Value)): Simplify.
	(getLogicalValue(Value)): Simplify.

	* ArithmeticType.java: Re-indent.

	* Type.java (getUltimateType()): New.
	* TypeDef.java: New.
	* ConstType: New.
	* VolatileType: New.
	* PackedType.java: New.
	* RestrictType.java: New.
	* SharedType.java: New.
	* ReferenceType.java: New.
	* TypeDecorator.java: New.
	* TestDecoratorTypes.java: New.
	
2007-08-29  Andrew Cagney  <cagney@redhat.com>

	* Type.java (getTypeIdFIXME): Make package private.

	* Type.java (typeId): Make private.
	* ArithmeticType.java: Use getTypeIdFIXME.
	* SignedType.java: Ditto.

	* ClassType.java (addMember): When a bit-field, create a packed
	type.
	(Member.maskFIXME): Delete.
	(getValue): Simplify.
	(bitValueFIXME): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): Simplify.

	* TestIntegerType.java (testPackedEnum): New.
	(testPackedSigned): New.
	(testPackedUnsigned): New.
	* Packing.java: New.
	* TestPacking.java: New.
	* Type.java (pack(int,int)): New.
	* EnumType.java (pack(int,int)): New.
	(EnumType(ByteOrder,int,SortedMap)): New.
	* SignedType.java (pack(int,int)): New.
	* UnsignedType.java (pack(int,int)): New.
	
	* EnumType.java (EnumType(ByteOrder)): Delete.
	* TestIntegerType.java: Update.

2007-08-28  Andrew Cagney  <cagney@redhat.com>

	* Type.java (assign(Value,Value)): Delete.
	* TestValue.java: Use Value.assign.

	* Location.java (putDouble): Delete.
	(putFloat): Delete.
	* Value.java (putDouble): Delete.
	(putFloat): Delete.

	* Location.java	(putLong): Delete.
	(putInt): Delete.
	(putShort): Delete.

2007-08-28  Teresa Thomas  <tthomas@redhat.com>

	* UnavailablePiece.java: isEqual changed to equals.
	* RegisterPiece.java (getRegister): Added.
	* MemoryPiece.java: isEqual changed to equals.
	* Piece.java (getSize): Added.

2007-08-27  Andrew Cagney  <cagney@redhat.com>

	* ClassType.java (bitValueFIXME): Use ArithmeticType.getBigInteger.
	* Location.java (getByte(long)): Replace getByte(int).
	(putByte(long,byte)): Replace putByte(byte).
	(getDouble): Delete.
	(getFloat): Delete.
	(getLong): Delete.
	(getInt): Delete.
	(getShort): Delete.
	
	* Value.java (getFloat, getDouble): Delete.
	(doubleValue): Make public.
	* TestValue.java: Update.

	* Value.java: Re-indent.

	* ArrayType.java (toPrint(PrintWriter,Location,ByteBuffer): Use
	Location.get to read a "string".
	* TestArray.java (testString): New.

2007-08-26  Andrew Cagney  <cagney@redhat.com>

	* BigFloat.java (value): Change to Number.
	(floatValue()): New.
	(toByteArray(int), bigIntegerValue(), doubleValue)
	(BigFloat(byte[] bytes): Update.
	* Format.java (NATURAL, DECIMAL, HEXADECIMAL, BINARY, OCTAL):
	Implement.
	(printHexadecimal(PrintWriter,Location,ArithmeticType)): New.
	(printDecimal(PrintWriter,Location,ArithmeticType)): New.
	(printOctal(PrintWriter,Location,ArithmeticType)): New.
	(printBinary(PrintWriter,Location,ArithmeticType)): New.
	(printFloatingPoint(PrintWriter,Location,ArithmeticType)): New.
	(print(PrintWriter,Location,FloatingPointType)):
	(print(PrintWriter,Location,IntegerType)): Make abstract.
	(print(PrintWriter,Location,PointerType)): Make abstract.
	(print(PrintWriter,Location,FloatingPointType)): Make abstract.
	
	* PointerType.java: Extend IntegerType.
	(createValue(long)): Delete.
	(getBigInteger(Location)): Rename asBigInteger(Location).
	(putBigInteger(Location)): New.
	
	* Type.java (assign(Location,Value): New.
	* IntegerType.java (assign(Location,Value)): New.
	* FloatingPointType.java (assign(Location,Value)): New.
	* TestBigFloat.java (testToByteArray): New.
	* BigFloat.java (toByteArray): New.
	* Value.java (assign(Value)): New.
	* ArithmeticType.java (assign(Value,Value)): Use Value.assign.
	(plusEqual(Value,Value)): Ditto.
	(minusEqual(Value,Value)): Ditto.
	(timesEqual(Value,Value)): Ditto.
	(divideEqual(Value,Value)): Ditto.
	(modEqual(Value,Value)): Ditto.
	(shiftLeftEqual(Value,Value)): Ditto.
	(shiftRightEqual(Value,Value)): Ditto.
	(bigWiseOrEqual(Value,Value)): Ditto.
	(bitWiseXorEqual(Value,Value)): Ditto.
	(bitWiseAndEqual(Value,Value)): Ditto.
	(doAssignment(Value,Value)): Delete.

	* BigFloat.java: New file.
	* TestBigFloat.java: New file.
	* IntegerType.java (bigIntegerValue(Location)): New.
	(bigFloatValue(Location)): New.
	(getBigFloat(Location)): New.
	* FloatingPointType.java(getBigFloat(Location)): New
	(bigFloatValue(Location)): New.
	(bigIntegerValue(Location)): New.
	* ArithmeticType.java (getBigFloat(Location)): New, abstract.
	(bigIntegerValue(Location)): New, abstract.
	(bigFloatValue(Location)): New, abstract.

2007-08-24  Andrew Cagney  <cagney@redhat.com>

	* Value.java (putByte): Delete.
	(putChar): Delete.
	(putShort): Delete.
	(putInt): Delete.
	(putLong): Delete.
	* ArithmeticType.java: Use Location's put methods.
	
	* Value.java (getByte): Delete.
	(getChar): Delte.
	(getShort): Delete.
	(getInt): Delete.
	(getLong): Delete.
	* ArrayType.java (toPrint(PrintWriter,Location,ByteBuffer,Format):
	Replace Value.getByte with Location.getByte.
	* ClassType.java (getValue(Value,int)): Use Location.slice.
	* TestValue.java: Use Value.asLong.
	(isTrue(long)): Replace isTrue(int).

	* PointerType.java (createValue): Delete call to
	Location.orderFIXME, and use Location.putLong(ByteOrder,val);
	* Value.java (getByte, putByte): Make package private.
	(getChar, putChar): Ditto.
	(getShort, putShort): Ditto.
	(getInt, putInt): Ditto.
	(getLong, putLong): Ditto.

2007-08-24  Stan Cox  <scox@redhat.com>

	* PointerType.java (toPrint): Increment char* address.
	(createValue): New.

2007-08-24  Andrew Cagney  <cagney@redhat.com>

	* Location.java (orderFIXME): Delete.
	(toString): Update.
	* TestClass.java: Delete call to orderFIXME.
	* ArithmeticType.java: Delete call to orderFIXME.

	* Location.java (getDouble()): Delete.
	(getFloat()): Delete.
	(getLong()): Delete.
	(getInt())): Delete.
	(getShort()): Delete.
	(getByte()): Delete.
	(getDouble(int)): Delete.
	(getFloat(int)): Delete.
	(getLong(int)): Delete.
	(getInt(int))): Delete.
	(getShort(int)): Delete.
	(getDouble(ByteOrder)): Delete.
	(getFloat(ByteOrder)): Delete.
	(getLong(ByteOrder)): Delete.
	(getInt(ByteOrder))): Delete.
	(getShort(ByteOrder)): Delete.
	(getByte(ByteOrder)): Delete.
	(putDouble(double)): Delete.
	(putFloat(float)): Delete.
	(putLong(long)): Delete.
	(putInt(int))): Delete.
	(putShort(short)): Delete.
	* Value.java: Update.
	* Format.java: Update.

2007-08-23  Andrew Cagney  <cagney@redhat.com>

	* ArithmeticType.java: Update.
	* TestClass.java: Ditto.
	* Location.java (getByteBuffer()): Delete.
	(orderFIXME): New.
	* Value.java (asLong): Re-implement using
	ArithmeticType.getBigInteger.

	* ArithmeticType.java: Use BigInteger.valueOf.
	* Format.java (print(PrintWriter,Location,IntegerType))
	(print(PrintWriter,Location,PointerType)): Re-implement using
	getBigInteger.

	* ClassType.java: Replace ByteBuffer.slice(long,long) and
	Location.getByteBuffer() with Location.slice(long,long).

	* Location.java (getByteBuffer()): Make package.private.
	(toByteArray): New.	
	(index): Delete.
	(Location(int,ByteBuffer)): Delete.
	(Location(long)): Delete.
	* Value.java: Update.
	* ArithmeticType.java: Update.
	
	* ArithmeticType.java (createValue(BigInteger)): New.
	(createValue(long)): New.
	(createValue(float)): New.
	(createValue(double)): New.
	(createValueFIXME(String,long)): New.
	(newByteValue): Delete.
	(newShortValue): Delete.
	(newIntegerValue): Delete.
	(newLongValue): Delete.
	(newValue(Type,int)): Delete.
	(newValue(Type,long)): Delete.
	(newValue(Type,double)): Delete.
	(newFloatValue): Delete.
	(newDoubleValue): Delete.
	(toString): New; for debugging.
	* ClassType.java: Update.
	* PointerType.java: Update.
	* TestValue.java: Update.
	* Location.java (toString): New.

	* TestLocation.java (testGetBig): Rename testByteArrayBig.
	(testGetLittle): Rename testByteArrayLittle.
	(testPutBig): New.
	(testPutLittle): New.
	* Location.java (get): Rename asByteArray.
	(put(byte[],ByteOrder)): New.
	(l, setUp, tearDown): new.
	* UnsignedType.java: Update.
	* SignedType.java: Update.
	* PointerType.java: Update.
	* FunctionType.java: Update.
	* EnumType.java: Update.
	* IntegerType.java (asBigInteger): Delete.
	* ArithmeticType.java (getBigInteger(Location): New.
	(putBigInteger(Location,BigInteger)): New.
	* TestIntegerType.java: Update.
	* UnsignedType.java (getBigInteger): Rename asBigInteger.
	(putBigInteger): New.
	* SignedType.java (getBigInteger): Rename asBigInteger.
	(putBigInteger): New.
	* EnumType.java (getBigInteger): Rename asBigInteger.
	(putBigInteger): New.
	* FloatingPointType.java (getBigInteger, putBigInteger): New.
	
2007-08-22  Andrew Cagney  <cagney@redhat.com>

	* InvalidOperatorException.java (InvalidOperatorException())
	(InvalidOperatorException(String)): Delete.
	(InvalidOperatorException(Type,String)): New.
	* ArithmeticType.java: Update
	* Type.java: Make all abstract operations concrete; throw
	InvalidOperatorException.
	* FunctionType.java: Delete operator methods throwing exception.
	* VoidType.java: Ditto.
	* UnknownType.java: Ditto.
	* PointerType.java: Ditto.
	* ClassType.java: Ditto.
	* ArrayType.java: Ditto.
	* EnumType.java: Ditto.
	
	* Value.java (toString): Dump the Location and Type.
	* Type.java (toString (Value value, ByteBuffer memory)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format): Make abstract.

	* Type.java: Remove throws clause.
	* ClassType.java: Ditto.
	* FunctionType.java: Ditto.
	* ArithmeticType.java: Ditto.
	* ArrayType.java: Ditto.
	* PointerType.java: Ditto.
	* TestValue.java: Ditto.
	* UnknownType.java: Ditto.
	* VoidType.java: Ditto.
	* InvalidOperatorException.java: Extend RuntimeException.
	(InvalidOperatorException()): Delete.
	(InvalidOperatorException(String)): Pass string to super.
	(toString): Delete.
	* OperationNotDefinedException.java: Ditto.

2007-08-22  Stan Cox  <scox@redhat.com>

	* ArrayType.java (ArrayType): Revert adjustment to stride
	caculation change.
	
	* ArrayType.java (ArrayType): Adjust stride calculation.
	(get): Consider type size when slicing.
	* TestArray.java (testArrayOfArrayOfNumber): Test slicing.

2007-08-21  Andrew Cagney  <cagney@redhat.com>

	* FunctionType.java (toString(Value,ByteBuffer): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format): New.

	* ClassType.java (toString(Value,ByteBuffer)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(baseClass, setBaseClass): Delete.
	(membersFIXME): New.
	(nameToMember): New.
	(bitValueFIXME): New.
	(getValue(Value,Member)): Replace getValue(Value,int); use
	bitValueFIXME.
	(toPrint(PrintWriter)): Use Member and valueToMember.
	* TestValue.java (testStructure): Delete; moved to TestClass.java.
	* TestClass.java: New.

2007-08-20  Stan Cox  <scox@redhat.com>

	* UnknownType.java: New file.
	* ClassType.java (getValue): Use it.

2007-08-21  Mark Wielaard  <mark@klomp.org>

	* PointerType.java: Remove unused import lib.dwfl.BaseTypes.

2007-08-20  Andrew Cagney  <cagney@redhat.com>

	* Format.java (print(PrintWriter,Location,PointerType): New.
	(printPointer(PrintWriter,Location): Delete.
	* VoidType.java: New file.
	* PointerType.java: Extend ArithmeticType.
	(toPrint(PrintWriter)): Assume that there's a type.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(toString(Value,ByteBuffer)): Delete.
	(PointerType(ByteOrder,int,Type,String): New constructor.
	(asBigInteger(Location)): New.
	
	* TestValue.java (testArrayOfArrayOfNumber)
	(testArrayOfNumber): Delete; moved to TestArray.java.
	* TestArray.java: New.
	* Location.java (slice(long offset, long length)): New.
	* TestLocation.java (testSlice()): New.
	* ArrayType.java (toString(Value,ByteBuffer)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(stride): New array.
	(ArrayType): Compute the stride.
	(get): Do not compute the stride.
	(ArrayIterator): Simplify, make private.
	(dimension, nrElements): New.
	(slice): New.
	(getValue, iterator, buildArraySlice, dimensions): Delete.
	(get): Update.

	* TestEnum.java: New file.
	* IntegerType.java
	(toPrint(PrintWriter,Location,ByteBuffer,Format): Make package
	private.
	* EnumType.java (Member, valueToMember): New.
	(values, names, type, toString): Delete.
	(toPrint(PrintWriter)): Re-implement.
	(toPrint(PrintWriter,Location,ByteBuffer,Format): New.
	(addMember(String,long)): New.
	(addMember(Type,String,long)): Delete.
	* TestValue.java (testEnum): Delete.
	* ArithmeticType.java
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): Delete.
	* Type.java (toPrint()): Make final.
	(toPrint(Location,ByteBuffer,Format): New.
	(toPrint(PrintWriter,Value,ByteBuffer,Format)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): Call toString.
	* Value.java: Update.
	
2007-08-19  Andrew Cagney  <cagney@redhat.com>

	* ArithmeticType.java: Replace BaseTypes.isInteger and
	BaseTypes.isLong with instanceof IntegerType.  Replace isFloat
	with instanceof FloatingPointType.
	
	* StandardTypes.java: Replace IntegerType with SignedType.
	* TestValue.java: Replace IntegerType with SignedType and
	UnsignedType.
	* IntegerType.java: Make abstract.
	(asBigInteger): Make abstract.
	
	* TestIntegerType.java: New file.
	* EnumType.java: Extend IntegerType.
	(asBigInteger): New.
	(add): Delete.
	(subtract): Delete.
	(logicalNegation): Delete.
	(assign): Delete.
	(timesEqual): Delete.
	(divideEqual): Delete.
	(minusEqual): Delete.
	(plusEqual): Delete.
	(modEqual): Delete.
	(shiftLeftEqual): Delete.
	(shiftRightEqual): Delete.
	(bitWiseAndEqual): Delete.
	(bitWiseOrEqual): Delete.
	(bitWiseXorEqual): Delete.
	(multiply): Delete.
	(divide): Delete.
	(mod): Delete.
	(shiftLeft): Delete.
	(shiftRight): Delete.
	(lessThan): Delete.
	(greaterThan): Delete.
	(greaterThanOrEqualTo): Delete.
	(lessThanOrEqualTo): Delete.
	(equal): Delete.
	(notEqual): Delete.
	(bitWiseAnd): Delete.
	(bitWiseOr): Delete.
	(bitWiseXor): Delete.
	(bitWiseComplement): Delete.
	(logicalAnd): Delete.
	(logicalOr): Delete.
	* IntegerType.java (asBigInteger): New method.
	* SignedType.java: New file.
	* UnsignedType.java: New file.

	* Type.java (getName): Delete.
	* ClassType.java (toPrint(PrintWriter)): New.
	(getName): Delete.
	* EnumType.java: Ditto.
	* FunctionType.java: Ditto.
	* PointerType.java: Ditto.
	* ArrayType.java: Ditto.

2007-08-17  Teresa Thomas  <tthomas@redhat.com>
	
	* Piece.java: New File.
	* MemoryPiece.java: New File.
	* RegisterPiece.java: New File.
	* UnavailablePiece.java: New File.

2007-08-15  Andrew Cagney  <cagney@redhat.com>

	* Type.java (toPrint()): New.
	(toPrint(PrintWriter)): Implement using getName.
	(getName): Make package private.
	* ArithmeticType.java: Use toPrint().
	
	* Location.java (asByteArray): New.
	(Location(byte[]): New.
	* TestLocation.java: New file.

	* IntegerType.java: Make constructor public, add boolean parameter.
	* FloatingPointType.java: Ditto.
	* ArithmeticType.java: Make abstract.
	(toPrint(PrintWriter)): Print "name".
	* StandardTypes.java: Use IntegerType and FloatingPointType.
	* TestValue.java: Ditto.

	* EnumType.java: Re-indent.
	* FunctionType.java: Re-indent.
	* ClassType.java: Re-indent.
	* PointerType.java: Re-indent.
	* ArrayType.java: Re-indent.

	* Type.java (getTypeIdFIXME): Rename getTypeId.
	* ArithmeticType.java: Update.
	* Value.java: Update.

2007-08-15  Stan Cox  <scox@redhat.com>

	* ArrayType.java (buildArraySlice): New.
	(get): Use it.

2007-08-15  Andrew Cagney  <cagney@redhat.com>

	* Thread.java: Delete.
	* Language.java: Delete.
	* Frame.java: Delete.

2007-08-14  Andrew Cagney  <cagney@redhat.com>

	* Format.java (print(PrintWriter,Location,IntegerType): New.
	(print(PrintWriter,Location,FloatingPointType): New.
	(printInteger): Delete.
	(printFloatingPoint): Delete.
	* IntegerType.java: New file.
	* FloatingPointType.java: New file.
	* ArithmeticType.java: Update.
	
	* ArithmeticType.java (toString(Value,ByteBuffer)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(toPrint(PrintWriter)): New.
	* Type.java (toPrint(PrintWriter)): Throw a RuntimeException.
	(toPrint(PrintWriter, Location, ByteBuffer, Format): Ditto.
	(toString(Value,ByteBuffer)): Implement using toPrint.
	
	* TestValue.java: Replace Value.toString with Value.toPrint().
	* ArithmeticType.java (toString(Value,Format): Delete.
	* Value.java(toPrint(), toPrint(Format)): New.
	
	* Value.java (toPrint(ByteBuffer,Format)): New.
	* Type.java (toPrint(PrintWriter,Location,ByteBuffer,Format): New.
	(toString(Value)): Delete.
	(toPrint(PrintWriter)): New.
	* PointerType.java (toString(Value)): Delete.
	* FunctionType.java (toString(Value)): Delete.
	* EnumType.java (toString(Value)): Delete.
	* ClassType.java (toString(Value)): Delete.
	* ArrayType.java (toString(Value)): Delete.
	* ArithmeticType.java (toString(Value)): Delete.
	
	* Value.java (toString(ByteBuffer)): Delete.
	* ClassType.java: Replace Value.toString call with Type.toString
	call.

2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* Value.java (asLong): Replace longValue.
	(intValue): Delete.
	* ArithmeticType.java: Use asLong.
	* PointerType.java: Ditto.

2007-08-13  Nurdin Premji  <npremji@redhat.com>

	* ArithmeticType.java (toString): Use Value.location.getXX()
	instead of Value.getXX().
	* Value.java(getDouble): Removed.
	(getFloat): Removed.
	(getInt): Removed.
	(getLong): Removed.
	(getShort): Removed.

	* StandardTypes.java (getByteType): Added.
	(getDoubleType): Ditto.
	(longLittleEndianType): Ditto. 
	(getLongType): Ditto.
	(floatLittleEndianType): Ditto.
	(intBigEndianType): Ditto.
	(byteLittleEndianType): Ditto.
	(intLittleEndianType): Ditto.
	(floatBigEndianType): Ditto.
	(getIntType): Ditto.
	(getFloatType): Ditto.
	(doubleLittleEndianType): Ditto.
	(shortLittleEndianType): Ditto.
	(longBigEndianType): Ditto.
	(getShortType): Ditto.
	(doubleBigEndianType): Ditto.
	(shortBigEndianType): Ditto.
	(byteBigEndianType): Ditto.

	* Location.java (putInt): Added, takes a ByteOrder.
	(putDouble): Ditto.
	(getDouble): Ditto.
	(getLong): Ditto.
	(getInt): Ditto.
	(getChar): Ditto.
	(putLong): Ditto.
	(putChar): Ditto.
	(getShort): Ditto.
	(getFloat): Ditto.
	(putFloat): Ditto.
	(putShort): Ditto.
	* Format.java (BINARY): Added.
	* ArithmeticType.java (toString): Added, takes a Format.
	* Value.java (getDouble): Added, takes a ByteOrder.
	(getLong): Ditto.
	(getInt): Ditto.
	(getShort): Ditto.
	(getFloat): Ditto.
	
2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* Value.java (Value(Type,String,ArrayByteBuffer)): Delete.

	* Value.java (Value(Type,Location)): New.
	(Value(Type)): Delete.
	
	* Value.java (textFIXME): Rename text.
	(getTextFIXME): Rename getText.
	* ArrayType.java: Update.

2007-08-13  Andrew Cagney  <cagney@redhat.com>
            Nurdin Premji  <npremji@redhat.com>
	
	* Value.java (columnXXX, getColumnXXX): Delete.
	(getFilePathXXX, setFilePathXXX, filePathXXX): Delete.
	(getLineNoXXX, setLineNoXXX, lineNoXXX): Delete.
	
2007-08-08  Nurdin Premji  <npremji@redhat.com>

	* ArithmeticTypes.java: Moved standard types to ...
	* StandardTypes.java: Added.
		
	* ArithmeticType.java: Added some general types.

2007-08-02  Andrew Cagney  <cagney@redhat.com>

	* Type.java (toPrint): New method.
	* Value.java (toPrint): New method.
	* Format.java: New file.

2007-08-02  Stan Cox  <scox@redhat.com>

	* Type.java (toString): Add ByteBuffer parameter.  Change all callers.
	* PointerType.java (toString): Dereference char*
	* ClassType.java (accessibility, inheritance): New.
	(getName): Display using a C like syntax.
	(addMember): Add accessibility.
	* ArrayType.java (toString): Look for terminating '\0'.
	* TestValue.java (testStructure): New struct output syntax.

2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* Value.java: Update; lib.dw and lib.elf merged into lib.dwfl.
	* ArithmeticType.java: Ditto.
	* ArrayType.java: Ditto.
	* TestValue.java: Ditto.
	* ClassType.java: Ditto.

2007-07-09  Stan Cox  <scox@redhat.com>

	* ClassType.java (getValue): Add PointerType and FunctionType.
	(toString): Likewise.
	* FunctionType.java (getName): Check for no parameters.
	* PointerType.java (toString): Output as hex.

2007-06-28  Stan Cox  <scox@redhat.com>

	* ClassType.java (baseClass): New.
	(setBaseClass): New.

2007-06-19  Stan Cox  <scox@redhat.com>

	* ArithmeticType.java (logicalNegation): New.
	* Type.java (logicalNegation): Likewise.
	* ArrayType.java (logicalNegation): Likewise.
	* EnumType.java (logicalNegation): Likewise.
	* ClassType.java (logicalNegation): Likewise.
	* FunctionType.java (logicalNegation): Likewise.
	* PointerType.java (logicalNegation): Likewise.

2007-06-18  Adam Jocksch  <ajocksch@redhat.com>

	* Location.java: Made public so we can access the internal ByteBuffer.

2007-06-13  Stan Cox  <scox@redhat.com>

	* Type.java (isTypedef): New.
	* ArithmeticType.java (ArithmeticType): Use it.
	* ClassType.java (getName): Use it.

2007-06-08  Stan Cox  <scox@redhat.com>

	* FunctionType.java: New file.

2007-05-25  Stan Cox  <scox@redhat.com>

	* PointerType.java: New.

2007-05-25  Stan Cox  <scox@redhat.com>

	* ArrayType.java (getValue): Use slicing.
	(get): Chain struct/array references.
	* ClassType.java (getValue): Use slicing.
	(get): Chain struct/array references.
	* Value.java (Value): New (Type, String, ByteBuffer).

2007-05-17  Stan Cox  <scox@redhat.com>

	* ArrayType.java (get): Skip array name.

2007-05-10  Stan Cox  <scox@redhat.com>

	* Value.java (Variable): Rename Value.
	Change all callers.

2007-05-09  Stan Cox  <scox@redhat.com>

	* ArithmeticType.java (newVariable): Remove DwarfDie from newXVariable 
	signature.
	* ArrayType.java (ArrayType): Likewise.
	* ClassType.java (ClassType): Likewise.
	* Variable.java (Variable): Likewise.

2007-05-08  Andrew Cagney  <cagney@redhat.com>

	* Variable.java (filePathXXX): Rename filePath.
	(lineNoXXX): Rename lineNo.
	(columnXXX): Rename column.

2007-05-08  Stan Cox  <scox@redhat.com>

	* ClassType.java (getVariable): newXVariable signature.
	* ArrayType.java (ArrayIterator.next): Call getVariable.
	(getVariable): New.
	(get): New.
	* ArithmeticType.java (newVariable): newXVariable signature.
	* Variable.java (Variable): new signature.

2007-05-02  Stan Cox  <scox@redhat.com>

	* ClassType.java (ClassIterator.next): Call getVariable.
	(getVariable): Moved from above.
	(get): New for member access.
	(toString): Use gdb-like output formatting.  Output bit field length.
	* ArrayType.java (getType): New.
	(Iterator.next): Handle ClassType.
	(toString): Use gdb-like output formatting.
	(ArrayType): Add size parameter.
	* Type.java (longValue): Removed.
	(newVariable): Moved to...
	* ArithmeticType.java: here.
	* TestValue.java (testArrayOfNumber): Allow for current formatting.

2007-04-30  Adam Jocksch  <ajocksch@redhat.com>

	* Variable.java (filePath): Added, this is a temporary measure until I
	am sure this is the correct way to keep track of the file/line no that
	a variable is found at.
	(lineNo): Added, same as above.
	(getFilePath): Added.
	(getLineNo): Added.
	(setFilePathXXX): Added, this is VERY temporary as we should not be
	allowing people to change this.
	(setLineNoXXX): Ditto.

2007-04-24  Stan Cox  <scox@redhat.com>

	* TestValue.java (testNumber,testIntOps,testFloatOps,testEnum): New.
	(testArrayOfNumber,testArrayOfArrayOfNumber,testStructure): New.
	* Type.java (bitWiseComplement): New.
	* ArrayType.java (bitWiseComplement): Likewise.
	* EnumType.java (bitWiseComplement): Likewise.
	* ClassType.java (bitWiseComplement): Likewise.
	* ArithmeticType.java (shiftLeft, shiftRight): Allow mixed type operands.

2007-04-20  Stan Cox  <scox@redhat.com>

	* ClassType.java (Iterator.next): Support bit fields.

2007-04-15  Stan Cox  <scox@redhat.com>

	* ArithmeticType.java: New file. Replaces:
	* ByteType.java: Removed.
	* ShortType.java: Removed.			
	* IntegerType.java: Removed.
	* LongType.java: Removed.
	* FloatTYpe.java: Removed.
	* DoubleType.java: Removed.
	* Variable.java (intValue): New.
	(longValue): New.
	(doubleValue): New.
	* ArrayType.java (Iterator.next): Return Variable instead of value.
	* Type.java (newVariable): New.
	* ClassType.java (Iterator.next): Likewise.

2007-03-30  Stan Cox  <scox@redhat.com>

	* ArrayType.java (getName): New.
	* ClassType.java (getName): New.
	* EnumType.java: New file.

2007-03-27  Andrew Cagney  <cagney@redhat.com>

	* TestValue.java: Sketch unit tests.

2007-03-23  Andrew Cagney  <cagney@redhat.com>

	* TypeTest.java: Delete.
	* TestValue.java: New.
	* Location.java: Remove '_' prefix in members.
	* ArrayType.java: Ditto.
	* Variable.java: Ditto.
	* Type.java: Ditto.
	* ShortType.java: Ditto.
	* ClassType.java: Ditto.

2007-03-15  Andrew Cagney  <cagney@redhat.com>

	* Frame.java: Import frysk.rt.Subprogram.

2007-02-14  Stan Cox  <scox@redhat.com>

	* ClassType.java (offsets): New.
	(Iterator.next): Use it.

2007-01-29  Stan Cox  <scox@redhat.com>

	* ArrayType.java (Iterator.nextIdx): Fix stride calculation.

2007-01-16  Stan Cox  <scox@redhat.com>

	* ArrayType.java (toString): Special case array of baseTypeChar.
	* Type.java (longValue) Use getByte for baseTypeChar.

2006-12-14  Stan Cox  <scox@redhat.com>

	* ByteType.java: New.
	* ShortType.java (newByteVariable): New.
	* LongType.java (newByteVariable): New. 
	* IntegerType.java (newByteVariable): New.
	* FloatType.java (newByteVariable): New.  
	* DoubleType.java (newByteVariable): New. 
	* Type.java (newByteVariable): New.
	* Variable.java (getByte): New..

2006-12-11  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Delete.

2006-12-06  Nurdin Premji  <npremji@redhat.com>

	* IntegerType.java: Added (C).
	* ShortType.java: Ditto.
	* TypeTest.java: Ditto.
	* ClassType.java: Ditto.
	* LongType.java: Ditto.

2006-12-01  Stan Cox  <scox@redhat.com>

	* LongType.java: New.
	* ShortType.java (newLongVariable): New.  Reformat file.
	* IntegerType.java (newLongVariable): New.  Reformat file.
	* FloatType.java (newLongVariable): New.  Reformat file.
	* DoubleType.java (newLongVariable): New.  Reformat file.
	* Type.java (newLongVariable): New.
	* Variable.java (getLong): Use getLong.
	
2006-11-16  Stan Cox  <scox@redhat.com>

	* Type.java: Rename frysk.lang to frysk.value.
	* DoubleType.java: Rename frysk.lang to frysk.value.
	* OperationNotDefinedException.java: Rename frysk.lang to frysk.value.
	* Subprogram.java: Rename frysk.lang to frysk.value.
	* FloatType.java: Rename frysk.lang to frysk.value.
	* Thread.java: Rename frysk.lang to frysk.value.
	* Frame.java: Rename frysk.lang to frysk.value.
	* IntegerType.java: Rename frysk.lang to frysk.value.
	* ArrayType.java: Rename frysk.lang to frysk.value.
	* TypeTest.java: Rename frysk.lang to frysk.value.
	* Variable.java: Rename frysk.lang to frysk.value.
	* Location.java: Rename frysk.lang to frysk.value.
	* LexicalBlock.java: Rename frysk.lang to frysk.value.
	* ClassType.java: Rename frysk.lang to frysk.value.
	* InvalidOperatorException.java: Rename frysk.lang to frysk.value.
	* Language.java: Rename frysk.lang to frysk.value.
	* ShortType.java: Rename frysk.lang to frysk.value.

2006-11-03  Stan Cox  <scox@redhat.com>

	* ArrayType.java: New file.
	* Type.java: Add BaseTypes.
	* DoubleType.java: Add BaseTypes.
	* FloatType.java: Add BaseTypes.
	* IntegerType.java: Add BaseTypes.
	* ShortType.java: Add BaseTypes.
	* LocationType.java (getInt(int idx): New.  Likewise for
	getChar,getShort,getLong,getFloat,getDouble
	* Variable.java (Variable): New ArrayByteBuffer constructor.

2006-09-18  Stan Cox  <scox@redhat.com>

	* Variable.java (getFloat): New.
	(getDouble): New.
	(putFloat): New.
	(putDouble): New.
	* FloatType.java: New file.
	* Type.java (newFloatVariable): New.
	(newDoubleVariable): New.
	* Location.java (getDouble): New.
	(getFloat): New.
	* IntegerType.java (newFloatVariable): New.
	(newDoubleVariable): New.
	* ShortType.java (newFloatVariable): New.
	(newDoubleVariable): New.

2006-09-11  Stan Cox  <scox@redhat.com>

	* IntegerType.java (IntegerType): Use ByteOrder.
	* ShortType.java (ShortType): Likewise.
	* Type.java (Type): Likewise.
	(getEndian): Likewise.
	* TypeTest.java (TypeTest): Likewise.

2005-11-07  Tarun Khanna  <tkhanna@redhat.com>

	* IntegerType.java: Commented out some code to remove warnings.

2005-11-03  Tarun Khanna  <tkhanna@redhat.com>

	* Type.java:  Added the last set of arithematic operations.
	* ShortType.java:  Added the last set of arithematic operations.
	* IntegerType.java:  Added the last set of arithematic operations.
	* Variable.java:  Added the last set of arithematic operations.

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* Type.java:  Added more arithematic operations
	* ShortType.java:  Added more arithematic operations
	* IntegerType.java:  Added more arithematic operations

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* InvalidOperatorException.java:  New file to catch exceptions when an
	operator function is called with wrong types of arguments.

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* IntegerType.java: Added constructors and functions.
	* ShortType.java: Same...
	* Type.java:  Added abstract arithematic functions.
	* Variable.java:  Added constructors and functions...
	* Location.java:  Added constructors and functions...
	* OperationNotDefinedException.java:  Fixed a compile time bug...
	* TypeTest.java:  Added a test case for the Type System.

2005-10-19  Tarun Khanna  <tkhanna@redhat.com>

	* IntegerType.java: Added constructors and functions.
	* ShortType.java: Same...
	* Type.java:  Added abstract functions.
	* Variable.java:  Added constructors and functions...

2005-10-18  Tarun Khanna  <tkhanna@redhat.com>

	* Type.java: Modified file to define an abstract Type system.
	* Location.java:  Modified file for storing variable location
	* Variable.java:  Modified file to represent Variables.
	* IntegerType.java: New file to represent the primitive Integer Type.
	* ShortType.java: New file to represent the primitive Integer Type.
	* BaseTypes.java: New class file to list the 7 basic types.
	* Endian.java:	New class file to represent the Endianness of a Type.
	* TypeTest.java:  New file to test the Type System.
	* OperationNotDefinedException.java:  New file to define exceptions to
	be thrown when an operator is called for a type for which it is not
	defined.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/proc/ to frysk/lang/.

2005-09-01  Andrew Cagney  <cagney@redhat.com>
	
	* .cvsignore: New.

2005-08-08  Andrew Cagney  <cagney@redhat.com>

	* Frame.java: New.
	* Language.java: New.
	* LexicalBlock.java: New.
	* Location.java: New.
	* Subprogram.java: New.
	* Thread.java: New.
	* Type.java: New.
	* Variable.java: New.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
