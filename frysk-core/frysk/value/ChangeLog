2007-08-21  Mark Wielaard  <mark@klomp.org>

	* PointerType.java: Remove unused import lib.dwfl.BaseTypes.

2007-08-20  Andrew Cagney  <cagney@redhat.com>

	* Format.java (print(PrintWriter,Location,PointerType): New.
	(printPointer(PrintWriter,Location): Delete.
	* VoidType.java: New file.
	* PointerType.java: Extend ArithmeticType.
	(toPrint(PrintWriter)): Assume that there's a type.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(toString(Value,ByteBuffer)): Delete.
	(PointerType(ByteOrder,int,Type,String): New constructor.
	(asBigInteger(Location)): New.
	
	* TestValue.java (testArrayOfArrayOfNumber)
	(testArrayOfNumber): Delete; moved to TestArray.java.
	* TestArray.java: New.
	* Location.java (slice(long offset, long length)): New.
	* TestLocation.java (testSlice()): New.
	* ArrayType.java (toString(Value,ByteBuffer)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(stride): New array.
	(ArrayType): Compute the stride.
	(get): Do not compute the stride.
	(ArrayIterator): Simplify, make private.
	(dimension, nrElements): New.
	(slice): New.
	(getValue, iterator, buildArraySlice, dimensions): Delete.
	(get): Update.

	* TestEnum.java: New file.
	* IntegerType.java
	(toPrint(PrintWriter,Location,ByteBuffer,Format): Make package
	private.
	* EnumType.java (Member, valueToMember): New.
	(values, names, type, toString): Delete.
	(toPrint(PrintWriter)): Re-implement.
	(toPrint(PrintWriter,Location,ByteBuffer,Format): New.
	(addMember(String,long)): New.
	(addMember(Type,String,long)): Delete.
	* TestValue.java (testEnum): Delete.
	* ArithmeticType.java
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): Delete.
	* Type.java (toPrint()): Make final.
	(toPrint(Location,ByteBuffer,Format): New.
	(toPrint(PrintWriter,Value,ByteBuffer,Format)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): Call toString.
	* Value.java: Update.
	
2007-08-19  Andrew Cagney  <cagney@redhat.com>

	* ArithmeticType.java: Replace BaseTypes.isInteger and
	BaseTypes.isLong with instanceof IntegerType.  Replace isFloat
	with instanceof FloatingPointType.
	
	* StandardTypes.java: Replace IntegerType with SignedType.
	* TestValue.java: Replace IntegerType with SignedType and
	UnsignedType.
	* IntegerType.java: Make abstract.
	(asBigInteger): Make abstract.
	
	* TestIntegerType.java: New file.
	* EnumType.java: Extend IntegerType.
	(asBigInteger): New.
	(add): Delete.
	(subtract): Delete.
	(logicalNegation): Delete.
	(assign): Delete.
	(timesEqual): Delete.
	(divideEqual): Delete.
	(minusEqual): Delete.
	(plusEqual): Delete.
	(modEqual): Delete.
	(shiftLeftEqual): Delete.
	(shiftRightEqual): Delete.
	(bitWiseAndEqual): Delete.
	(bitWiseOrEqual): Delete.
	(bitWiseXorEqual): Delete.
	(multiply): Delete.
	(divide): Delete.
	(mod): Delete.
	(shiftLeft): Delete.
	(shiftRight): Delete.
	(lessThan): Delete.
	(greaterThan): Delete.
	(greaterThanOrEqualTo): Delete.
	(lessThanOrEqualTo): Delete.
	(equal): Delete.
	(notEqual): Delete.
	(bitWiseAnd): Delete.
	(bitWiseOr): Delete.
	(bitWiseXor): Delete.
	(bitWiseComplement): Delete.
	(logicalAnd): Delete.
	(logicalOr): Delete.
	* IntegerType.java (asBigInteger): New method.
	* SignedType.java: New file.
	* UnsignedType.java: New file.

	* Type.java (getName): Delete.
	* ClassType.java (toPrint(PrintWriter)): New.
	(getName): Delete.
	* EnumType.java: Ditto.
	* FunctionType.java: Ditto.
	* PointerType.java: Ditto.
	* ArrayType.java: Ditto.

2007-08-17  Teresa Thomas  <tthomas@redhat.com>
	
	* Piece.java: New File.
	* MemoryPiece.java: New File.
	* RegisterPiece.java: New File.
	* UnavailablePiece.java: New File.

2007-08-15  Andrew Cagney  <cagney@redhat.com>

	* Type.java (toPrint()): New.
	(toPrint(PrintWriter)): Implement using getName.
	(getName): Make package private.
	* ArithmeticType.java: Use toPrint().
	
	* Location.java (asByteArray): New.
	(Location(byte[]): New.
	* TestLocation.java: New file.

	* IntegerType.java: Make constructor public, add boolean parameter.
	* FloatingPointType.java: Ditto.
	* ArithmeticType.java: Make abstract.
	(toPrint(PrintWriter)): Print "name".
	* StandardTypes.java: Use IntegerType and FloatingPointType.
	* TestValue.java: Ditto.

	* EnumType.java: Re-indent.
	* FunctionType.java: Re-indent.
	* ClassType.java: Re-indent.
	* PointerType.java: Re-indent.
	* ArrayType.java: Re-indent.

	* Type.java (getTypeIdFIXME): Rename getTypeId.
	* ArithmeticType.java: Update.
	* Value.java: Update.

2007-08-15  Stan Cox  <scox@redhat.com>

	* ArrayType.java (buildArraySlice): New.
	(get): Use it.

2007-08-15  Andrew Cagney  <cagney@redhat.com>

	* Thread.java: Delete.
	* Language.java: Delete.
	* Frame.java: Delete.

2007-08-14  Andrew Cagney  <cagney@redhat.com>

	* Format.java (print(PrintWriter,Location,IntegerType): New.
	(print(PrintWriter,Location,FloatingPointType): New.
	(printInteger): Delete.
	(printFloatingPoint): Delete.
	* IntegerType.java: New file.
	* FloatingPointType.java: New file.
	* ArithmeticType.java: Update.
	
	* ArithmeticType.java (toString(Value,ByteBuffer)): Delete.
	(toPrint(PrintWriter,Location,ByteBuffer,Format)): New.
	(toPrint(PrintWriter)): New.
	* Type.java (toPrint(PrintWriter)): Throw a RuntimeException.
	(toPrint(PrintWriter, Location, ByteBuffer, Format): Ditto.
	(toString(Value,ByteBuffer)): Implement using toPrint.
	
	* TestValue.java: Replace Value.toString with Value.toPrint().
	* ArithmeticType.java (toString(Value,Format): Delete.
	* Value.java(toPrint(), toPrint(Format)): New.
	
	* Value.java (toPrint(ByteBuffer,Format)): New.
	* Type.java (toPrint(PrintWriter,Location,ByteBuffer,Format): New.
	(toString(Value)): Delete.
	(toPrint(PrintWriter)): New.
	* PointerType.java (toString(Value)): Delete.
	* FunctionType.java (toString(Value)): Delete.
	* EnumType.java (toString(Value)): Delete.
	* ClassType.java (toString(Value)): Delete.
	* ArrayType.java (toString(Value)): Delete.
	* ArithmeticType.java (toString(Value)): Delete.
	
	* Value.java (toString(ByteBuffer)): Delete.
	* ClassType.java: Replace Value.toString call with Type.toString
	call.

2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* Value.java (asLong): Replace longValue.
	(intValue): Delete.
	* ArithmeticType.java: Use asLong.
	* PointerType.java: Ditto.

2007-08-13  Nurdin Premji  <npremji@redhat.com>

	* ArithmeticType.java (toString): Use Value.location.getXX()
	instead of Value.getXX().
	* Value.java(getDouble): Removed.
	(getFloat): Removed.
	(getInt): Removed.
	(getLong): Removed.
	(getShort): Removed.

	* StandardTypes.java (getByteType): Added.
	(getDoubleType): Ditto.
	(longLittleEndianType): Ditto. 
	(getLongType): Ditto.
	(floatLittleEndianType): Ditto.
	(intBigEndianType): Ditto.
	(byteLittleEndianType): Ditto.
	(intLittleEndianType): Ditto.
	(floatBigEndianType): Ditto.
	(getIntType): Ditto.
	(getFloatType): Ditto.
	(doubleLittleEndianType): Ditto.
	(shortLittleEndianType): Ditto.
	(longBigEndianType): Ditto.
	(getShortType): Ditto.
	(doubleBigEndianType): Ditto.
	(shortBigEndianType): Ditto.
	(byteBigEndianType): Ditto.

	* Location.java (putInt): Added, takes a ByteOrder.
	(putDouble): Ditto.
	(getDouble): Ditto.
	(getLong): Ditto.
	(getInt): Ditto.
	(getChar): Ditto.
	(putLong): Ditto.
	(putChar): Ditto.
	(getShort): Ditto.
	(getFloat): Ditto.
	(putFloat): Ditto.
	(putShort): Ditto.
	* Format.java (BINARY): Added.
	* ArithmeticType.java (toString): Added, takes a Format.
	* Value.java (getDouble): Added, takes a ByteOrder.
	(getLong): Ditto.
	(getInt): Ditto.
	(getShort): Ditto.
	(getFloat): Ditto.
	
2007-08-13  Andrew Cagney  <cagney@redhat.com>

	* Value.java (Value(Type,String,ArrayByteBuffer)): Delete.

	* Value.java (Value(Type,Location)): New.
	(Value(Type)): Delete.
	
	* Value.java (textFIXME): Rename text.
	(getTextFIXME): Rename getText.
	* ArrayType.java: Update.

2007-08-13  Andrew Cagney  <cagney@redhat.com>
            Nurdin Premji  <npremji@redhat.com>
	
	* Value.java (columnXXX, getColumnXXX): Delete.
	(getFilePathXXX, setFilePathXXX, filePathXXX): Delete.
	(getLineNoXXX, setLineNoXXX, lineNoXXX): Delete.
	
2007-08-08  Nurdin Premji  <npremji@redhat.com>

	* ArithmeticTypes.java: Moved standard types to ...
	* StandardTypes.java: Added.
		
	* ArithmeticType.java: Added some general types.

2007-08-02  Andrew Cagney  <cagney@redhat.com>

	* Type.java (toPrint): New method.
	* Value.java (toPrint): New method.
	* Format.java: New file.

2007-08-02  Stan Cox  <scox@redhat.com>

	* Type.java (toString): Add ByteBuffer parameter.  Change all callers.
	* PointerType.java (toString): Dereference char*
	* ClassType.java (accessibility, inheritance): New.
	(getName): Display using a C like syntax.
	(addMember): Add accessibility.
	* ArrayType.java (toString): Look for terminating '\0'.
	* TestValue.java (testStructure): New struct output syntax.

2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* Value.java: Update; lib.dw and lib.elf merged into lib.dwfl.
	* ArithmeticType.java: Ditto.
	* ArrayType.java: Ditto.
	* TestValue.java: Ditto.
	* ClassType.java: Ditto.

2007-07-09  Stan Cox  <scox@redhat.com>

	* ClassType.java (getValue): Add PointerType and FunctionType.
	(toString): Likewise.
	* FunctionType.java (getName): Check for no parameters.
	* PointerType.java (toString): Output as hex.

2007-06-28  Stan Cox  <scox@redhat.com>

	* ClassType.java (baseClass): New.
	(setBaseClass): New.

2007-06-19  Stan Cox  <scox@redhat.com>

	* ArithmeticType.java (logicalNegation): New.
	* Type.java (logicalNegation): Likewise.
	* ArrayType.java (logicalNegation): Likewise.
	* EnumType.java (logicalNegation): Likewise.
	* ClassType.java (logicalNegation): Likewise.
	* FunctionType.java (logicalNegation): Likewise.
	* PointerType.java (logicalNegation): Likewise.

2007-06-18  Adam Jocksch  <ajocksch@redhat.com>

	* Location.java: Made public so we can access the internal ByteBuffer.

2007-06-13  Stan Cox  <scox@redhat.com>

	* Type.java (isTypedef): New.
	* ArithmeticType.java (ArithmeticType): Use it.
	* ClassType.java (getName): Use it.

2007-06-08  Stan Cox  <scox@redhat.com>

	* FunctionType.java: New file.

2007-05-25  Stan Cox  <scox@redhat.com>

	* PointerType.java: New.

2007-05-25  Stan Cox  <scox@redhat.com>

	* ArrayType.java (getValue): Use slicing.
	(get): Chain struct/array references.
	* ClassType.java (getValue): Use slicing.
	(get): Chain struct/array references.
	* Value.java (Value): New (Type, String, ByteBuffer).

2007-05-17  Stan Cox  <scox@redhat.com>

	* ArrayType.java (get): Skip array name.

2007-05-10  Stan Cox  <scox@redhat.com>

	* Value.java (Variable): Rename Value.
	Change all callers.

2007-05-09  Stan Cox  <scox@redhat.com>

	* ArithmeticType.java (newVariable): Remove DwarfDie from newXVariable 
	signature.
	* ArrayType.java (ArrayType): Likewise.
	* ClassType.java (ClassType): Likewise.
	* Variable.java (Variable): Likewise.

2007-05-08  Andrew Cagney  <cagney@redhat.com>

	* Variable.java (filePathXXX): Rename filePath.
	(lineNoXXX): Rename lineNo.
	(columnXXX): Rename column.

2007-05-08  Stan Cox  <scox@redhat.com>

	* ClassType.java (getVariable): newXVariable signature.
	* ArrayType.java (ArrayIterator.next): Call getVariable.
	(getVariable): New.
	(get): New.
	* ArithmeticType.java (newVariable): newXVariable signature.
	* Variable.java (Variable): new signature.

2007-05-02  Stan Cox  <scox@redhat.com>

	* ClassType.java (ClassIterator.next): Call getVariable.
	(getVariable): Moved from above.
	(get): New for member access.
	(toString): Use gdb-like output formatting.  Output bit field length.
	* ArrayType.java (getType): New.
	(Iterator.next): Handle ClassType.
	(toString): Use gdb-like output formatting.
	(ArrayType): Add size parameter.
	* Type.java (longValue): Removed.
	(newVariable): Moved to...
	* ArithmeticType.java: here.
	* TestValue.java (testArrayOfNumber): Allow for current formatting.

2007-04-30  Adam Jocksch  <ajocksch@redhat.com>

	* Variable.java (filePath): Added, this is a temporary measure until I
	am sure this is the correct way to keep track of the file/line no that
	a variable is found at.
	(lineNo): Added, same as above.
	(getFilePath): Added.
	(getLineNo): Added.
	(setFilePathXXX): Added, this is VERY temporary as we should not be
	allowing people to change this.
	(setLineNoXXX): Ditto.

2007-04-24  Stan Cox  <scox@redhat.com>

	* TestValue.java (testNumber,testIntOps,testFloatOps,testEnum): New.
	(testArrayOfNumber,testArrayOfArrayOfNumber,testStructure): New.
	* Type.java (bitWiseComplement): New.
	* ArrayType.java (bitWiseComplement): Likewise.
	* EnumType.java (bitWiseComplement): Likewise.
	* ClassType.java (bitWiseComplement): Likewise.
	* ArithmeticType.java (shiftLeft, shiftRight): Allow mixed type operands.

2007-04-20  Stan Cox  <scox@redhat.com>

	* ClassType.java (Iterator.next): Support bit fields.

2007-04-15  Stan Cox  <scox@redhat.com>

	* ArithmeticType.java: New file. Replaces:
	* ByteType.java: Removed.
	* ShortType.java: Removed.			
	* IntegerType.java: Removed.
	* LongType.java: Removed.
	* FloatTYpe.java: Removed.
	* DoubleType.java: Removed.
	* Variable.java (intValue): New.
	(longValue): New.
	(doubleValue): New.
	* ArrayType.java (Iterator.next): Return Variable instead of value.
	* Type.java (newVariable): New.
	* ClassType.java (Iterator.next): Likewise.

2007-03-30  Stan Cox  <scox@redhat.com>

	* ArrayType.java (getName): New.
	* ClassType.java (getName): New.
	* EnumType.java: New file.

2007-03-27  Andrew Cagney  <cagney@redhat.com>

	* TestValue.java: Sketch unit tests.

2007-03-23  Andrew Cagney  <cagney@redhat.com>

	* TypeTest.java: Delete.
	* TestValue.java: New.
	* Location.java: Remove '_' prefix in members.
	* ArrayType.java: Ditto.
	* Variable.java: Ditto.
	* Type.java: Ditto.
	* ShortType.java: Ditto.
	* ClassType.java: Ditto.

2007-03-15  Andrew Cagney  <cagney@redhat.com>

	* Frame.java: Import frysk.rt.Subprogram.

2007-02-14  Stan Cox  <scox@redhat.com>

	* ClassType.java (offsets): New.
	(Iterator.next): Use it.

2007-01-29  Stan Cox  <scox@redhat.com>

	* ArrayType.java (Iterator.nextIdx): Fix stride calculation.

2007-01-16  Stan Cox  <scox@redhat.com>

	* ArrayType.java (toString): Special case array of baseTypeChar.
	* Type.java (longValue) Use getByte for baseTypeChar.

2006-12-14  Stan Cox  <scox@redhat.com>

	* ByteType.java: New.
	* ShortType.java (newByteVariable): New.
	* LongType.java (newByteVariable): New. 
	* IntegerType.java (newByteVariable): New.
	* FloatType.java (newByteVariable): New.  
	* DoubleType.java (newByteVariable): New. 
	* Type.java (newByteVariable): New.
	* Variable.java (getByte): New..

2006-12-11  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Delete.

2006-12-06  Nurdin Premji  <npremji@redhat.com>

	* IntegerType.java: Added (C).
	* ShortType.java: Ditto.
	* TypeTest.java: Ditto.
	* ClassType.java: Ditto.
	* LongType.java: Ditto.

2006-12-01  Stan Cox  <scox@redhat.com>

	* LongType.java: New.
	* ShortType.java (newLongVariable): New.  Reformat file.
	* IntegerType.java (newLongVariable): New.  Reformat file.
	* FloatType.java (newLongVariable): New.  Reformat file.
	* DoubleType.java (newLongVariable): New.  Reformat file.
	* Type.java (newLongVariable): New.
	* Variable.java (getLong): Use getLong.
	
2006-11-16  Stan Cox  <scox@redhat.com>

	* Type.java: Rename frysk.lang to frysk.value.
	* DoubleType.java: Rename frysk.lang to frysk.value.
	* OperationNotDefinedException.java: Rename frysk.lang to frysk.value.
	* Subprogram.java: Rename frysk.lang to frysk.value.
	* FloatType.java: Rename frysk.lang to frysk.value.
	* Thread.java: Rename frysk.lang to frysk.value.
	* Frame.java: Rename frysk.lang to frysk.value.
	* IntegerType.java: Rename frysk.lang to frysk.value.
	* ArrayType.java: Rename frysk.lang to frysk.value.
	* TypeTest.java: Rename frysk.lang to frysk.value.
	* Variable.java: Rename frysk.lang to frysk.value.
	* Location.java: Rename frysk.lang to frysk.value.
	* LexicalBlock.java: Rename frysk.lang to frysk.value.
	* ClassType.java: Rename frysk.lang to frysk.value.
	* InvalidOperatorException.java: Rename frysk.lang to frysk.value.
	* Language.java: Rename frysk.lang to frysk.value.
	* ShortType.java: Rename frysk.lang to frysk.value.

2006-11-03  Stan Cox  <scox@redhat.com>

	* ArrayType.java: New file.
	* Type.java: Add BaseTypes.
	* DoubleType.java: Add BaseTypes.
	* FloatType.java: Add BaseTypes.
	* IntegerType.java: Add BaseTypes.
	* ShortType.java: Add BaseTypes.
	* LocationType.java (getInt(int idx): New.  Likewise for
	getChar,getShort,getLong,getFloat,getDouble
	* Variable.java (Variable): New ArrayByteBuffer constructor.

2006-09-18  Stan Cox  <scox@redhat.com>

	* Variable.java (getFloat): New.
	(getDouble): New.
	(putFloat): New.
	(putDouble): New.
	* FloatType.java: New file.
	* Type.java (newFloatVariable): New.
	(newDoubleVariable): New.
	* Location.java (getDouble): New.
	(getFloat): New.
	* IntegerType.java (newFloatVariable): New.
	(newDoubleVariable): New.
	* ShortType.java (newFloatVariable): New.
	(newDoubleVariable): New.

2006-09-11  Stan Cox  <scox@redhat.com>

	* IntegerType.java (IntegerType): Use ByteOrder.
	* ShortType.java (ShortType): Likewise.
	* Type.java (Type): Likewise.
	(getEndian): Likewise.
	* TypeTest.java (TypeTest): Likewise.

2005-11-07  Tarun Khanna  <tkhanna@redhat.com>

	* IntegerType.java: Commented out some code to remove warnings.

2005-11-03  Tarun Khanna  <tkhanna@redhat.com>

	* Type.java:  Added the last set of arithematic operations.
	* ShortType.java:  Added the last set of arithematic operations.
	* IntegerType.java:  Added the last set of arithematic operations.
	* Variable.java:  Added the last set of arithematic operations.

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* Type.java:  Added more arithematic operations
	* ShortType.java:  Added more arithematic operations
	* IntegerType.java:  Added more arithematic operations

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* InvalidOperatorException.java:  New file to catch exceptions when an
	operator function is called with wrong types of arguments.

2005-10-28  Tarun Khanna  <tkhanna@redhat.com>

	* IntegerType.java: Added constructors and functions.
	* ShortType.java: Same...
	* Type.java:  Added abstract arithematic functions.
	* Variable.java:  Added constructors and functions...
	* Location.java:  Added constructors and functions...
	* OperationNotDefinedException.java:  Fixed a compile time bug...
	* TypeTest.java:  Added a test case for the Type System.

2005-10-19  Tarun Khanna  <tkhanna@redhat.com>

	* IntegerType.java: Added constructors and functions.
	* ShortType.java: Same...
	* Type.java:  Added abstract functions.
	* Variable.java:  Added constructors and functions...

2005-10-18  Tarun Khanna  <tkhanna@redhat.com>

	* Type.java: Modified file to define an abstract Type system.
	* Location.java:  Modified file for storing variable location
	* Variable.java:  Modified file to represent Variables.
	* IntegerType.java: New file to represent the primitive Integer Type.
	* ShortType.java: New file to represent the primitive Integer Type.
	* BaseTypes.java: New class file to list the 7 basic types.
	* Endian.java:	New class file to represent the Endianness of a Type.
	* TypeTest.java:  New file to test the Type System.
	* OperationNotDefinedException.java:  New file to define exceptions to
	be thrown when an operator is called for a type for which it is not
	defined.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/proc/ to frysk/lang/.

2005-09-01  Andrew Cagney  <cagney@redhat.com>
	
	* .cvsignore: New.

2005-08-08  Andrew Cagney  <cagney@redhat.com>

	* Frame.java: New.
	* Language.java: New.
	* LexicalBlock.java: New.
	* Location.java: New.
	* Subprogram.java: New.
	* Thread.java: New.
	* Type.java: New.
	* Variable.java: New.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
