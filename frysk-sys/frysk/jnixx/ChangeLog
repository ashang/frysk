2008-05-07  Andrew Cagney  <cagney@redhat.com>

	* Printer.java: Parameterize with PrintWriter.
	* Main.java: Flush the Printer.
	* PrintDeclarations.java: Generate classes that extend either
	jnixx::object or jnixx::objectArray.
	* jnixx.hxx (jnixx): Declare env, exception, object, and
	objectArray.

	* PrintCxxDefinitions.java: Generate _class$ variable of nested
	classes.
	* Main.java: Ditto.
	* ClassVisitor.java: Visit nested classes.
	* ClassWalker.java: Update.
	* PrintCxxDefinitions.java: Update.
	* PrintHxxDefinitions.java: Update.
	* PrintDeclarations.java: Update.
	* Printer.java: Encode "$".
	
	* print.cxx: Include Errno-jni.hxx.
	* exceptions.cxx: Include Errno-jni.hxx.
	* Main.java: Move jnixx::exception definition to ...
	* jnixx.hxx (jnixx::exception): ... here.
	
2008-05-06  Andrew Cagney  <cagney@redhat.com>

	Generate inlined C++ headers.
	* ClassWalker.java: Replace WalkClass.
	* ClassVisitor.java: Replace ClassWalker.
	* PrintDefinitions.java: Delete; split into ...
	* PrintCxxDefinitions.java: New; ... this ...
	* PrintHxxDefinitions.java: New; ... and this.
	* Main.java: Use.
	* PrintDeclarations.java: Extend ClassWalker.
	* PrintNamespaces.java: Extend ClassWalker.
	* Printer.java: Update.
	* jnixx.hxx: Simplify.
	* PrintIncludes.java: Delete.
	
	* jnixx.hxx (jnixx::env): Add <Type>Array methods.
	* PrintDefinitions.java: Don't cast primitive array results.

2008-05-05  Andrew Cagney  <cagney@redhat.com>

	* jnixx.hxx (jnixx::object): New.
	* Main.java: Generate each class extending jnixx::object instead
	of __jobject.
	* PrintDeclarations.java: Ditto
	* PrintDefinitions.java: Ditto.
	* PrintNamespaces.java: Ditto.
	* Printer.java: Ditto.
	* PrintIncludes.java: New; same.
	* print.cxx: Convert to jnixx::object.
	* print.cxx: Ditto.
	
	* Printer(dent(int,String,String)): New.
	* PrintNamespaces.java: Clean up generated indentation.
	* PrintDefinitions.java: Ditto.
	* PrintDeclarations.java: Ditto.
	* Main.java: Ditto.

	* jnixx.hxx: New.
	* Printer.java: Generate jnixx::env& instead of JNIEnv*, and
	jnixx::exception instead of jnixx_exception.
	* PrintDefinitions.java: Ditto.
	* PrintDeclarations.java: Ditto.
	* Main.java: Generate #include jnixx.hxx instead of xx.hxx. 
	* print.hxx: Use jnixx.hxx; replace JNIEnv* with jnixx::env&.
	* print.cxx: Ditto.
	* exceptions.hxx: Ditto.
	
2008-05-02  Andrew Cagney  <cagney@redhat.com>

	* jnixx.java: Refactor into ...
	* Main.java: ... this; new.
	* WalkClass.java: ... this; new.
	* PrintDeclarations.java: ... this; new.
	* PrintDefinitions.java: ... this; new.
	* Printer.java: ... this; new.
	* PrintNamespaces.java: ... this; new.

	* Rename directory to frysk/jnixx/

	* jnixx.java: Generate constructors and field accessors.

2008-05-01  Andrew Cagney  <cagney@redhat.com>

	* exceptions.cxx (runtimeException): Throw an exception.
	* exceptions.hxx: Mark with noreturn.

	* xx.hxx (jstringArray): Define.
	* jnixx.java: Generate function signatures; wrap headers in
	#ifdef; better handle array types.

	* jnixx.java: Use findClass and frysk/jni/xx.hxx; throw
	jnixx_exception.
	* xx.hxx: Replace members.hxx.
	* xx.cxx: Replace members.cxx.

	* jnixx.java: Generate Class(JNIEnv*) method; drop jclass
	parameter; don't new the exception.

2008-04-30  Andrew Cagney  <cagney@redhat.com>

	* jnixx.java: New.

2008-04-17  Andrew Cagney  <cagney@redhat.com>

	* exceptions.cxx: New.
	* exceptions.hxx: New.

2008-04-16  Andrew Cagney  <cagney@redhat.com>

	* util.cxx: New.
	* print.cxx: New.
	* print.hxx: New.
	* util.hxx: New.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
