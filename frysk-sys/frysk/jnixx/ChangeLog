2008-05-12  Andrew Cagney  <cagney@redhat.com>

	Have object array extend ::java::lang::Object.
	* JniBindings.java (printGlobals(Printer,Class)): New. Generate
	the array template.
	* PrintDeclarations.java: Call printGlobals for each class.  Make
	java's root object the jnixx root.
	* jnixx.hxx (jnixx::object): Delete.
	(jnixx::array): Delete.
	* chars.cxx (jnixx::array): Update.
	* PrintHxxDefinitions.java: Update.

2008-05-11  Andrew Cagney  <cagney@redhat.com>

	* Main.java: Set the VM during load.
	* PrintDeclarations.java: Generate non-env parametered wrappers.
	* PrintHxxDefinitions.java: Ditto.
	* Printer.java: Ditto.

2008-05-09  Andrew Cagney  <cagney@redhat.com>

	* Main.java: Take a class file; dump all classes; print progress.
	* Printer.java: Break up <: in "array<::Component>"

	* Main.java: Add a header filename parameter; in .cxx file,
	generate #include of header, instead of header contents.

	* PrintDeclarations.java: Generate a protected constructor; and a
	static Cast method.
	* jnixx.hxx (jnixx::array): Add Cast method.
	* Printer.java: Generate calls to Cast.
	* PrintCxxDefinitions.java: Ditto
	* print.cxx: Use explicit casts.

	* jnixx.hxx (jnixx::array): Add templated JNI array method.
	* chars.cxx: Use tempated array methods.
	* JniBindings.java: Drop String parameter to GetStringLength.

	* jni/Native.cxx (Native::sizeOfObject): Replace sizeOfJnixxObject.
	(Native::sizeOfObjectArray, Native::sizeOfClass): New.
	* cni/Native.cxx (Native::sizeOfObject): Replace sizeOfJnixxObject
	(Native::sizeOfClass, Native::sizeOfObjectArray): New.
	* TestJnixx.java (testSizeOfObject): Replace testSizeofJnixxObject.
	(testSizeOfObjectArray, testSizeOfClass): New.
	* Native.java (sizeOfObjectArray()): New.
	* Printer.java (printCxxName): For object array's generate a
	templated class instance.
	* PrintNamespaces.java: Don't generate array namespace names.
	* chars.cxx (strings2chars): Use Array templates.
	* chars.hxx: Ditto.

	* ClassWalker.java: Walk an array's component type, and before the
	wrapping array.

	* Printer.java (printCxxType(Class)): Delete.
	(printCxxName(Class,boolean)): New.
	(printQualifiedCxxName(Class)): Use.
	(printGlobalCxxName(Class)): Use.
	(printGlobalCxxName(Member)): New.
	* PrintHxxDefinitions.java: Update.
	* PrintCxxDefinitions.java: Update.
	* PrintDeclarations.java: Update.

	* Main.java (treatAsNative(Method)): New.
	(treatAsPrivate(Member)): New.
	* PrintDeclarations.java: Use.
	* PrintHxxDefinitions.java: Use.
	* PrintCxxDefinitions.java: Use; Extend ClassWalker.
	* TestJnixx.java (testCharsConversion()): New.
	* chars.hxx: New.
	* chars.cxx: .New.
	* jni/Native.cxx (Native::copy): New.
	* cni/Native.cxx (Native::copy): New.

2008-05-08  Andrew Cagney  <cagney@redhat.com>

	* jnixx.hxx (jnixx::env): Fill in missing JNI bindings; match JNI
	names.
	* print.cxx: Update.
	* exceptions.cxx: Update.
	
	* JniBindings.java: New; enbed JNI in class.
	* PrintHxxDefinitions.java: Use.
	* PrintDeclarations.java: Use.

2008-05-07  Andrew Cagney  <cagney@redhat.com>

	* Printer.java (printReturn): New.
	* PrintHxxDefinitions.java: Use.

	* jni/Native.cxx: Include jni.hxx; fully qualify jnixx::env.
	* print.cxx: Ditto.
	* print.hxx: Ditto.
	* exceptions.cxx: Ditto.
	* exceptions.hxx: Ditto.
	* Main.java: Accept a list of classes.

	* Printer.java: Generate passing jnixx::env by value, not reference.
	* Native.java: New.
	* jni/Native.cxx: New.
	* cni/Native.cxx: New.
	* TestJnixx.java: New.
	* PrintHxxDefinitions.java: Ditto.
	* PrintCxxDefinitions.java: Ditto.

	* jnixx.hxx (jnixx::env): Rename jniEnv to _jni, make public.
	* Printer.java: Generate _jni, _class, and _class_().
	* PrintDeclarations.java: Ditto.
	* PrintCxxDefinitions.java: Ditto.
	* Main.java: Ditto.
	
	* jnixx.hxx (getStringUTFLength): New.
	(getStringUTFRegion): New.

	* Printer.java: Parameterize with PrintWriter.
	* Main.java: Flush the Printer.
	* PrintDeclarations.java: Generate classes that extend either
	jnixx::object or jnixx::objectArray.
	* jnixx.hxx (jnixx): Declare env, exception, object, and
	objectArray.

	* PrintCxxDefinitions.java: Generate _class$ variable of nested
	classes.
	* Main.java: Ditto.
	* ClassVisitor.java: Visit nested classes.
	* ClassWalker.java: Update.
	* PrintCxxDefinitions.java: Update.
	* PrintHxxDefinitions.java: Update.
	* PrintDeclarations.java: Update.
	* Printer.java: Encode "$".
	
	* print.cxx: Include Errno-jni.hxx.
	* exceptions.cxx: Include Errno-jni.hxx.
	* Main.java: Move jnixx::exception definition to ...
	* jnixx.hxx (jnixx::exception): ... here.
	
2008-05-06  Andrew Cagney  <cagney@redhat.com>

	Generate inlined C++ headers.
	* ClassWalker.java: Replace WalkClass.
	* ClassVisitor.java: Replace ClassWalker.
	* PrintDefinitions.java: Delete; split into ...
	* PrintCxxDefinitions.java: New; ... this ...
	* PrintHxxDefinitions.java: New; ... and this.
	* Main.java: Use.
	* PrintDeclarations.java: Extend ClassWalker.
	* PrintNamespaces.java: Extend ClassWalker.
	* Printer.java: Update.
	* jnixx.hxx: Simplify.
	* PrintIncludes.java: Delete.
	
	* jnixx.hxx (jnixx::env): Add <Type>Array methods.
	* PrintDefinitions.java: Don't cast primitive array results.

2008-05-05  Andrew Cagney  <cagney@redhat.com>

	* jnixx.hxx (jnixx::object): New.
	* Main.java: Generate each class extending jnixx::object instead
	of __jobject.
	* PrintDeclarations.java: Ditto
	* PrintDefinitions.java: Ditto.
	* PrintNamespaces.java: Ditto.
	* Printer.java: Ditto.
	* PrintIncludes.java: New; same.
	* print.cxx: Convert to jnixx::object.
	* print.cxx: Ditto.
	
	* Printer(dent(int,String,String)): New.
	* PrintNamespaces.java: Clean up generated indentation.
	* PrintDefinitions.java: Ditto.
	* PrintDeclarations.java: Ditto.
	* Main.java: Ditto.

	* jnixx.hxx: New.
	* Printer.java: Generate jnixx::env& instead of JNIEnv*, and
	jnixx::exception instead of jnixx_exception.
	* PrintDefinitions.java: Ditto.
	* PrintDeclarations.java: Ditto.
	* Main.java: Generate #include jnixx.hxx instead of xx.hxx. 
	* print.hxx: Use jnixx.hxx; replace JNIEnv* with jnixx::env&.
	* print.cxx: Ditto.
	* exceptions.hxx: Ditto.
	
2008-05-02  Andrew Cagney  <cagney@redhat.com>

	* jnixx.java: Refactor into ...
	* Main.java: ... this; new.
	* WalkClass.java: ... this; new.
	* PrintDeclarations.java: ... this; new.
	* PrintDefinitions.java: ... this; new.
	* Printer.java: ... this; new.
	* PrintNamespaces.java: ... this; new.

	* Rename directory to frysk/jnixx/

	* jnixx.java: Generate constructors and field accessors.

2008-05-01  Andrew Cagney  <cagney@redhat.com>

	* exceptions.cxx (runtimeException): Throw an exception.
	* exceptions.hxx: Mark with noreturn.

	* xx.hxx (jstringArray): Define.
	* jnixx.java: Generate function signatures; wrap headers in
	#ifdef; better handle array types.

	* jnixx.java: Use findClass and frysk/jni/xx.hxx; throw
	jnixx_exception.
	* xx.hxx: Replace members.hxx.
	* xx.cxx: Replace members.cxx.

	* jnixx.java: Generate Class(JNIEnv*) method; drop jclass
	parameter; don't new the exception.

2008-04-30  Andrew Cagney  <cagney@redhat.com>

	* jnixx.java: New.

2008-04-17  Andrew Cagney  <cagney@redhat.com>

	* exceptions.cxx: New.
	* exceptions.hxx: New.

2008-04-16  Andrew Cagney  <cagney@redhat.com>

	* util.cxx: New.
	* print.cxx: New.
	* print.hxx: New.
	* util.hxx: New.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
