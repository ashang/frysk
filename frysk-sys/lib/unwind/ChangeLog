2008-05-24  Andrew Cagney  <cagney@redhat.com>

	* cni/UnwindH.hxx (image_put_unwind_info): New.
	(struct image): New.
	(fillProcInfoFromImage): Create an image and pass to
	unw_get_unwind_table.

 	* Unwind.java (createElfImageFromVDSO): Delete.
 	(createProcInfoFromElfImage): Delete.
 	(fillProcInfoFromVDSO): New.
 	(fillProcInfoFromElfImage): New.
 	* cni/UnwindH.hxx: Implement.
 	* ProcInfo.java: Use.
 	* ElfImage.java: Simplify.
 	* cni/ElfImage.cxx (ElfImage::mapElfImage): Delete.
 	
	* ProcInfo.java (fillNotAvailable): New.
	* Unwind.java (fillProcInfoNotAvailable): New.
	
	* ProcInfo.java (ProcInfo(int)): Delete.
	(error, getError()): Delete.
	(fillFromElfImage, fillFromVDSO): New.
	* Unwind.java (getProcInfo): Return a long.
	* Cursor.java (getProcInfo()): Update.
	* AddressSpace.java (findProcInfo): Add ProcInfo parameter.
	* Unwind.java (createProcInfoFromElfImage): Ditto.
	* TestUnwind.java: Update.
	* cni/UnwindH.hxx (find_proc_info): Update.
	(TARGET::createProcInfoFromElfImage): Update.

2008-05-23  Andrew Cagney  <cagney@redhat.com>

	* Unwind.java (getContext): Change parameter to long.
	* cni/UnwindH.hxx (TARGET::getContext): Update.
	
	* ProcInfo.java (unwProcInfo): Replace procInfo, a long.
	* Unwind.java: Ditto.
	* Cursor.java (getProcInfo()): Update.
	* cni/UnwindH.hxx: Update.

	* Unwind.java: For unwAddressSpace, pass a long, not RawData.
	* AddressSpace.java (unwAddressSpace): Change type to jlong.
	(getUnwinder()): Delete.
	
	* Cursor.java (unwCursor): Change type to long.
	* Unwind.java: Replace managed cursor param with long unwCursor.
	(destroyCursor(long)): New.
	(createCursor): Rename initRemote.
	* cni/UnwindH.hxx: Update.
	(TARGET::destroyCursor): Implement.
	* AddressSpace.java: Update.
	* TestUnwind.java: Update.
	
	* cni/UnwindH.hxx: Use unwCursor, unwProcInfo, and unwAddrSpace to
	refer to lib-unwind structures.  Use namespaces.

	* AddressSpace.java (createCursor()): New.
	(unwAddrSpace): Rename addressSpace.
	* Cursor.java (Cursor(AddressSpace)): Delete.
	(unwCursor): Rename cursor.
	* Unwind.java: Make most fields package-private.
	(initRemote): Add unwAddrSpace parameter.

2008-05-07  Andrew Cagney  <cagney@redhat.com>

	* jni/ElfImage.cxx: Include jni.hxx.
	* jni/UnwindX86.cxx: Ditto.
	* jni/UnwindX8664.cxx: Ditto.
	* jni/UnwindPPC64.cxx: Ditto.
	* jni/UnwindPPC32.cxx: Ditto.
	* jni/Unwind.cxx: Ditto.

2008-05-01  Andrew Cagney  <cagney@redhat.com>

	* jni/Unwind.cxx: New.
	* jni/ElfImage.cxx: Include jnixx generated header.
	* jni/UnwindX86.cxx: Ditto.
	* jni/UnwindX8664.cxx: Ditto.
	* jni/UnwindPPC64.cxx: Ditto.
	* jni/UnwindPPC32.cxx: Ditto.

2008-04-11  Andrew Cagney  <cagney@redhat.com>

	* jni/ElfImage.cxx: New.
	* jni/UnwindPPC32.cxx: New.
	* jni/UnwindPPC64.cxx: New.
	* jni/UnwindX86.cxx: New.
	* jni/UnwindX8664.cxx: New.

2008-03-11  Andrew Cagney  <cagney@redhat.com>

	* Cursor.java: Use LogFactory.

2008-02-11  Andrew Cagney  <cagney@redhat.com>

	* Unwind.java: Use frysk.rsl.
	* Cursor.java: Ditto.
	* cni/UnwindH.hxx: Ditto.

2008-01-18  Mark Wielaard  <mwielaard@redhat.com>

	* cni/UnwindH.hxx (get_eh_frame_hdr_addr): Prefer debug_frame.

2008-01-17  Mark Wielaard  <mwielaard@redhat.com>

	* cni/UnwindH.hxx (get_eh_frame_hdr_addr): Find and return
	debug_frame address and set pi->format.
	(createProcInfoFromElfImage): Handle either debug_frame or
	eh_frame addresses.
	
2007-12-22  Mark Wielaard  <mwielaard@redhat.com>

	* cni/UnwindH.hxx (get_eh_frame_hdr_addr): Return char*.
	(createProcInfoFromElfImage): Calculate virtual and adjusted
	addresses from eh_table_hdr and peh_vaddr.
	
2007-12-14  Jose Flavio Aguilar Paulino <joseflavio@gmail.com>

	* GenRegEnum.awk: Add new Awk script to generate the registers
	enum to be used for all archs. 

	* UnwindRegistersPPC32.shenum: Using the GenRegEnum.awk script.

	* UnwindRegistersPPC64.shenum: Same as above.

2007-12-11  Andrew Cagney  <cagney@redhat.com>

	* cni/UnwindH.hxx (getRegister): Delete stray printf.

2007-12-11  Mark Wielaard  <mwielaard@redhat.com>

	* ElfImage.java (name): New field.
	(ElfImage): Set name.
	(toString): Add name.
	* cni/ElfImage.cxx (mapElfImage): Pass in name.
	* cni/UnwindH.hxx (access_mem): Handle memory holes.
	(get_eh_frame_hdr_addr): New static function.
	(local_access_mem): Likewise.
	(createProcInfoFromElfImage): Use get_eh_frame_hdr_addr and
	local_access_mem.
	(createElfImageFromVDSO): Set name to [vdso].
	
2007-12-10  Andrew Cagney  <cagney@redhat.com>

	* cni/UnwindH.hxx (access_fpreg): Allocate a buffer big enough for
	unw_fpreg_t.

2007-12-03  Mark Wielaard  <mwielaard@redhat.com>

	* Cursor.java (getCFA): New method.
	* Unwind.java (getCFA): Likewise.
	* cni/UnwindH.hxx (getCFA): Likewise.
	
2007-11-30  Mark Wielaard  <mwielaard@redhat.com>

	* AddressSpace.java (getDynInfoListAddr): Removed.
	(resume): Likewise.
	* cni/UnwindH.hxx (get_dyn_info_list_addr): Return -UNW_ENOINFO.
	(resume): return -UNW_EINVAL.

2007-11-29  Andrew Cagney  <cagney@redhat.com>

	* AddressSpace.java (getReg(Number)): Replace getReg(int).
	(setReg(Number,long)): Replace setReg(int,long).
	(accessReg(Number,byte[],boolean)): Replace
	accessFPReg(int,byte[],boolean).
	* TestUnwind.java: Update.
	* cni/UnwindX8664.cxx (LIB_UNWIND_REGISTERS_H): Define.
	(TARGET_REGISTERS): Define.
	* cni/UnwindPPC64.cxx: Ditto.
	* cni/UnwindPPC32.cxx: Ditto.
	* cni/UnwindX86.cxx: Ditto.
	* Unwind.java
	(getRegister(RawDataManaged,Number,long,int,byte[],int)): Replace
	getRegister(RawDataManaged,int,long,int,byte[],int).
	(setRegister(RawDataManaged,Number,long,int,byte[],int)): Replace
	setRegister(RawDataManaged,int,long,int,byte[],int).
	* Cursor.java: Update.
	* cni/UnwindH.hxx (access_fpreg): Update.
	(access_reg): Update.
	(getRegister): Update.
	(setRegister): Update.

2007-11-29  Mark Wielaard  <mwielaard@redhat.com>

	* cni/ElfImage.cxx: Don't define MAP_32BIT.
	(mapElfImage): Don't use MAP_32BIT.
	* cni/UnwindH.hxx: Don't define MAP_32BIT.
	(createElfImageFromVDSO):  Don't use MAP_32BIT.
	
2007-11-23  Mark Wielaard  <mwielaard@redhat.com>

	* AddressSpace.java (getProcName): Removed.
	* Cursor.java (getProcName): Removed.
	* ProcName.java: Removed.
	* TestUnwind.java (getProcName): Removed.
	* Unwind.java (getProcName): Removed.
	* cnu/UnwindH.hxx (min): Removed.
	(get_proc_name): Return UNW_ENOMEM.
	(getProcName): Removed.

2007-11-19  Mark Wielaard  <mwielaard@redhat.com>

	* Cursor.java (getIP): New method.
	(unwind): Check current ip.
	* Unwind.java (getIP): New method.
	* cni/UnwindH.hxx (getIP): Likewise.
	(getContext): Check for null elfImage.
	
2007-11-13  Jose Flavio Aguilar Paulino <jflavio@br.ibm.com>
	
	* UnwindPPC32.cxx: New. To support powerpc32.

2007-11-09  Jose Flavio Aguilar Paulino <jflavio@br.ibm.com>

	* UnwindPPC32.java-sh: New
	* UnwindRegistersPPC32.shenum: New
	* UnwindRegistersPPC64.shenum: New	

2007-10-30  Andrew Cagney  <cagney@redhat.com>

	* UnwindPPC64.java-sh: Rename UnwindPPC64.shjava.
	* UnwindX86.java-sh: Rename UnwindX86.shjava.
	* UnwindX8664.java-sh: Rename UnwindX8664.shjava.

2007-10-14  Andrew Cagney  <cagney@redhat.com>

	* Unwind.java (getSP(RawDataManaged)): Relace
	getSP(RawDataManaged,byte[]).
	* cni/UnwindH.hxx (getSP): Update.
	* Cursor.java (getSP()): Replace getSP(byte[]).

2007-10-02  Andrew Cagney  <cagney@redhat.com>

	* RegisterX86.java: Delete.
	* RegisterAMD64.java: Delete.

2007-09-28  Andrew Cagney  <cagney@redhat.com>

	* Cursor.java (getRegister): Change "regNum" to a Number.
	(setRegister): Ditto.

2007-09-26  Andrew Cagney  <cagney@redhat.com>

	* Unwind.java (getRegister(RawDataManaged,int,byte[])): Delete.
	(getFPRegister(RawDataManaged,int,byte[])): Delete.
	(setRegister(RawDataManaged,int,byte[])): Delete.
	(setRegister(RawDataManaged,int,long)): Delete.
	(getRegister(RawDataManaged,int,int,int,byte[],int)): New.
	(setRegister(RawDataManaged,int,int,int,byte[],int)): New.
	* cni/UnwindH.hxx: Implement.
	* Cursor.java (getRegister(int,byte[])): Delete.
	(setRegister(int,long)): Delete.
	(getFPRegister(int,byte[])): Delete.
	(getRegister(int,int,int,byte[],int)): New.
	(setRegister(int,int,int,byte[],int)): New.
	
2007-09-26  Andrew Cagney  <cagney@redhat.com>

	* UnwindX86.java: Delete.
	* UnwindX8664.java: Delete.
	* UnwindPPC64.java: Delete.
	* UnwindX86.shjava: New.
	* UnwindX8664.shjava: New.
	* UnwindPPC64.shjava: New.

2007-09-24  Andrew Cagney  <cagney@redhat.com>

	* AddressSpace.java (accessReg): Delete.
	(getReg(int)): New.
	(setReg(int, long)): New.
	* TestUnwind.java: Update.
	* cni/UnwindH.hxx (access_reg): Update.

2007-08-23  Mark Wielaard  <mwielaard@redhat.com>

	* cni/UnwindH.hxx: Remove double include.

2007-08-13  Nurdin Premji  <npremji@redhat.com>

	* UnwindPPC64.java (getFPRegister): Added.
	* UnwindX86.java (getFPRegister): Added.
	* UnwindX8664.java (getFPRegister): Added.
	* Unwind.java (getFPRegister): Added.
	* Cursor.java (getFPRegister): Added.
	* cni/UnwindH.hxx (getFPRegister): Implemented.

2007-08-03  Nurdin Premji  <npremji@redhat.com>

	* UnwindRegistersX86.shenum: Added (C).
	* UnwindRegistersX8664.shenum: Ditto.
	Fix copying typo.

	* UnwindRegistersX86.shenum: Added.
	* UnwindRegistersX8664.shenum: Added.

2007-07-27  Nurdin Premji  <npremji@redhat.com>

	* UnwindCallbacks.java: Removed.

2007-07-16  Andrew Cagney  <cagney@redhat.com>

	* cni/UnwindH.hxx: Update, lib.elf and lib.dw merged into
	lib.dwfl.

2007-07-13  Andrew Cagney  <cagney@redhat.com>

	* cni/UnwindH.hxx: Move all #include's to here.  Use
	LIB_UNWIND_UNWIND_TARGET_H and LIBUNWIND_TARGET_H as macros
	specifying target dependent headers.
	* cni/UnwindX86.cxx: Only #include UnwindH.hxx.
	(LIB_UNWIND_UNWIND_TARGET_H, LIBUNWIND_TARGET_H): Define.
	* cni/UnwindPPC64.cxx: Ditto.
	* cni/UnwindX8664.cxx: Ditto.

	* cni/UnwindX86.cxx: Do not include Accessors.h.
	* cni/UnwindX8664.cxx: Ditto.
	* cni/UnwindPPC64.cxx: Ditto.

2007-07-12  Andrew Cagney  <cagney@redhat.com>

	* Unwind.java (initRemote(AddressSpace): Replace
	initRemote(RawData,Accessors).
	(createProcInfoFromElfImage, createElfImageFromVDSO): Drop
	Accessors parameter.
	* Cursor.java (Cursor): Drop accessor parameter.
	(accessor): Delete.
	* AddressSpace.java (findProcInfo, putUnwindInfo)
	(getDynInfoListAddr, accessMem, accessReg, accessFPReg, resume)
	(getProcName): Move to here from Accessors.
	* Accessors.java: Delete.
	* cni/UnwindH.hxx (initRemote): Update.
	(addressSpace): Replace accessor.
	(find_proc_info, put_unwind_info, get_dyn_info_list_addr)
	(access_mem, access_reg, access_fpreg, get_proc_name)
	(resume): Use.
	* TestUnwind.java: Update.
	* UnwindX86.java: Update.
	* UnwindPPC64.java: Update.
	* UnwindX8664.java: Update.

2007-07-09  Andrew Cagney  <cagney@redhat.com>

	* Cursor.java: Re-indent.  Make fields final.
	* ProcInfo.java: Ditto.
	* AddressSpace.java: Ditto.

	* Accessors.java (magic, MAGIC): New fields.
	(Accessors): New constructor.
	(unwinder): Delete field.
	* TestUnwind.java: Update.
	* cni/UnwindH.hxx (accessor): New method; casts ARG to Accessors.
	(find_proc_info, put_unwind_info, get_dyn_info_list_addr, resume)
	(access_mem, access_reg, access_fpreg, min, get_proc_name):
	Use. Make static.

2007-07-03  Andrew Cagney  <cagney@redhat.com>

	* UnwindException.java: Delete.

2007-06-18  Nurdin Premji  <npremji@redhat.com>

	* ProcInfo.java: Use Unwind methods rather than having native methods.
	(ProcInfo): Take an unwinder as a parameter.
	* Unwind.java (getStartIP): Added.
	(getEndIP): Ditto.
	(getLSDA): Ditto.
	(getHandler): Ditto.
	(getGP): Ditto.
	(getFlags): Ditto.
	(getFormat): Ditto.
	(getUnwindInfoSize): Ditto.
	(getUnwindInfo): Ditto.
	* UnwindPPC64.java: Ditto.
	* UnwindX86.java: Ditto.
	* UnwindX8664.java: Ditto.
	* cni/ProcInfo.cxx: Removed.
	* UnwindH.hxx: Implemented above methods. Updated ProcInfo constructors.

2007-06-14  Nurdin Premji  <npremji@redhat.com>

	* FrameCursor.java: Removed.
	* PtraceAccessors.java: Removed.
	* StackTraceCreator.java: Removed.
	* UnwindNative.java: Removed.
	* UnwindX8664.java: Added.
	* UnwindPPC64.java: Added.
	* TestUnwind.java: Removed references to PtraceAccessors.
	* cni/FrameCursor.cxx: Removed.
	* cni/PtraceAccessors.cxx: Removed.
	* cni/StackTraceCreator.cxx: Removed.
	* cni/UnwindNative.cxx: Removed.
	* cni/UnwindX8664.cxx: Added.
	* cni/UNwindPPC64.cxx: Added.

2007-05-10  Nurdin Premji  <npremji@redhat.com>

	* Cursor.java (hasMoreFrames): Removed.
	(unwind): Check if there are more frames before unwinding.

	* Cursor.java (hasMoreFrames): Added.

2007-05-08  Nurdin Premji  <npremji@redhat.com>

	* Cursor.java: Added local reference to addressSpace and accessors. Avoids
	aggressive garbage collection.
	* cni/UnwindH.hxx (get_proc_name): Clean up code, set offset value before 
	checking buffer = null.

2007-05-03  Nurdin Premji <npremji@redhat.com>

	* cni/UnwindH.hxx (get_proc_name): Apply null procName->name patch.

2007-05-02  Andrew Cagney  <cagney@redhat.com>

	* Revert 2007-04-30 Nurdin Premji <npremji@redhat.com> change.

	* TestUnwind.java: Delete use of frysk.sys.Server.

2007-05-01  Nurdin Premji  <npremji@redhat.com>

	* cni/UnwindH.hxx (get_proc_name): Handle null procName->name case.
	(getProcName): Ditto.

2007-04-30  Nurdin Premji  <npremji@redhat.com>

	* Cursor.java (getRegister): Return int.
	(getSP): Added.
	(setRegister): Added.
	* Unwind.java (setRegister): Added.
	* UnwindNative.java: Ditto.
	* UnwindX86.java: Ditto.
	* cni/UnwindH.hxx: Ditto.

	* Cursor.java (getProcName): Added.
	(getRegister): Added.
	* ProcName.java: Renamed address field to offset field, more descriptive.
	* cni/UnwindH.hxx (get_proc_name): Update offset in the null buffer case.

	* cni/ElfImage.cxx: Astyle --style=gnu.
	* cni/ProcInfo.cxx: Ditto.
	* cni/PtraceAccessors.cxx: Ditto.
	* cni/UnwindH.hxx: Ditto.
	* cni/UnwindNative.cxx: Ditto.
	* cni/UnwindX86.cxx: Ditto.

	* ElfImage.java: Reduce visibility of internal fields. Added constructor.
	* ProcName.java: Reduced visibility of internal fields.
	* PtraceAccessors.java: Ditto.
	* TestUnwind.java: Updated.
	* cni/ElfImage.cxx: Updated.
	* cni/UnwindH.hxx: Updated.

2007-04-26  Nurdin Premji  <npremji@redhat.com>

	* Unwind.java (getRegister): return register value in a byte[].
	(getSP): Added.
	* UnwindNative.java: Ditto.
	* UnwindX86.java: Ditto.
	* cni/UnwindH.hxx: Ditto.

2007-04-25  Nurdin Premji  <npremji@redhat.com>

	* ProcInfo.java (getError): Added.
	(getStartIP): Made public.
	* ProcName.java (getError): Added.
	* cni/UnwindH.hxx (get_proc_name): Added code to detect empty string buffer.
	Fixes unw_get_proc_info crashing bug.

	* AddressSpace.java (getUnwinder): Added.
	* Cursor.java (getProcInfo): Added.
	(unwind): Cleaned up logging info.
	* ElfImage.java: Added.
	* ProcInfo.java (ProcInfo): Separated constructor into two constructors,
	one for error, one for success.
	(toString): Don't print extra data if there was an error.
	* Unwind.java (getProcInfo): Added.
	(createElfImageFromVDSO): Added.
	(createProcInfoFromElfImage): Added.
	* UnwindNative.java: Ditto.
	* UnwindX86.java: Ditto.
	* cni/ElfImage.cxx: Added.
	* cni/PtraceAccessors.cxx: Updated to reflect ProcInfo constructor changes.
	* cni/UnwindH.hxx: (getProcInfo): Implemented.
	(createElfImageFromVDSO): Ditto.
	(createProcInfoFromElfImage): Ditto.
	* cni/UnwindNative.cxx: Update headers.
	* cni/UnwindX86.cxx: Ditto.

2007-04-13  Andrew Cagney  <cagney@redhat.com>

	* PtraceAccessors.java (attachXXX, detachXX): Delete.
	* cni/PtraceAccessors.cxx: Ditto.
	* TestUnwind.java: Replace frysk.sys.TestLib with
	frysk.testbed.TearDownProcess, and frysk.testbed.AttachedSelf.
	Run tests on frysk.sys.Server as frysk.sys.Execute objects.

2007-03-29  Nurdin Premji <npremji@redhat.com>

	* cni/UnwindH.hxx (getProcName): Set value of offset pointer.

2007-03-28  Nurdin Premji <npremji@redhat.com>

	* cni/UnwindH.hxx: Fix buffer copy off by one bug, comment on it.

	* ProcName.java (ProcName): Added constructors with just error number.
	Added constructor with just offset and name.
	Made error, offset and name constructor private.
	* cni/PtraceAccessors.cxx: Updated ProcName creations.
	* cni/UnwindH.hxx: Ditto.

2007-03-23  Nurdin Premji  <npremji@redhat.com>

	* ProcInfo.java (toString): Print ip addresses in hex.

2007-03-21  Nurdin Premji  <npremji@redhat.com>

	* cni/UnwindX86.cxx: Removed reference to libunwind-x86.h for now.

	* UnwindX86.java : New	
	* cni/UnwindX86.cxx: New.
	* TestUnwind.java (testCreateCursor): Updated change in AddressSpace.
	(testCreateAddress): Ditto.
	(testPtraceAccessorsProc0): Ditto. 
	(testPtraceAccessorsSmallMaxName): Ditto. 
	(testPtraceAccessorsProcMax): Ditto.
	(testPtraceAccessors): Ditto.
	* AddressSpace.java (AddressSpace): Changed to take an Unwinder as a 
	parameter rather than create one.

2007-03-12  Nurdin Premji  <npremji@redhat.com>

	* Unwind.java: Put logger here, so anything implementing Unwind will
	have a logger.
	* UnwindNative.java: Removed logger.
	* cni/UnwindH.hxx: Added for generic macro purposes.
	* cni/UnwindNative.cxx: Use above.

2007-03-07  Nurdin Premji  <npremji@redhat.com>

	* cni/PtraceAccessors.cxx (findProcInfo): Allocate space for the procInfo.
	* cni/UnwindNative.cxx (native_find_proc_info): Pass a jlong to java, 
	not a long.

2007-03-06  Nurdin Premji  <npremji@redhat.com>

	* Accessors.java: Made methods public.
	* PtraceAccessors.java: Ditto.
	* TestUnwind.java (testCreateCursor): Ditto.

	* TestUnwind.java (testPtraceAccessorsProc0): New.
	(testPtraceAccessorsProcMax): New.
	(testPtraceAccessorsSmallMaxName): New.
	(testCreateCursor.accessMem): Made protected.
	(testCreateCursor.accessFPReg): Ditto.
	(testCreateCursor.resume): Ditto.
	(testCreateCursor.getProcName): Ditto.
	(testCreateCursor.putUnwindInfo): Ditto.
	(testCreateCursor.getDynInfoListAddr): Ditto.
	(testCreateCursor.findProcInfo): Ditto.
	(testCreateCursor.accessReg):Ditto.
	(testPtraceAccessors): Step through an entire stack trace.
	(testCreateAddress): Change assert message.
	* ProcInfo.java: Use RawData to hold an actual procInfo object.
	* Accessors.java: Made all methods protected.
	* PtraceAccessors.java: Ditto. 
	* Cursor.java: Removed unused addressSpace variable.
	(unwind): New.
	* ProcName.java (ProcName): Made public.
	* Unwind.java (copyCursor): New.
	* UnwindNative.java: (copyCursor): New.
	* Error.mkenum: New.
	* cni/ProcInfo.cxx: New.
	* cni/PtraceAccessors.cxx: Clean up logging. Change to reflect ProcInfo.java 
	changes.
	* cni/UnwindNative.cxx: Ditto.
	(native_access_mem): Pass a jlong to java, not a long.
	(copyCursor): Added.

2007-03-01  Mike Cvet  <mcvet@redhat.com>

	* StackTraceCreator.java (UnwindArgs.cleanup): Added. Moved code from 
	finalize() to here since UnwindArgs objects did not appear to have finalize()
	getting called.
	(finalize): Removed.
	(createStackTrace): Clean up and null out previous UnwindArgs objects.

2007-02-27  Nurdin Premji  <npremji@redhat.com>

	* ProcName.java: Added error value.
	* cni/PtraceAccessors.cxx (accessReg):  Added logging message for return value.
	(getProcName): Pass in a unw_word_t struct rather than a pointer to UPT_get_proc_name.
	Don't log a message with the buffer if UPT_get_proc_name returns a bad buffer.
	* cni/UnwindNative.cxx (getProcName): Reflect update to ProcName.
	(native_get_proc_name): Return the error stored in ProcName.

2007-02-27  Andrew Cagney  <cagney@redhat.com>

	* FrameCursor.java (procOffset, getProcOffset): Put back.
	(getProcInfoStart): Rename getProcStart.
	(getProcEnd): Replace getProcSize.
	* cni/FrameCursor.cxx (create_frame_cursor): Update.
	
2007-02-27  Nurdin Premji  <npremji@redhat.com>

	* ProcInfo.java: Added error value.
	* cni/PtraceAccessors.cxx (findProcInfo): Set ProcInfo error value.
	* cni/UnwindNative.cxx: (findProcInfo): Return accessors procInfo error value.

2007-02-27  Andrew Cagney  <cagney@redhat.com>

	* FrameCursor.java (procOffset, getProcOffset): Delete.
	(procStart, getProcStart, procEnd, getProcEnd): Define.
	* cni/FrameCursor.cxx (create_frame_cursor): Set .procStart and
	.procSize.

2007-02-26  Nurdin Premji  <npremji@redhat.com>

	* cni/UnwindNative.cxx: (native_access_mem): Fixed to actually copy value back
	as native_access_reg does.
	(native_access_fpreg): Ditto.

	* cni/PtraceAccessors.cxx (getProcName): Added another logging message.
	Simplified return.
	(findProcInfo): Added another logging message.
	* cni/UnwindNative.cxx (native_get_proc_name): Fixed to properly copy over
	the proc name.
	(getProcName): Added another logging message.
	(destroyAddressSpace): Don't log RawData objects, they segfault.
	(isSignalFrame): Ditto.
	(setCachingPolicy): Ditto.
	(step): Ditto.

2007-02-23  Nurdin Premji  <npremji@redhat.com>

	* cni/PtraceAccessors.cxx: Added entry logging messages.
	* cni/UnwindNative.cxx: Ditto.

2007-02-23  Andrew Cagney  <cagney@redhat.com>

	* FrameCursor.java (procName, procOffset): Add.
	(getProcName, getProcOffset): Add.
	(demangledMethodName): Rename methodName.
	* cni/FrameCursor.cxx (create_frame_cursor): Update.

2007-02-23  Nurdin Premji  <npremji@redhat.com>

	* Accessors.java: Changed getProcName to take in maxNameSize parameter.
	* AddressSpace.java: Changed addressSpace to RawData.
	(finalize): Added.
	* Cursor.java: Reflect change in initRemote binding (returns cursor rather than
	setting cursor). Added logger. 
	(getProcName): Added.
	* PtraceAccessors.java: Reflect Accessor changes. Added logger. 
	(detachXXX): Added 
	* TestUnwind: Reflect changes in Accessor. 
	(testPtraceAccessors): Renamed, was testMyProcess.
	* Unwind.java: Changed bindings to reflect addressSpace is now RawData.
	(getProcName): Added.
	* UnwindNative.java: Ditto.
	* cni/PtraceAccessors.cxx: Added include statement for Accessors.h.
	(detachXXX): Added.
	(getProcName): Changed to use char[] rather than char pointer to store procName.
	* cni/UnwindNative.cxx: Reflect changes to AddressSpace.
	 (getProcName): Added.	

2007-02-21  Nurdin Premji  <npremji@redhat.com>

	* Cursor.java (Cursor): Throw Exception if initRemote fails.	
	* Unwind.java: Fix copyright year.
	* UnwindNative.java: Ditto.
	* AddressSpace.java: Ditto.	
	* ProcInfo.java: New.
	* ProcName.java: New.
	* PtraceAccessors: New.	
	* cni/PtraceAccessors.cxx: New.
	* Accessors.java: Use byte arrays instead of ByteBuffers.
	Use longs for address references.
	Use ProcInfo and ProcName classes
	* TestUnwind.java: Reflect Accessors changes. Added test case that uses
	PtraceAccessors.
	* cni/UnwindNative.cxx: Use ProcInfo and ProcName classes. 
	Reflect Accessor changes.

2007-02-16  Nurdin Premji  <npremji@redhat.com>

	* Unwind.java (getRegister): Changed to pass regNum as int rather than
	RawDataManaged.
	* UnwindNative.java: Ditto.
	* cni/UnwindNative.cxx: Ditto.

	* Cursor.java: Added.
	* UnwindNative.java: Ditto.	
	* AddressSpace.java: Ditto.	
	* Accessors.java: Ditto.
	* Unwind.java: Ditto.
	* ByteOrder.mkenum: Ditto.
	* CachingPolicy.mkenum: Ditto.
	* cni/UnwindNative.cxx: Ditto.

2007-01-24  Jan Kratochvil <jan.kratochvil@redhat.com>
	    Mike Cvet  <mcvet@redhat.com>

	* cni/FrameCursor.cxx (create_frame_cursor): Fix retrieved address.
	Temporarily remove assertion failing due to libunwind Bug 3917.

2007-01-23  Mike Cvet  <mcvet@redhat.com>

	* cni/StackTraceCreator.cxx (unwind_setup): Make sure innermost frame
	has a signal trampoline check.

2007-01-04  Nurdin Premji  <npremji@redhat.com>

	* StackTraceCreator.java (createStackTrace): Added logging messages.

2007-01-04  Mike Cvet  <mcvet@redhat.com>

	* cni/FrameCursor.cxx (create_frame_cursor): Resolve frame address
	from unw_get_proc_info independently of function name. Fixes #3791.
	* FrameCursor.java (FrameCursor): Demangle all method names immediately 
	after object creation. Moved demangler over from StackFrame.

2006-12-14  Adam Jocksch  <ajocksch@redhat.com>

	* FrameCursor.java (getAddress): Added.
	(setAddress): Added.
	(getCfa): Added.
	(isSignalFrame): Added.
	(setIsSignalFrame): Added.
	(getMethodName): Added.
	(get_reg): Added.
	(set_reg): Added.
	* cni/FrameCursor.cxx (native_init): Initializes method name, cfa, 
	isSignalFrame, and address.
	(get_reg): Added.
	(set_reg): Added.

2006-09-25  Alexandre Oliva  <aoliva@redhat.com>

	* RegisterAMD64.java: New class.

2006-09-19  Mike Cvet  <mcvet@redhat.com>

	* FrameCursor.java (getIsSignalFrame): Added.
	* cni/StackTraceCreator.cxx (unwind_setup): Added a check
	to see if the frame is a signal frame.

2006-09-16  Alexandre Oliva  <aoliva@redhat.com>

	* UnwindCallbacks.java (findProcInfo, putUnwindInfo,
	getDynInfoListAddr, getProcName): Remove, obsolete.
	(getPid): New.
	* StackTraceCreator.java (UnwindArgs::UPTarg,
	UnwindArgs::unwas): Change to pointer type.
	(arg_hash): New static fields.
	(pointer_to_long, dispatch_todo): New static native methods.
	(register_hashes, unregister_hashes, find_arg_from_long,
	catch_errors): New static methods.
	* cni/StackTraceCreator.cxx (find_unwargs): New.  Use it all over.
	(struct todo): New.
	(StackTraceCreator::dispatch_todo): New.
	(struct access_mem_todo): New.
	(access_mem): Turn into dispatch_todo wrapper.  Rename
	original to...
	(real_access_mem): ... this.  Unwrap incoming arguments.
	(get_proc_name): Use libunwind implementation.
	(StackTraceCreator::unwind_setup): Pass pid to _UPT_create.
	Register args hashes.
	(StackTraceCreator::unwind_finish): Unregister them.
	(StackTraceCreator::pointer_to_long): New.

2006-09-08	Alexandre Oliva	<aoliva@redhat.com>

	* StackTraceCreator.java (UnwindArgs): New inner class.
    (createStackTrace): Instantiate it.
    (unwind_setup): Take it as argument.
    (unwind_finish): New native method.
    * cni/StackTraceCreator.cxx: Include libunwind-ptrace.h and
    header for new inner class.
    (find_proc_info, put_unwind_info, get_dyn_info_list_addr): Use
    implementation from libunwind-ptrace.
    (access_mem, access_reg, access_fpreg, resume, get_proc_name):
    Adjust.
    (unwind_setup): Set up libunwind-ptrace opaque args and
    UnwindArgs fields that need native finalization.
    (unwind_finish): Finalize them.

2005-07-24  Adam Jocksch  <ajocksch@redhat.com>

	* UnwindCallbacks.java (getProcInfo): Now returns a boolean and takes the
	address of a pre-allocated proc_info object.
	* cni.StackTraceCreator.cxx (find_proc_info): Uses refactored callback and
	correctly passes the struct back to libunwind.
	(unwind_setup): Set caching to UNW_CACHE_PER_THREAD.

2005-07-13  Adam Jocksch  <ajocksch@redhat.com>

	* cni/StackTraceCreator.cxx (get_dyn_info_addr_list): Now sets dilap to 0
	if retval is zero rather than just setting the value it points to to
	zero.

	* RegisterX86.java: Added preamble.
	(getUnwindRegister): Now returns the string name of the register
	for use in getRegisterByName.
	* UnwindException.java: Added preamble.

2005-07-12  Adam Jocksch  <ajocksch@redhat.com>

	* RegisterX86.java: Added.

	* cni/StackTraceCreator.cxx (unwind_setup): Fixed typo.

	* FrameCursor.java (getNext): Renamed to getInner.
	(getPrevious): Renamed to getOuter.
	* cni/StackTraceCreator.cxx (unwind_setup): Changed to reflect updated
	variable names.

	* Frame.java: Renamed to FrameCursor.java.
	(getFuncEndAddr): Removed, should be part of a higher level usage.
	(getFuncStartAddr): Ditto.
	(getFunctionName): Ditto.
	(getPc): Ditto.
	(create_frame): Renamed to create_frame_cursor.
	* StackCreator.java (createStackTrace): Added javadoc comments.
	* cni/Frame.cxx: Renamed to FrameCursor.cxx.
	(create_frame): Renamed to create_frame_cursor, now only memcpy's the
	data in the provided cursor into it's own personal pointer.
	* cni/StackTraceCreator.cxx (unwind_setup): Now links FrameCursors together
	in the correct order (i.e. last->first), so that each frame's "previous"
	frame is the one immediately before it chronologically.

2005-07-11  Adam Jocksch  <ajocksch@redhat.com>

	* Frame.java: Created.
	* StackTraceCreator.java: Created.
	* UnwindException.java: Created.
	* UnwindCallbacks.java: Created.
	* cni/Frame.cxx: Created.
	* cni/StackTraceCreator.cxx: Created.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
