// -*- C++ -*-

// This file is part of the program FRYSK.
//
// Copyright 2006, 2007, Red Hat Inc.
//
// FRYSK is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
//
// FRYSK is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with FRYSK; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
// 
// In addition, as a special exception, Red Hat, Inc. gives You the
// additional right to link the code of FRYSK with code not covered
// under the GNU General Public License ("Non-GPL Code") and to
// distribute linked combinations including the two, subject to the
// limitations in this paragraph. Non-GPL Code permitted under this
// exception must only link to the code of FRYSK through those well
// defined interfaces identified in the file named EXCEPTION found in
// the source code files (the "Approved Interfaces"). The files of
// Non-GPL Code may instantiate templates or use macros or inline
// functions from the Approved Interfaces without causing the
// resulting work to be covered by the GNU General Public
// License. Only Red Hat, Inc. may make changes or additions to the
// list of Approved Interfaces. You must obey the GNU General Public
// License in all respects for all of the FRYSK code and other code
// used in conjunction with FRYSK except the Non-GPL Code covered by
// this exception. If you modify this file, you may extend this
// exception to your version of the file, but you are not obligated to
// do so. If you do not wish to provide this exception without
// modification, you must delete this exception statement from your
// version and license this file solely under the GPL without
// exception.

#include <gcj/cni.h>

#include <java/lang/String.h>
#include <java/io/File.h>
#include "frysk/Config.h"

// Why not use autoconf's config.h?

// Because config.h does not expand variables the way Makefile and
// SUBST_SED do.

static java::io::File*
asFile (const char* path)
{
  return new java::io::File (JvNewStringUTF (path)->intern ());
}

static java::io::File*
asFile (jstring prefix, const char *suffix)
{
  return new java::io::File (prefix, JvNewStringUTF (suffix)->intern ());
}

jstring
frysk::Config::getVersion ()
{
  return JvNewStringUTF ("@VERSION@");
}

jstring
frysk::Config::getRootSrcDir ()
{
  return JvNewStringUTF ("@root_srcdir@");
}

jstring
frysk::Config::getAbsRootSrcDir ()
{
  return JvNewStringUTF ("@abs_root_srcdir@");
}

jint
frysk::Config::getWordSize ()
{
  return sizeof (long) * 8;
}

jstring
frysk::Config::getTargetCpuXXX ()
{
  return JvNewStringUTF ("@target_cpu@");
}

frysk::Config*
frysk::Config::createInstallConfig ()
{
  frysk::Config* config = new frysk::Config ();
  config->theGladeDir = JvNewStringUTF ("@gladedir@/")->intern ();
  config->theHelpDir = asFile ("@helpdir@");
  config->theImagesDir = JvNewStringUTF ("@imagesdir@")->intern ();
  config->theBinDir = asFile ("@bindir@");
  config->thePkgDataDir = asFile ("@pkgdatadir@");
  config->thePkgLib32Dir = NULL;
  config->thePkgLib64Dir = NULL;
  config->thePkgLibDir = asFile ("@pkglibdir@");
  return config;
}

frysk::Config*
frysk::Config::createInstall32On64Config ()
{
  frysk::Config* config = createInstallConfig ();
  config->thePkgLib32Dir = asFile ("@pkglib32dir@");
  config->thePkgLib64Dir = asFile ("@pkglib64dir@");
  config->thePkgLibDir = config->thePkgLib32Dir;
  return config;
}

frysk::Config*
frysk::Config::createBuildConfig (jstring absSrcDir,
				  jstring absBuildDir)
{
  frysk::Config* config = new frysk::Config ();
  config->theGladeDir = absSrcDir->concat (JvNewStringUTF ("/frysk/gui/gladedir/"))->intern ();
  config->theHelpDir = asFile (absSrcDir, "/frysk/gui/helpdir");
  config->theImagesDir = absSrcDir->concat (JvNewStringUTF ("/frysk/gui/imagesdir"))->intern ();
  config->theBinDir = asFile (absBuildDir, "/frysk/bindir/");
  config->thePkgDataDir = asFile (absBuildDir, "/frysk/pkgdatadir/");
  config->thePkgLib32Dir = NULL;
  config->thePkgLib64Dir = NULL;
  config->thePkgLibDir = asFile (absBuildDir, "/frysk/pkglibdir/");
  return config;
}

frysk::Config*
frysk::Config::createBuild32On64Config (jstring absSrcDir,
					jstring absBuildDir)
{
  frysk::Config* config = createBuildConfig (absSrcDir, absBuildDir);
  config->thePkgLib32Dir = asFile (absBuildDir, "/frysk/pkglibdir/arch32/");
  config->thePkgLib64Dir = asFile (absBuildDir, "/frysk/pkglibdir/");
  config->thePkgLibDir = config->thePkgLib32Dir;
  return config;
}
