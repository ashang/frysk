2007-02-27  Nurdin Premji  <npremji@redhat.com>

	* cni/Errno.cxx (vajprintf): throw a runtime exception if the JvNewString
	call fails.
	(vlog): Added.
	(logMessage): Use vlog.
	(logFine): Ditto.
	(logFinest): Ditto.
	(jLogFine): Cleaned up.

2007-02-23  Nurdin Premji  <npremji@redhat.com>

	* cni/Errno.hxx: Added convenience logger for FINE and FINEST levels.
	* cni/Errno.cxx: Ditto.

	* cni/Errno.hxx: Removed below macros.

	* cni/Errno.hxx: Added macros for Level.FINE, FINER, FINEST.
	* cni/Errno.cxx: Fixed conditional for logging. Should exit if logger is
	not loggable.

	* cni/Errno.hxx (ajprintf): Added
	(vajprintf): Changed format to be similar to vasprintf.
	(logMessage): Added.
	(jLogMessage): Added.
	* cni/Errno.cxx: Ditto.
	* cni/Wait.cxx: Reflect changes to vajprintf and introduction of ajprintf.

2007-02-22  Andrew Cagney  <cagney@redhat.com>

	* PseudoTerminal.java (RedirectStdio.reopen): Make native.
	* cni/PseudoTerminal.cxx (reopen): Implement; handle controlling
	terminal guff.
	* TestPseudoTerminal.java (testDevTty): Add.

2007-02-19  Andrew Cagney  <cagney@redhat.com>

	* FileDescriptor.java (FileDescriptor(File,int): New constructor.
	* PseudoTerminal.java (getFile): New method.
	(getName): Make private.
	(name, file): New private members.
	* TestPseudoTerminal.java: Update.

	* PseudoTerminal.java (setUpForConsole): Delete.
	* cni/PseudoTerminal.cxx: Ditto.

	* termios/: New directory.

	* TestPseudoTerminal.java (pid): Add local private.  Use instead
	of local variables.
	(tearDown): Kill the pid, and drain Sig.CHLD.
	* cni/Errno.hxx (throwRuntimeException): Add "noreturn" attribute.

2007-02-16  Mark Wielaard  <mark@klomp.org>

	* RegisterSetBuffer.java (peek): Remove unnecessary int cast.

2007-02-13  Andrew Cagney  <cagney@redhat.com>

	* TestPseudoTerminal.java (pid): Change type to ProcessIdentifier.
	* ProcessIdentifier.java (blockingDrain): Rename drainWait.
	(blockingWait, nonblockingWaitAll): New.
	(toString): Return a plain integer.
	* PseudoTerminal.java (addChild, addDaemon): Return a
	ProcessIdentifier.
	* TestPseudoTerminal.java (pid): Change type to ProcessIdentifier.
	* TestPipePair.java: Update.
	
2007-02-12  Andrew Cagney  <cagney@redhat.com>

	* TestPipePair.java (testDaemonExecute, testChildExecute): Add.
	(Tee): Static class, implements Execute.
	* cni/TestPipePair.cxx: New file.

	* cni/Daemon.cxx: Explictly include parent class
	frys/sys/ProcessIdentifier.h.
	* cni/Child.cxx: Ditto.

	* PipePair.java (daemon, child): Move to sub-classes.
	* TestPipePair.java: Update.
	* DaemonPipePair.java: New file.
	* ChildPipePair.java: New file.

	* Execute.java: New file.
	* Redirect.java: New file.
	* ProcessIdentifier.java: New file.
	* cni/Child.cxx: New file.
	* Child.java: New file.
	* cni/Daemon.cxx: New file.
	* Daemon.java: New file.
	* PipePair.java: New file.
	* cni/Exec.cxx: New file.
	* Exec.java: New file.
	* TestPipePair.java: New file.
	* cni/FileDescriptor.cxx: Switch commented out printf to fprintf.
	* Pipe.java (toString): Add.
	* FileDescriptor.java (toString): Add.
	
	* cni/Errno.hxx (sizeof_argv, fill_argv, sizeof_string) 
	(fill_string): Define.
	(ALLOCA_STRING, ALLOCA_ARGV): New macros.
	* cni/Errno.cxx (sizeof_argv, fill_argv, sizeof_string) 
	(fill_string): Define.
	* FileDescriptor.java (FileDescriptor(String,int)): New.
	(RDONLY, WRONLY): New.
	(in, out, err): New.
	(open, dup): Declare.
	(pipe): Delete.
	* cni/FileDescriptor.cxx (open, dup): Implement.
	* TestFileDescriptor.java (testArrayIO): Delete.
	(pipe, hello, xxxhelloyyy): New variables.
	(in, out): Delete, update all.
	(testArrayReadWrite, testArraySubBufferWrite)
	(testArraySubBufferRead, testDupPipeOutToIn): New.
	* Pipe.java: New.
	* cni/Pipe.cxx: New.

2007-02-09  Andrew Cagney  <cagney@redhat.com>

	* Wait.java (drain, drainNoHang): Declare.
	* cni/Wait.cxx (drain, drainNoHang): Define.

	* Signal.java (drain(Sig)): Declare.
	* cni/Signal.cxx (drain): Define.

2007-01-31  Andrew Cagney  <cagney@redhat.com>

	* FileDescriptor.java (ready(long)): New.
	(ready): Implement using ready(long).
	* cni/FileDescriptor.cxx (ready): Update.
	(doRead): New local function.
	(read, read(byte[],int,int)): Implement using doRead.
	* PseudoTerminal.java (toString): Implement.
	* TestFileDescriptor.java (assertBecomesReady): New.
	(testArrayEOF, testByteEOF): Add assertBecomesReady.
	* TestPseudoTerminal.java (assertBecomesAvailable): Rename
	assertAvailable.
	(testEOF): New.

2007-01-29  Andrew Cagney  <cagney@redhat.com>

	* cni/PseudoTerminal.cxx: Rename cni/Pty.cxx.
	* PseudoTerminal.java: Rename Pty.java.
	* TestPseudoTerminal.java: Rename TestPty.java.

	* TestPty.java (setUp): Add.
	(tearDown): No need to clear pid.
	(getPtyDaemon): Add.
	(testEchoHi, testTeeHi): Use getPtyDaemon.
	* Pty.java (addChild, addDaemon): New methods.
	* PtyDaemon.java: Delete.

2007-01-26  Andrew Cagney  <cagney@redhat.com>

	* TestFileDescriptor.java (testLeakyPipes): Use a WeakHashMap to
	track and then close any non-garbage-collected file descriptors.

	* TestFileDescriptor.java (testByteIO): Rename testIO.
	(testByteEOF, testArrayEOF, testArrayIO): Add.
	* FileDescriptor.java (read(byte[],int,int): Add.
	(getOutputStream): Add close method.
	(getInputStream): Add close and read(byte[],int,int) methods.
	(read): Change return type to int.
	(write): Change parameter to int.
	* cni/FileDescriptor.cxx: Update.
	* TestPty.java (testOpen): Rename testAll.
	(testEchoHi, testTeeHi): New methods.
	* PtyDaemon.java: New.
	* FileDescriptor.java (getFd): New method.
	(fd): Make protected.
	* Pty.java: Extend FileDescriptor, make non-final.
	(ptyWrite, setUpPtyForConsole, writeString, getPtyName): Delete
	(getFd): Delete, handled by parent class.
	(open): Native method, rename openPty.
	(getName): Make native.
	* cni/Pty.cxx: Update to match Pty.java changes.
	
	* cni/Errno.hxx (throwErrno): Add noreturn attribute.
	(tryGarbageCollect): Declare.
	* cni/Errno.cxx (tryGarbageCollect): Define.
	* cni/FileDescriptor.cxx: New file
	* FileDescriptor.java: New file.
	* TestFileDescriptor.java: New file.
	
2006-12-07  Phil Muldoon  <pmuldoon@redhat.com>

	* StressMapRead.java: Add permShared flag.

2006-12-06  Andrew Cagney  <cagney@redhat.com>

	* cni/Pty.cxx (writeString): Use ==NULL.

2006-11-16  Andrew Cagney  <cagney@redhat.com>

	* cni/Wait.cxx (log): New.
	* cni/Errno.hxx (vajprintf): Add declaration.
	* cni/Errno.cxx (vajprintf): Make public.
	* Wait.java (log): Delete.

2006-11-15  Andrew Cagney  <cagney@redhat.com>

	* cni/Wait.cxx: Revert 2006-09-04 Chris Moller
	<moller@mollerware.com> change, in particular the silent switch to
	malloc from alloc.

2006-11-14  Andrew Cagney  <cagney@redhat.com>

	* TestCallPtrace.java: Use frysk.junit.TestCase.
	* TestPtraceByteBuffer.java: Ditto.
	* TestSigSet.java: Ditto.
	* TestPty.java: Ditto.

2006-10-26  Tim Moore  <moore@redhat.com>

	* cni/Errno.cxx (throwErrno): Fix bug in use of JvGetStringUTFRegion.

2006-10-14  Mark Wielaard  <mark@klomp.org>

	* AuditLibs.java (SyscallToName): Renamed to...
	(syscallToName): Renamed to not start with a Capital.
	(nameToSyscall): New native method.
	* cni/AuditLibs.cxx: (nameToSyscall): New method.

2006-10-12  Andrew Cagney  <cagney@redhat.com>

	* cni/TestLib.cxx (drainSignal): New.
	* TestLib.java (tearDown): New.
	(drainSignal): New.
	* StressMapRead.java (tearDown): Use TestLib.tearDown, remove
	broken due to 3360.
	* TestCallPtrace.java (tearDown): New.  Use TestLib.tearDown.
	* TestPtraceByteBuffer.java: Use TestLib.tearDown.
	
	* TestCallPtrace.java: Emacs indent.
	* TestPtraceByteBuffer.java: Emacs indent.

	* StressMapRead.java (setUp): Delete, code merged into test
	proper.  Add broken due to 3360 - does not drain pending events.

2006-10-09  Yao Qi  <qiyaoltc@cn.ibm.com>

	* cni/Ptrace.cxx: Compile regSetParams conditionally for i386 and
	x86_64.

2006-10-03  Tim Moore  <timoore@redhat.com>

	* Ptrace.java (REGS, FPREGS,FPXREGS): new constants
	(registerSetSize, peekRegisters, pokeRegisters): new methods for
	reading and writing blocks of registers.
	* cni/Ptrace.cxx (registerSetSize, peekRegisters, pokeRegisters):
	implementations of above methods.

2006-09-16    <swagiaal@redhat.com>

	* cni/AuditLibs.cxx: New file.
	* AuditLibs.java: New file.

2006-09-11  Andrew Cagney  <cagney@redhat.com>

	* Wait.java: Pass just "frysk" to getLogger, work-around.

2006-09-04  Chris Moller  <moller@mollerware.com>

	* cni/Wait.cxx: Added a bit of code to check for unset status from
	waitpid.  Ridiculously unlikely, but something seems to be munged
	up somewhere, and an unset status could theoretically leave just
	the wrong random bits in the int.

2006-08-31  Chris Moller  <moller@mollerware.com>

	* cni/Wait.cxx:  Removed the entire mail thing.

	* cni/Wait.cxx:  Take out the local suppression of the 0xff error.

2006-08-30  Chris Moller  <moller@mollerware.com>

	* cni/Wait.cxx:  Added code to send diagnostics to
	cmoller@redhat.com if the 0xff condition is detected.  Also
	suppresses local processing of that status on the theory that it's
	not a real status.

2006-08-28  Andrew Cagney  <cagney@redhat.com>

	* StressMapRead.java: Extend frysk.junit.TestCase.
	(trueXXX, brokenXXX): Delete, moved to frysk.junit.TestCase.

2006-08-26  Mike Cvet <mcvet@redhat.com>

	* cni/TestLib.cxx (forkIt): Properly GNU format. Removed the
	printf() call, replaced wtih an exit(). Removed the perror() call
	and replaced with throwErrno().

2006-08-23  Yao Qi  <qiyaoltc@cn.ibm.com>

	* cni/TestLib.cxx (getFuncAddr): Get function address instead of
	address of function descriptor on PPC64.
	(getFuncBytes): Likewise.

2006-08-22  Ivan Pantuyev  <ipantuye@redhat.com>

	* cni/Ptrace.cxx: added calls to setsid and setpgid to forked process

2006-08-16  Andrew Cagney  <cagney@redhat.com>

	* Wait.java: Specify "frysk.sys" as the logger, delete unused
	import of frysk.Config.

2006-08-16  Tim Moore  <timoore@redhat.com>

	* PtraceByteBuffer.java (Area, Area.getMaxOffset): New method that
	returns the maximum legal offset into an area. Only useful for the
	user area.
	* cni/PtraceByteBuffer.cxx (PtraceByteBuffer$Area::textArea,
	PtraceByteBuffer$Area::dataArea, PtraceByteBuffer$Area::usrArea):
	Initialize maximum offset.

2006-08-14  Mark Wielaard  <mark@klomp.org>

	* StressMapRead.java (testMapRead): Add brokenXXX(3043).

2006-08-09  Ivan Pantuyev  <ipantuye@redhat.com>

	* Pty.java: Added a setUpForConsole function
	* cni/Pty.cxx: the same

2006-08-04  Mark Wielaard  <mark@klomp.org>

	* frysk/sys/cni/PtraceByteBuffer.cxx (newPerror): Removed.
	(peek(long)): Remove errno handling.
	(peek(long,jbyteArray,jlong,jlong)): Likewise.
	(poke): Likewise.

2006-08-03  Tim Moore  <timoore@redhat.com>

	* Uname.java: New file, interface to uname(2).
	* cni/Uname.cxx: New file.

2006-08-02  Adam Jocksch  <ajocksch@redhat.com>

	* StressMapRead.java: Renamed from TestMapRead since the test
	is very cpu-intensive, also enabled test.

2006-08-01  Adam Jocksch  <ajocksch@redhat.com>

	* TestMapRead.java: New file, test is disabled since it breaks.

2006-07-28  Mark Wielaard  <mark@klomp.org>

	* Ptrace.java (poke): Change data parameter from int to long.
	* cni/Ptrace.cxx (poke): Likewise.

2006-07-17  Tim Moore  <moore@redhat.com>

	* Ptrace.java (peek): Change return type of peek to long.
	* cni/Ptrace.cxx (peek): ditto

2006-07-14  Mark Wielaard  <mark@klomp.org>

	* cni/Wait.cxx (waitAll): Save errno before calling log().

2006-07-10  Tim Moore  <timoore@redhat.com>

	* cni/PtraceByteBuffer.cxx (peek, poke): Change the type of data read
	from / written to ptrace from int to long, corresponding to its
	declared type in the ptrace prototype.

2006-07-04  Mark Wielaard  <mark@klomp.org>

	* frysk-sys/frysk/sys/TestPtraceByteBuffer.java
	(testTextVariable): Make sure we are manipulating only the child
	text area not our own.

2006-06-26  Mark Wielaard  <mark@klomp.org>

	* frysk-sys/frysk/sys/TestPtraceByteBuffer.java: New test.
	* frysk-sys/frysk/sys/TestLib.java (intVal, byteVal, longVal):
	New static fields.
	(getIntValAddr, getByteValAddr, getLongValAddr): New native methods.
	(getFuncAddr): Likewise.
	(getFuncBytes): Likewise.
	* frysk-sys/frysk/sys/cni/TestLib.cxx
	(dummyfunc): New static function.
	(getIntValAddr, getByteValAddr, getLongValAddr): New method.
	(getFuncAddr): Likewise.
	(getFuncBytes): Likewise.

	* frysk-sys/frysk/sys/cni/PtraceByteBuffer.cxx (peek): Use off when
	storing bytes.

2006-06-19  Mike Cvet  <mcvet@redhat.com>

	* TestCallPtrace.java (testChildContinue): Finalized tests
	(getPt): Set the ptrace thread to a daemon thread so that Frysk exits
	properly.

2006-06-16  Mike Cvet  <mcvet@redhat.com>

	* PtraceByteBuffer.java: Moved over to frysk/sys.
	* PtraceByteBuffer.cxx: Moved over to frysk/sys/cni; fixes to use the new
	ptrace thread implementation - fixes #2783.
	* funit-threadexit.c: Removed race condition.
	* TestTaskTerminatedObserver.java: TestTerm now stops when the task dies
	as opposed to timing out.
	* TestLib.Java: Added print statement if event loop is not stopped.
	* Ptrace.java: Added methods for peek() and poke().
	* Ptrace.cxx: Added methods for peek() and poke().
	* Makefile.am: Builds with headers from inua.

2006-06-15  Nurdin Premji  <npremji@redhat.com>

	* cni/Poll.cxx: Add #include <linux.syscall> and <unistd.h>
	* cni/Signal.cxx: Ditto.
	* cni/Tid.cxx: Ditto.
	
2006-06-15  Sami Wagiaalla  <swagiaal@redhat.com>

	* cni/Wait.cxx: Fixed a bug resluting in the errno being
	overwritten before being reported

2006-06-15  Mike Cvet  <mcvet@redhat.com>

	* Ptrace.java: Re-written to now perform all ptrace requests on a
	separate thread, to address #2595. The parent thread is always running
	and any children created or attaches to other processes are performed
	transparently on the ptrace thread which will continue to run after the 
	very first ptrace request.
	* Ptrace.cxx: Re-written to satisfy the new requirements for Ptrace.java,
	specifically satisfying all requests with the new java ptrace thread.
	* Wait.cxx: Via #2774, double status returns via waitpid() have to be
	eliminated.
	* TestCallPtrace.java: Added - Unit test for new Ptrace.java
	* TestLib.java: Added
	* TestLib.cxx: Added
	* Errno.java: Made Errno understand (int err, String prefix) parameters
	* Errno.cxx: Added new function with the above parameters for returning
	error.

2006-06-13  Stan Cox  <scox@redhat.com>

	* Errno.java (Eperm): New.
	* cni/Errno.cxx (throwErrno): Added EPERM.

2006-05-19  Chris Moller  <moller@mollerware.com>

	* Pty.java:
	* TestPty.java:
	* cni/Pty.cxx: Added a constructor to open the pty, added an access
	method to retrieve the fd, added a "write()" method mostly to test
	that writing to the pty worked, modified the testcase to check the
	new stuff.

2006-05-18  Chris Moller  <moller@mollerware.com>

	* TestPty.java: New file to test functionality of Pty.java and
	cni/Pty.cxx under Junit.

2006-05-17  Chris Moller  <moller@mollerware.com>

	* Pty.java:
	* cni/Pty.cxx: New files to provide a means of opening a pty and
	identifying the corresponding pty path.

2006-04-09  Andrew Cagney  <cagney@redhat.com>

	* cni/Poll.cxx (handler): Change function signature to match
	sa_sigaction.
	(addSignalHandler): Instead of sa_handler, set sa_sigaction.

2006-03-23  Andrew Cagney  <cagney@redhat.com>

	* cni/Wait.cxx (waitAllNoHang, waitAll): Call <<log>>.
	* Wait.java (logger): Add.
	(log): Add.

2006-03-15  Andrew Cagney  <cagney@redhat.com>

	* cni/Poll.cxx (poll): Move delivery of signal events to after the
	::poll call; clean up comments.
	* cni/Wait.cxx (waitAllNoHang): Accumulate all the wait events on
	the stack before delivering them.
	* Wait.java (waitAllNoHang): Update description.

2006-03-14  Andrew Cagney  <cagney@redhat.com>

	* cni/SigSet.hxx (getRawSet): Rename getSigSet.
	* SigSet.java: Rename sigSet to rawSet; rename newSigSet to
	newRawSet.
	* cni/SigSet.cxx: Update.
	* Poll.java (SignalSet): Delete.
	(sigSet, add,(Sig), empty, pollFds): New.
	(poll): Drop Fds parameter.
	* cni/Poll.cxx: Update.

2006-03-09  Andrew Cagney  <cagney@redhat.com>

	* Signal.java (kill (int, int), tkill (int, int)): Delete.
	(kill (int, Sig), tkill (int, Sig)): Make native.
	* cni/Signal.cxx: Update.
	
	* Poll.java (Observer.signal (Sig)): Replace Observer.signal (int).
	* cni/Poll.cxx (poll): Pass a Sig to Observer.signal.
	
	* Poll.java (SignalSet.add (int)): Delete.
	(SignalSet.add (Sig)): Make native.
	* cni/Poll.cxx: Update.
	* SigSet.java (SigSet (int[]): Delete.
	(add (int), remove (int), contains (int)): Delete.
	(add (Sig), remove (Sig), contains (Sig)): Make native.
	* cni/SigSet.cxx: Update.

	* Sig.shenum: Add SIGNONE - 0 - to list of signals.
	
	* Itimer.java (real (long), real (long, long)): Return a Sig.
	* cni/Itimer.cxx: Update.
	* Sig.shenum: Generate the print name.

	* Ptrace.java (detach (int, Sig)): New.
	* Poll.java (SignalSet.add (Sig)): New.
	* Signal.java (kill (int, Sig), tkill (int, Sig)): New.
	* cni/SigSet.cxx (newSigSet): Drop sigs parameter.
	* SigSet.java (contains (Sig), add (Sig), remove (Sig))
	(SigSet(Sig[])): New.
	* TestSigSet.java: Update.

2006-03-07  Andrew Cagney  <cagney@redhat.com>

	* Poll.java (poll): Add description.
	* SigSet.java, cni/SigSet.cxx: Change all void methods to return
	this SigSet.
	
2006-03-06  Andrew Cagney  <cagney@redhat.com>
	
	* SigSet.java (getPending, suspend, blockProcMask)
	(unblockProcMask, setProcMask, getProcMask): Add.
	* cni/SigSet.cxx: Ditto.
	* TestSigSet.java (testProcMask): New test.

	* cni/SigSet.hxx, cni/SigSet.cxx, SigSet.java, TestSigSet.java:
	New files.

2006-02-19  Andrew Cagney  <cagney@redhat.com>

	* cni/Poll.cxx (handler): If the signal is to the wrong thread,
	re-send it to the correct one.
	(poll_jmpbuf): Replace .p with .tid.
	(poll): Set the .tid.

2006-02-10  Andrew Cagney  <cagney@redhat.com>

	* cni/Poll.cxx (handler): If poll_jmpbuf is invalid, throw a
	RuntimeException.
	(poll): Mark when poll_jmpbuf is valid.
	(struct poll_jmpbuf): Replace poll_env, a per-thread buffer.

2005-12-21  Andrew Cagney  <cagney@redhat.com>

	* cni/XXX.cxx: Delete.
	* XXX.java: Delete.
	
	* XXX.java (infCloneLoop): Delete.
	* cni/XXX.cxx (infCloneLoop, cloneThreadFunc, threadFunc): Delete.
	
	* XXX.java (infLoop): Delete.
	* cni/XXX.cxx (infLoop): Delete.

2005-11-28  Andrew Cagney  <cagney@redhat.com>

	* Sig.shjava: Use $CC from the environment.
	* SyscallNum.shjava: Ditto.

2005-11-14  Andrew Cagney  <cagney@redhat.com>

	* cni/Wait.cxx (processStatus): Wrap case local variable in local
	block.  Gag G++ 4.1 error.

2005-11-10  Jeff Johnston  <jjohnstn@redhat.com>

	* Wait.java (syscallEvent): Revert change on 2005-11-07.
	* cni/Wait.cxx (processStatus): Ditto.

2005-11-08  Andrew Cagney  <cagney@redhat.com>

	* Wait.java: Add Throwable argument to .disappeared.
	* cni/Wait.cxx (processStatus): Update.

2005-11-07  Jeff Johnston  <jjohnstn@redhat.com>

	* Wait.java (syscallEvent): Add new syscall event type parameter.
	* cni/Wait.cxx (processStatus): For a syscall event, indicate
	the event type is unknown.

2005-11-01  Jeff Johnston  <jjohnstn@redhat.com>

	* SyscallNum.shjava: New file.

2005-10-23  Andrew Cagney  <cagney@redhat.com>

	* cni/Wait.cxx (WSTOPEVENT): Replace WEVENTSTATUS.
	(processStatus): Update.  For PTRACE_EVENT_EXIT, extract the exit
	signal and/or status.
	* Wait.java: Add signal, and coreDumped parameters to .exitEvent.
	Merge .exited into .terminated.  Update comments.

2005-10-22  Andrew Cagney  <cagney@redhat.com>

	* cni/Errno.cxx (throwRuntimeException): New function.
	(vajprintf): New function, use throughout.
	* cni/Errno.hxx (throwRuntimeException): Declare variant with
	message, suffix, and val parameters.
	* cni/Wait.cxx (processStatus): Use.

2005-10-09  Andrew Cagney  <cagney@redhat.com>

	* cni/Errno.cxx, cni/Errno.hxx: Add throwErrno methods that take a
	suffix, and a suffix and val.  Rename throwException to
	throwRuntimeException.
	* cni/Fork.cxx, cni/Ptrace.cxx, cni/Signal.cxx, cni/Wait.cxx: Use.
	
2005-10-07  Andrew Cagney  <cagney@redhat.com>

	* Tid.java, cni/Tid.cxx: New.

2005-10-03  Andrew Cagney  <cagney@redhat.com>

	* Poll.java: Make SignalSet.signalSet protected; work around ECJ
	3.1 feature.

2005-09-27  Andrew Cagney  <cagney@redhat.com>

	* ExampleJUnitTest.java: Delete.
	* Errno.java, Itimer.java, Pid.java, Poll.java, Ptrace.java,
	Signal.java, Wait.java: Add more documentation.

	* Fork.java: Have "ptrace" should call "ptrace", not "exec".
	Update comments.

2005-09-18  Andrew Cagney  <cagney@redhat.com>

	* package.html: New file.

2005-09-09  Andrew Cagney  <cagney@redhat.com>

	* Move com/redhat/fedora/frysk/sys/ to frysk/sys/.

2005-08-30  Andrew Cagney  <cagney@redhat.com>

	* Wait.java: Rename wait to waitAll, waitNohang to waitAllNoHang,
	signaled to terminated, and zombied to disappeared.

2005-08-26  Andrew Cagney  <cagney@redhat.com>

	* cni/Fork.cxx: For daemon, reap the original child's pid.

2005-08-26  Jeff Johnston  <jjohnstn@redhat.com>

	* cni/Wait.cxx: Add __WALL flag for regular wait without WNOHANG.

2005-08-25  Andrew Cagney  <cagney@redhat.com>

	* Fork.java, cni/Fork.cxx: Add method "daemon".

2005-08-22  Andrew Cagney  <cagney@redhat.com>

	* cni/Signal.cxx (kill, tkill): Throw an exception if the kill
	fails.

2005-08-13  Andrew Cagney  <cagney@redhat.com>

	* cni/Ptrace.cxx, Ptrace.java: Don't catch Errno.Esrch.

	* cni/Errno.cxx, Errno.java: Handle ECHILD adding Echild sub-class

2005-08-12  Jeff Johnston  <jjohnstn@redhat.com>

	* Errno.java: Add Esrch class to represent ESRCH errno (process
	not found).
	* Ptrace.java: Change prototypes of cont, singleStep, sysCall, and
	setOptions methods to return an int.
	* Wait.java: Add zombied observer.
	* XXX.java: Add infCloneLoop.
	* cni/Errno.cxx: Add support for new Errno.Esrch class.
	* cni/Ptrace.cxx: For cont, singleStep, sysCall, and setOptions,
	use a try/catch to gracefully handle an ESRCH error and return an
	error code.
	* cni/Wait.cxx (PTRACE_EVENT_FORK, PTRACE_EVENT_CLONE): Handle an
	Esrch error thrown when getting the event msg and in such a case,
	call the zombied observer.
	* cni/XXX.cxx (infCloneLoop): New test.

2005-08-12  Andrew Cagney  <cagney@redhat.com>

	* Sig.shjava: Use "gcc -dD" and /usr/include/signal.h.

2005-08-10  Andrew Cagney  <cagney@redhat.com>

	* Fork.java, Pid.java, cni/Fork.cxx, Pid.cxx: New.

	* Wait.java: Add "wait" method, delete "Observer.unknown".
	* cni/Wait.cxx (processStatus, wait): New.
	(waitNoHang): Use processStatus.

2005-08-08  Andrew Cagney  <cagney@redhat.com>

	* cni/Poll.cxx, Poll.java: Add SignalSet.empty.

2005-08-07  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Delete TestJUnits.java.

2005-08-05  Andrew Cagney  <cagney@redhat.com>

	* .cvsignore: Ignore TestJUnits.java.
	* ExampleJUnitTest.java: New.

	* .cvsignore: Add Sig.java.

2005-07-31  Andrew Cagney  <cagney@redhat.com>

	* Wait.java, cni/Wait.cxx: Delete the one parameter "stopped"
	observer.

2005-07-30  Andrew Cagney  <cagney@redhat.com>

	* Sig.shjava: New file.

	* cni/XXX.cxx, sys/XXX.java: New files.  Copy in infLoop,
	infThreadLoop and suspendedProg methods from proc.SysUtils.

	* cni/Signal.cxx, Signal.java: New files.

2005-07-29  Andrew Cagney  <cagney@redhat.com>

	* Wait.java: Delete "stop" wait observer.
	* cni/Wait.cxx: Enable all the wait observers.

2005-07-28  Andrew Cagney  <cagney@redhat.com>

	* cni/Wait.cxx: For WIFEXITED, call Observer.exited.
	
	* Wait.java: Uncomment all the commented out observers and add a
	new method "unknown", but always call "stop" observer.

2005-07-27  Andrew Cagney  <cagney@redhat.com>

	* cni/Poll.cxx, Poll.java: Make SignalSet static, drop SignalSet
	paramter from poll method.

2005-07-26  Andrew Cagney  <cagney@redhat.com>

	* Errno.java: Add missing serialVersionUID.

	* .cvsignore: Exclude more generated files.

2005-07-21  Andrew Cagney  <cagney@redhat.com>

	* cni/.cvsignore: New file.

2005-07-19  Andrew Cagney  <cagney@redhat.com>

	* cni/Ptrace.cxx, cni/Poll.cxx, cni/Itimer.cxx, cni/Errno.cxx,
	cni/Errno.hxx, Ptrace.java, Poll.java, Itimer.java, Errno.java:
	New file.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
