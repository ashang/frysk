2007-03-23  Nurdin Premji  <npremji@redhat.com>

	* ProcInfo.java (toString): Print ip addresses in hex.

2007-03-21  Nurdin Premji  <npremji@redhat.com>

	* cni/UnwindX86.cxx: Removed reference to libunwind-x86.h for now.

	* UnwindX86.java : New	
	* cni/UnwindX86.cxx: New.
	* TestUnwind.java (testCreateCursor): Updated change in AddressSpace.
	(testCreateAddress): Ditto.
	(testPtraceAccessorsProc0): Ditto. 
	(testPtraceAccessorsSmallMaxName): Ditto. 
	(testPtraceAccessorsProcMax): Ditto.
	(testPtraceAccessors): Ditto.
	* AddressSpace.java (AddressSpace): Changed to take an Unwinder as a 
	parameter rather than create one.

2007-03-12  Nurdin Premji  <npremji@redhat.com>

	* Unwind.java: Put logger here, so anything implementing Unwind will
	have a logger.
	* UnwindNative.java: Removed logger.
	* cni/UnwindH.hxx: Added for generic macro purposes.
	* cni/UnwindNative.cxx: Use above.

2007-03-07  Nurdin Premji  <npremji@redhat.com>

	* cni/PtraceAccessors.cxx (findProcInfo): Allocate space for the procInfo.
	* cni/UnwindNative.cxx (native_find_proc_info): Pass a jlong to java, 
	not a long.

2007-03-06  Nurdin Premji  <npremji@redhat.com>

	* Accessors.java: Made methods public.
	* PtraceAccessors.java: Ditto.
	* TestUnwind.java (testCreateCursor): Ditto.

	* TestUnwind.java (testPtraceAccessorsProc0): New.
	(testPtraceAccessorsProcMax): New.
	(testPtraceAccessorsSmallMaxName): New.
	(testCreateCursor.accessMem): Made protected.
	(testCreateCursor.accessFPReg): Ditto.
	(testCreateCursor.resume): Ditto.
	(testCreateCursor.getProcName): Ditto.
	(testCreateCursor.putUnwindInfo): Ditto.
	(testCreateCursor.getDynInfoListAddr): Ditto.
	(testCreateCursor.findProcInfo): Ditto.
	(testCreateCursor.accessReg):Ditto.
	(testPtraceAccessors): Step through an entire stack trace.
	(testCreateAddress): Change assert message.
	* ProcInfo.java: Use RawData to hold an actual procInfo object.
	* Accessors.java: Made all methods protected.
	* PtraceAccessors.java: Ditto. 
	* Cursor.java: Removed unused addressSpace variable.
	(unwind): New.
	* ProcName.java (ProcName): Made public.
	* Unwind.java (copyCursor): New.
	* UnwindNative.java: (copyCursor): New.
	* Error.mkenum: New.
	* cni/ProcInfo.cxx: New.
	* cni/PtraceAccessors.cxx: Clean up logging. Change to reflect ProcInfo.java 
	changes.
	* cni/UnwindNative.cxx: Ditto.
	(native_access_mem): Pass a jlong to java, not a long.
	(copyCursor): Added.

2007-03-01  Mike Cvet  <mcvet@redhat.com>

	* StackTraceCreator.java (UnwindArgs.cleanup): Added. Moved code from 
	finalize() to here since UnwindArgs objects did not appear to have finalize()
	getting called.
	(finalize): Removed.
	(createStackTrace): Clean up and null out previous UnwindArgs objects.

2007-02-27  Nurdin Premji  <npremji@redhat.com>

	* ProcName.java: Added error value.
	* cni/PtraceAccessors.cxx (accessReg):  Added logging message for return value.
	(getProcName): Pass in a unw_word_t struct rather than a pointer to UPT_get_proc_name.
	Don't log a message with the buffer if UPT_get_proc_name returns a bad buffer.
	* cni/UnwindNative.cxx (getProcName): Reflect update to ProcName.
	(native_get_proc_name): Return the error stored in ProcName.

2007-02-27  Andrew Cagney  <cagney@redhat.com>

	* FrameCursor.java (procOffset, getProcOffset): Put back.
	(getProcInfoStart): Rename getProcStart.
	(getProcEnd): Replace getProcSize.
	* cni/FrameCursor.cxx (create_frame_cursor): Update.
	
2007-02-27  Nurdin Premji  <npremji@redhat.com>

	* ProcInfo.java: Added error value.
	* cni/PtraceAccessors.cxx (findProcInfo): Set ProcInfo error value.
	* cni/UnwindNative.cxx: (findProcInfo): Return accessors procInfo error value.

2007-02-27  Andrew Cagney  <cagney@redhat.com>

	* FrameCursor.java (procOffset, getProcOffset): Delete.
	(procStart, getProcStart, procEnd, getProcEnd): Define.
	* cni/FrameCursor.cxx (create_frame_cursor): Set .procStart and
	.procSize.

2007-02-26  Nurdin Premji  <npremji@redhat.com>

	* cni/UnwindNative.cxx: (native_access_mem): Fixed to actually copy value back
	as native_access_reg does.
	(native_access_fpreg): Ditto.

	* cni/PtraceAccessors.cxx (getProcName): Added another logging message.
	Simplified return.
	(findProcInfo): Added another logging message.
	* cni/UnwindNative.cxx (native_get_proc_name): Fixed to properly copy over
	the proc name.
	(getProcName): Added another logging message.
	(destroyAddressSpace): Don't log RawData objects, they segfault.
	(isSignalFrame): Ditto.
	(setCachingPolicy): Ditto.
	(step): Ditto.

2007-02-23  Nurdin Premji  <npremji@redhat.com>

	* cni/PtraceAccessors.cxx: Added entry logging messages.
	* cni/UnwindNative.cxx: Ditto.

2007-02-23  Andrew Cagney  <cagney@redhat.com>

	* FrameCursor.java (procName, procOffset): Add.
	(getProcName, getProcOffset): Add.
	(demangledMethodName): Rename methodName.
	* cni/FrameCursor.cxx (create_frame_cursor): Update.

2007-02-23  Nurdin Premji  <npremji@redhat.com>

	* Accessors.java: Changed getProcName to take in maxNameSize parameter.
	* AddressSpace.java: Changed addressSpace to RawData.
	(finalize): Added.
	* Cursor.java: Reflect change in initRemote binding (returns cursor rather than
	setting cursor). Added logger. 
	(getProcName): Added.
	* PtraceAccessors.java: Reflect Accessor changes. Added logger. 
	(detachXXX): Added 
	* TestUnwind: Reflect changes in Accessor. 
	(testPtraceAccessors): Renamed, was testMyProcess.
	* Unwind.java: Changed bindings to reflect addressSpace is now RawData.
	(getProcName): Added.
	* UnwindNative.java: Ditto.
	* cni/PtraceAccessors.cxx: Added include statement for Accessors.h.
	(detachXXX): Added.
	(getProcName): Changed to use char[] rather than char pointer to store procName.
	* cni/UnwindNative.cxx: Reflect changes to AddressSpace.
	 (getProcName): Added.	

2007-02-21  Nurdin Premji  <npremji@redhat.com>

	* Cursor.java (Cursor): Throw Exception if initRemote fails.	
	* Unwind.java: Fix copyright year.
	* UnwindNative.java: Ditto.
	* AddressSpace.java: Ditto.	
	* ProcInfo.java: New.
	* ProcName.java: New.
	* PtraceAccessors: New.	
	* cni/PtraceAccessors.cxx: New.
	* Accessors.java: Use byte arrays instead of ByteBuffers.
	Use longs for address references.
	Use ProcInfo and ProcName classes
	* TestUnwind.java: Reflect Accessors changes. Added test case that uses
	PtraceAccessors.
	* cni/UnwindNative.cxx: Use ProcInfo and ProcName classes. 
	Reflect Accessor changes.

2007-02-16  Nurdin Premji  <npremji@redhat.com>

	* Unwind.java (getRegister): Changed to pass regNum as int rather than
	RawDataManaged.
	* UnwindNative.java: Ditto.
	* cni/UnwindNative.cxx: Ditto.

	* Cursor.java: Added.
	* UnwindNative.java: Ditto.	
	* AddressSpace.java: Ditto.	
	* Accessors.java: Ditto.
	* Unwind.java: Ditto.
	* ByteOrder.mkenum: Ditto.
	* CachingPolicy.mkenum: Ditto.
	* cni/UnwindNative.cxx: Ditto.

2007-01-24  Jan Kratochvil <jan.kratochvil@redhat.com>
	    Mike Cvet  <mcvet@redhat.com>

	* cni/FrameCursor.cxx (create_frame_cursor): Fix retrieved address.
	Temporarily remove assertion failing due to libunwind Bug 3917.

2007-01-23  Mike Cvet  <mcvet@redhat.com>

	* cni/StackTraceCreator.cxx (unwind_setup): Make sure innermost frame
	has a signal trampoline check.

2007-01-04  Nurdin Premji  <npremji@redhat.com>

	* StackTraceCreator.java (createStackTrace): Added logging messages.

2007-01-04  Mike Cvet  <mcvet@redhat.com>

	* cni/FrameCursor.cxx (create_frame_cursor): Resolve frame address
	from unw_get_proc_info independently of function name. Fixes #3791.
	* FrameCursor.java (FrameCursor): Demangle all method names immediately 
	after object creation. Moved demangler over from StackFrame.

2006-12-14  Adam Jocksch  <ajocksch@redhat.com>

	* FrameCursor.java (getAddress): Added.
	(setAddress): Added.
	(getCfa): Added.
	(isSignalFrame): Added.
	(setIsSignalFrame): Added.
	(getMethodName): Added.
	(get_reg): Added.
	(set_reg): Added.
	* cni/FrameCursor.cxx (native_init): Initializes method name, cfa, 
	isSignalFrame, and address.
	(get_reg): Added.
	(set_reg): Added.

2006-09-25  Alexandre Oliva  <aoliva@redhat.com>

	* RegisterAMD64.java: New class.

2006-09-19  Mike Cvet  <mcvet@redhat.com>

	* FrameCursor.java (getIsSignalFrame): Added.
	* cni/StackTraceCreator.cxx (unwind_setup): Added a check
	to see if the frame is a signal frame.

2006-09-16  Alexandre Oliva  <aoliva@redhat.com>

	* UnwindCallbacks.java (findProcInfo, putUnwindInfo,
	getDynInfoListAddr, getProcName): Remove, obsolete.
	(getPid): New.
	* StackTraceCreator.java (UnwindArgs::UPTarg,
	UnwindArgs::unwas): Change to pointer type.
	(arg_hash): New static fields.
	(pointer_to_long, dispatch_todo): New static native methods.
	(register_hashes, unregister_hashes, find_arg_from_long,
	catch_errors): New static methods.
	* cni/StackTraceCreator.cxx (find_unwargs): New.  Use it all over.
	(struct todo): New.
	(StackTraceCreator::dispatch_todo): New.
	(struct access_mem_todo): New.
	(access_mem): Turn into dispatch_todo wrapper.  Rename
	original to...
	(real_access_mem): ... this.  Unwrap incoming arguments.
	(get_proc_name): Use libunwind implementation.
	(StackTraceCreator::unwind_setup): Pass pid to _UPT_create.
	Register args hashes.
	(StackTraceCreator::unwind_finish): Unregister them.
	(StackTraceCreator::pointer_to_long): New.

2006-09-08	Alexandre Oliva	<aoliva@redhat.com>

	* StackTraceCreator.java (UnwindArgs): New inner class.
    (createStackTrace): Instantiate it.
    (unwind_setup): Take it as argument.
    (unwind_finish): New native method.
    * cni/StackTraceCreator.cxx: Include libunwind-ptrace.h and
    header for new inner class.
    (find_proc_info, put_unwind_info, get_dyn_info_list_addr): Use
    implementation from libunwind-ptrace.
    (access_mem, access_reg, access_fpreg, resume, get_proc_name):
    Adjust.
    (unwind_setup): Set up libunwind-ptrace opaque args and
    UnwindArgs fields that need native finalization.
    (unwind_finish): Finalize them.

2005-07-24  Adam Jocksch  <ajocksch@redhat.com>

	* UnwindCallbacks.java (getProcInfo): Now returns a boolean and takes the
	address of a pre-allocated proc_info object.
	* cni.StackTraceCreator.cxx (find_proc_info): Uses refactored callback and
	correctly passes the struct back to libunwind.
	(unwind_setup): Set caching to UNW_CACHE_PER_THREAD.

2005-07-13  Adam Jocksch  <ajocksch@redhat.com>

	* cni/StackTraceCreator.cxx (get_dyn_info_addr_list): Now sets dilap to 0
	if retval is zero rather than just setting the value it points to to
	zero.

	* RegisterX86.java: Added preamble.
	(getUnwindRegister): Now returns the string name of the register
	for use in getRegisterByName.
	* UnwindException.java: Added preamble.

2005-07-12  Adam Jocksch  <ajocksch@redhat.com>

	* RegisterX86.java: Added.

	* cni/StackTraceCreator.cxx (unwind_setup): Fixed typo.

	* FrameCursor.java (getNext): Renamed to getInner.
	(getPrevious): Renamed to getOuter.
	* cni/StackTraceCreator.cxx (unwind_setup): Changed to reflect updated
	variable names.

	* Frame.java: Renamed to FrameCursor.java.
	(getFuncEndAddr): Removed, should be part of a higher level usage.
	(getFuncStartAddr): Ditto.
	(getFunctionName): Ditto.
	(getPc): Ditto.
	(create_frame): Renamed to create_frame_cursor.
	* StackCreator.java (createStackTrace): Added javadoc comments.
	* cni/Frame.cxx: Renamed to FrameCursor.cxx.
	(create_frame): Renamed to create_frame_cursor, now only memcpy's the
	data in the provided cursor into it's own personal pointer.
	* cni/StackTraceCreator.cxx (unwind_setup): Now links FrameCursors together
	in the correct order (i.e. last->first), so that each frame's "previous"
	frame is the one immediately before it chronologically.

2005-07-11  Adam Jocksch  <ajocksch@redhat.com>

	* Frame.java: Created.
	* StackTraceCreator.java: Created.
	* UnwindException.java: Created.
	* UnwindCallbacks.java: Created.
	* cni/Frame.cxx: Created.
	* cni/StackTraceCreator.cxx: Created.
